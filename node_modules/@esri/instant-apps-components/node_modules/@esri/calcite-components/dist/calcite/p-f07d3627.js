/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
import{a as t}from"./p-b2ab0485.js";const r=["ar","bs","ca","cs","da","de","de-CH","el","en","en-AU","en-CA","en-GB","es","es-MX","et","fi","fr","fr-CH","he","hi","hr","hu","id","it","it-CH","ja","ko","lt","lv","mk","nb","nl","pl","pt","pt-PT","ro","ru","sk","sl","sr","sv","th","tr","uk","vi","zh-CN","zh-HK","zh-TW"];function n(t){return new Intl.NumberFormat(t,{minimumFractionDigits:0,maximumFractionDigits:20})}function e(t,r){if(t){const n=i(r),e=s(r),u=t.split(""),a=u.lastIndexOf(e),c=u.map(((t,r)=>t===n||t===e&&r!==a?"":t)).reduce(((t,r)=>t+r)).replace(e,".");return isNaN(Number(c))?t:c}return t}function i(t){const r=n(t).formatToParts(1234567.8).find((t=>"group"===t.type)).value;return 0===r.trim().length?" ":r}function s(t){const r=n(t).formatToParts(1234567.8).find((t=>"decimal"===t.type)).value;return 0===r.trim().length?" ":r}function u(r,e,u=!1){if(r){const a=Number(t(r));if(!isNaN(a))return n(e).formatToParts(a).map((({type:t,value:r})=>{switch(t){case"group":return u?i(e):"";case"decimal":return s(e);default:return r}})).reduce(((t,r)=>t+r))}return r}export{r as a,e as d,s as g,u as l}