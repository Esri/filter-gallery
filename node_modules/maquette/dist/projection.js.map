{"version":3,"file":"projection.js","sourceRoot":"","sources":["../src/projection.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Exports here are NOT re-exported to maquette\n */\nimport { Projection, ProjectionOptions, VNode, VNodeProperties } from \"./interfaces\";\n\nconst NAMESPACE_W3 = \"http://www.w3.org/\";\nconst NAMESPACE_SVG = `${NAMESPACE_W3}2000/svg`;\nconst NAMESPACE_XLINK = `${NAMESPACE_W3}1999/xlink`;\n\nlet emptyArray = <VNode[]>[];\n\nexport let extend = <T>(base: T, overrides: any): T => {\n  let result = {} as any;\n  Object.keys(base).forEach((key) => {\n    result[key] = (base as any)[key];\n  });\n  if (overrides) {\n    Object.keys(overrides).forEach((key) => {\n      result[key] = overrides[key];\n    });\n  }\n  return result;\n};\n\nlet same = (vnode1: VNode, vnode2: VNode) => {\n  if (vnode1.vnodeSelector !== vnode2.vnodeSelector) {\n    return false;\n  }\n  if (vnode1.properties && vnode2.properties) {\n    if (vnode1.properties.key !== vnode2.properties.key) {\n      return false;\n    }\n    return vnode1.properties.bind === vnode2.properties.bind;\n  }\n  return !vnode1.properties && !vnode2.properties;\n};\n\nlet checkStyleValue = (styleValue: unknown) => {\n  if (typeof styleValue !== \"string\") {\n    throw new Error(\"Style values must be strings\");\n  }\n};\n\nlet findIndexOfChild = (children: VNode[], sameAs: VNode, start: number) => {\n  if (sameAs.vnodeSelector !== \"\") {\n    // Never scan for text-nodes\n    for (let i = start; i < children.length; i++) {\n      if (same(children[i], sameAs)) {\n        return i;\n      }\n    }\n  }\n  return -1;\n};\n\nlet checkDistinguishable = (\n  childNodes: VNode[],\n  indexToCheck: number,\n  parentVNode: VNode,\n  operation: string\n) => {\n  let childNode = childNodes[indexToCheck];\n  if (childNode.vnodeSelector === \"\") {\n    return; // Text nodes need not be distinguishable\n  }\n  let properties = childNode.properties;\n  let key = properties\n    ? properties.key === undefined\n      ? properties.bind\n      : properties.key\n    : undefined;\n  if (!key) {\n    // A key is just assumed to be unique\n    for (let i = 0; i < childNodes.length; i++) {\n      if (i !== indexToCheck) {\n        let node = childNodes[i];\n        if (same(node, childNode)) {\n          throw {\n            error: new Error(\n              `${parentVNode.vnodeSelector} had a ${childNode.vnodeSelector} child ${\n                operation === \"added\" ? operation : \"removed\"\n              }, but there is now more than one. You must add unique key properties to make them distinguishable.`\n            ),\n            parentNode: parentVNode,\n            childNode,\n          };\n        }\n      }\n    }\n  }\n};\n\nlet nodeAdded = (vNode: VNode) => {\n  if (vNode.properties) {\n    let enterAnimation = vNode.properties.enterAnimation;\n    if (enterAnimation) {\n      enterAnimation(vNode.domNode as Element, vNode.properties);\n    }\n  }\n};\n\nlet removedNodes: VNode[] = [];\nlet requestedIdleCallback = false;\n\nlet visitRemovedNode = (node: VNode) => {\n  (node.children || []).forEach(visitRemovedNode);\n\n  if (node.properties && node.properties.afterRemoved) {\n    node.properties.afterRemoved.apply(node.properties.bind || node.properties, [\n      <Element>node.domNode,\n    ]);\n  }\n};\n\nlet processPendingNodeRemovals = (): void => {\n  requestedIdleCallback = false;\n\n  removedNodes.forEach(visitRemovedNode);\n  removedNodes.length = 0;\n};\n\nlet scheduleNodeRemoval = (vNode: VNode): void => {\n  removedNodes.push(vNode);\n\n  if (!requestedIdleCallback) {\n    requestedIdleCallback = true;\n    if (typeof window !== \"undefined\" && \"requestIdleCallback\" in window) {\n      window.requestIdleCallback(processPendingNodeRemovals, { timeout: 16 });\n    } else {\n      setTimeout(processPendingNodeRemovals, 16);\n    }\n  }\n};\n\nlet nodeToRemove = (vNode: VNode) => {\n  let domNode: Node = vNode.domNode!;\n  if (vNode.properties) {\n    let exitAnimation = vNode.properties.exitAnimation;\n    if (exitAnimation) {\n      (domNode as HTMLElement).style.pointerEvents = \"none\";\n      let removeDomNode = () => {\n        if (domNode.parentNode) {\n          domNode.parentNode.removeChild(domNode);\n          scheduleNodeRemoval(vNode);\n        }\n      };\n      exitAnimation(domNode as Element, removeDomNode, vNode.properties);\n      return;\n    }\n  }\n  if (domNode.parentNode) {\n    domNode.parentNode.removeChild(domNode);\n    scheduleNodeRemoval(vNode);\n  }\n};\n\nlet setProperties = (\n  domNode: Node,\n  properties: VNodeProperties | undefined,\n  projectionOptions: ProjectionOptions\n) => {\n  if (!properties) {\n    return;\n  }\n  let eventHandlerInterceptor = projectionOptions.eventHandlerInterceptor;\n  let propNames = Object.keys(properties);\n  let propCount = propNames.length;\n  for (let i = 0; i < propCount; i++) {\n    let propName = propNames[i];\n    let propValue = properties[propName];\n    if (propName === \"className\") {\n      throw new Error('Property \"className\" is not supported, use \"class\".');\n    } else if (propName === \"class\") {\n      toggleClasses(domNode as HTMLElement, propValue as string, true);\n    } else if (propName === \"classes\") {\n      // object with string keys and boolean values\n      let classNames = Object.keys(propValue);\n      let classNameCount = classNames.length;\n      for (let j = 0; j < classNameCount; j++) {\n        let className = classNames[j];\n        if (propValue[className]) {\n          (domNode as Element).classList.add(className);\n        }\n      }\n    } else if (propName === \"styles\") {\n      // object with string keys and string (!) values\n      let styleNames = Object.keys(propValue);\n      let styleCount = styleNames.length;\n      for (let j = 0; j < styleCount; j++) {\n        let styleName = styleNames[j];\n        let styleValue = propValue[styleName];\n        if (styleValue) {\n          checkStyleValue(styleValue);\n          projectionOptions.styleApplyer!(<HTMLElement>domNode, styleName, styleValue);\n        }\n      }\n    } else if (propName !== \"key\" && propValue !== null && propValue !== undefined) {\n      let type = typeof propValue;\n      if (type === \"function\") {\n        if (propName.lastIndexOf(\"on\", 0) === 0) {\n          // lastIndexOf(,0)===0 -> startsWith\n          if (eventHandlerInterceptor) {\n            propValue = eventHandlerInterceptor(propName, propValue, domNode, properties); // intercept eventhandlers\n          }\n          if (propName === \"oninput\") {\n            (function () {\n              // record the evt.target.value, because IE and Edge sometimes do a requestAnimationFrame between changing value and running oninput\n              let oldPropValue = propValue;\n              propValue = function (this: HTMLElement, evt: Event) {\n                oldPropValue.apply(this, [evt]);\n                (evt.target as any)[\"oninput-value\"] = (evt.target as HTMLInputElement).value; // may be HTMLTextAreaElement as well\n              };\n            })();\n          }\n        }\n        (domNode as any)[propName] = propValue;\n      } else if (projectionOptions.namespace === NAMESPACE_SVG) {\n        if (propName === \"href\") {\n          (domNode as Element).setAttributeNS(NAMESPACE_XLINK, propName, propValue);\n        } else {\n          // all SVG attributes are read-only in DOM, so...\n          (domNode as Element).setAttribute(propName, propValue);\n        }\n      } else if (type === \"string\" && propName !== \"value\" && propName !== \"innerHTML\") {\n        (domNode as Element).setAttribute(propName, propValue);\n      } else {\n        (domNode as any)[propName] = propValue;\n      }\n    }\n  }\n};\n\nlet addChildren = (\n  domNode: Node,\n  children: VNode[] | undefined,\n  projectionOptions: ProjectionOptions\n) => {\n  if (!children) {\n    return;\n  }\n  for (let child of children) {\n    createDom(child, domNode, undefined, projectionOptions);\n  }\n};\n\nexport let initPropertiesAndChildren = (\n  domNode: Node,\n  vnode: VNode,\n  projectionOptions: ProjectionOptions\n): void => {\n  addChildren(domNode, vnode.children, projectionOptions); // children before properties, needed for value property of <select>.\n  if (vnode.text) {\n    domNode.textContent = vnode.text;\n  }\n  setProperties(domNode, vnode.properties, projectionOptions);\n  if (vnode.properties && vnode.properties.afterCreate) {\n    vnode.properties.afterCreate.apply(vnode.properties.bind || vnode.properties, [\n      domNode as Element,\n      projectionOptions,\n      vnode.vnodeSelector,\n      vnode.properties,\n      vnode.children,\n    ]);\n  }\n};\n\nexport let createDom = (\n  vnode: VNode,\n  parentNode: Node,\n  insertBefore: Node | null | undefined,\n  projectionOptions: ProjectionOptions\n): void => {\n  let domNode: Node | undefined;\n  let start = 0;\n  let vnodeSelector = vnode.vnodeSelector;\n  let doc = parentNode.ownerDocument!;\n  if (vnodeSelector === \"\") {\n    domNode = vnode.domNode = doc.createTextNode(vnode.text!);\n    if (insertBefore !== undefined) {\n      parentNode.insertBefore(domNode, insertBefore);\n    } else {\n      parentNode.appendChild(domNode);\n    }\n  } else {\n    for (let i = 0; i <= vnodeSelector.length; ++i) {\n      let c = vnodeSelector.charAt(i);\n      if (i === vnodeSelector.length || c === \".\" || c === \"#\") {\n        let type = vnodeSelector.charAt(start - 1);\n        let found = vnodeSelector.slice(start, i);\n        if (type === \".\") {\n          (domNode! as HTMLElement).classList.add(found);\n        } else if (type === \"#\") {\n          (domNode! as Element).id = found;\n        } else {\n          if (found === \"svg\") {\n            projectionOptions = extend(projectionOptions, {\n              namespace: NAMESPACE_SVG,\n            });\n          }\n          if (projectionOptions.namespace !== undefined) {\n            domNode = vnode.domNode = doc.createElementNS(projectionOptions.namespace, found);\n          } else {\n            domNode = vnode.domNode = vnode.domNode || doc.createElement(found);\n            if (found === \"input\" && vnode.properties && vnode.properties.type !== undefined) {\n              // IE8 and older don't support setting input type after the DOM Node has been added to the document\n              (domNode as Element).setAttribute(\"type\", vnode.properties.type);\n            }\n          }\n          if (insertBefore !== undefined) {\n            parentNode.insertBefore(domNode, insertBefore);\n          } else if (domNode.parentNode !== parentNode) {\n            parentNode.appendChild(domNode);\n          }\n        }\n        start = i + 1;\n      }\n    }\n    initPropertiesAndChildren(domNode!, vnode, projectionOptions);\n  }\n};\n\nlet updateDom: (previous: VNode, vnode: VNode, projectionOptions: ProjectionOptions) => boolean;\n\n/**\n * Adds or removes classes from an Element\n * @param domNode the element\n * @param classes a string separated list of classes\n * @param on true means add classes, false means remove\n */\nlet toggleClasses = (domNode: HTMLElement, classes: string | null | undefined, on: boolean) => {\n  if (!classes) {\n    return;\n  }\n  classes.split(\" \").forEach((classToToggle) => {\n    if (classToToggle) {\n      domNode.classList.toggle(classToToggle, on);\n    }\n  });\n};\n\nlet updateProperties = (\n  domNode: Node,\n  previousProperties: VNodeProperties | undefined,\n  properties: VNodeProperties | undefined,\n  projectionOptions: ProjectionOptions\n) => {\n  if (!properties) {\n    return;\n  }\n  let propertiesUpdated = false;\n  let propNames = Object.keys(properties);\n  let propCount = propNames.length;\n  for (let i = 0; i < propCount; i++) {\n    let propName = propNames[i];\n    // assuming that properties will be nullified instead of missing is by design\n    let propValue = properties[propName];\n    let previousValue = previousProperties![propName];\n    if (propName === \"class\") {\n      if (previousValue !== propValue) {\n        toggleClasses(domNode as HTMLElement, previousValue, false);\n        toggleClasses(domNode as HTMLElement, propValue, true);\n      }\n    } else if (propName === \"classes\") {\n      let classList = (domNode as Element).classList;\n      let classNames = Object.keys(propValue);\n      let classNameCount = classNames.length;\n      for (let j = 0; j < classNameCount; j++) {\n        let className = classNames[j];\n        let on = !!propValue[className];\n        let previousOn = !!previousValue[className];\n        if (on === previousOn) {\n          continue;\n        }\n        propertiesUpdated = true;\n        if (on) {\n          classList.add(className);\n        } else {\n          classList.remove(className);\n        }\n      }\n    } else if (propName === \"styles\") {\n      let styleNames = Object.keys(propValue);\n      let styleCount = styleNames.length;\n      for (let j = 0; j < styleCount; j++) {\n        let styleName = styleNames[j];\n        let newStyleValue = propValue[styleName];\n        let oldStyleValue = previousValue[styleName];\n        if (newStyleValue === oldStyleValue) {\n          continue;\n        }\n        propertiesUpdated = true;\n        if (newStyleValue) {\n          checkStyleValue(newStyleValue);\n          projectionOptions.styleApplyer!(domNode as HTMLElement, styleName, newStyleValue);\n        } else {\n          projectionOptions.styleApplyer!(domNode as HTMLElement, styleName, \"\");\n        }\n      }\n    } else {\n      if (!propValue && typeof previousValue === \"string\") {\n        propValue = \"\";\n      }\n      if (propName === \"value\") {\n        // value can be manipulated by the user directly and using event.preventDefault() is not an option\n        let domValue = (domNode as any)[propName];\n        if (\n          domValue !== propValue && // The 'value' in the DOM tree !== newValue\n          ((domNode as any)[\"oninput-value\"]\n            ? domValue === (domNode as any)[\"oninput-value\"] // If the last reported value to 'oninput' does not match domValue, do nothing and wait for oninput\n            : propValue !== previousValue) // Only update the value if the vdom changed\n        ) {\n          // The edge cases are described in the tests\n          (domNode as any)[propName] = propValue; // Reset the value, even if the virtual DOM did not change\n          (domNode as any)[\"oninput-value\"] = undefined;\n        } // else do not update the domNode, otherwise the cursor position would be changed\n        if (propValue !== previousValue) {\n          propertiesUpdated = true;\n        }\n      } else if (propValue !== previousValue) {\n        let type = typeof propValue;\n        if (type !== \"function\" || !projectionOptions.eventHandlerInterceptor) {\n          // Function updates are expected to be handled by the EventHandlerInterceptor\n          if (projectionOptions.namespace === NAMESPACE_SVG) {\n            if (propName === \"href\") {\n              (domNode as Element).setAttributeNS(NAMESPACE_XLINK, propName, propValue);\n            } else {\n              // all SVG attributes are read-only in DOM, so...\n              (domNode as Element).setAttribute(propName, propValue);\n            }\n          } else if (type === \"string\" && propName !== \"innerHTML\") {\n            if (propName === \"role\" && propValue === \"\") {\n              (domNode as any).removeAttribute(propName);\n            } else {\n              (domNode as Element).setAttribute(propName, propValue);\n            }\n          } else if ((domNode as any)[propName] !== propValue) {\n            // Comparison is here for side-effects in Edge with scrollLeft and scrollTop\n            (domNode as any)[propName] = propValue;\n          }\n\n          propertiesUpdated = true;\n        }\n      }\n    }\n  }\n  return propertiesUpdated;\n};\n\nlet updateChildren = (\n  vnode: VNode,\n  domNode: Node,\n  oldChildren: VNode[] | undefined,\n  newChildren: VNode[] | undefined,\n  projectionOptions: ProjectionOptions\n) => {\n  if (oldChildren === newChildren) {\n    return false;\n  }\n  oldChildren = oldChildren || emptyArray;\n  newChildren = newChildren || emptyArray;\n  let oldChildrenLength = oldChildren.length;\n  let newChildrenLength = newChildren.length;\n\n  let oldIndex = 0;\n  let newIndex = 0;\n  let i: number;\n  let textUpdated = false;\n  while (newIndex < newChildrenLength) {\n    let oldChild = oldIndex < oldChildrenLength ? oldChildren[oldIndex] : undefined;\n    let newChild = newChildren[newIndex];\n    if (oldChild !== undefined && same(oldChild, newChild)) {\n      textUpdated = updateDom(oldChild, newChild, projectionOptions) || textUpdated;\n      oldIndex++;\n    } else {\n      let findOldIndex = findIndexOfChild(oldChildren, newChild, oldIndex + 1);\n      if (findOldIndex >= 0) {\n        // Remove preceding missing children\n        for (i = oldIndex; i < findOldIndex; i++) {\n          nodeToRemove(oldChildren[i]);\n          checkDistinguishable(oldChildren, i, vnode, \"removed\");\n        }\n        textUpdated =\n          updateDom(oldChildren[findOldIndex], newChild, projectionOptions) || textUpdated;\n        oldIndex = findOldIndex + 1;\n      } else {\n        // New child\n        createDom(\n          newChild,\n          domNode,\n          oldIndex < oldChildrenLength ? oldChildren[oldIndex].domNode : undefined,\n          projectionOptions\n        );\n        nodeAdded(newChild);\n        checkDistinguishable(newChildren, newIndex, vnode, \"added\");\n      }\n    }\n    newIndex++;\n  }\n  if (oldChildrenLength > oldIndex) {\n    // Remove child fragments\n    for (i = oldIndex; i < oldChildrenLength; i++) {\n      nodeToRemove(oldChildren[i]);\n      checkDistinguishable(oldChildren, i, vnode, \"removed\");\n    }\n  }\n  return textUpdated;\n};\n\nupdateDom = (previous, vnode, projectionOptions) => {\n  let domNode = previous.domNode!;\n  let textUpdated = false;\n  if (previous === vnode) {\n    return false; // By contract, VNode objects may not be modified anymore after passing them to maquette\n  }\n  let updated = false;\n  if (vnode.vnodeSelector === \"\") {\n    if (vnode.text !== previous.text) {\n      let newTextNode = domNode.ownerDocument!.createTextNode(vnode.text!);\n      domNode.parentNode!.replaceChild(newTextNode, domNode);\n      vnode.domNode = newTextNode;\n      textUpdated = true;\n      return textUpdated;\n    }\n    vnode.domNode = domNode;\n  } else {\n    if (vnode.vnodeSelector.lastIndexOf(\"svg\", 0) === 0) {\n      // lastIndexOf(needle,0)===0 means StartsWith\n      projectionOptions = extend(projectionOptions, {\n        namespace: NAMESPACE_SVG,\n      });\n    }\n    if (previous.text !== vnode.text) {\n      updated = true;\n      if (vnode.text === undefined) {\n        domNode.removeChild(domNode.firstChild!); // the only textnode presumably\n      } else {\n        domNode.textContent = vnode.text;\n      }\n    }\n    vnode.domNode = domNode;\n    updated =\n      updateChildren(vnode, domNode, previous.children, vnode.children, projectionOptions) ||\n      updated;\n    updated =\n      updateProperties(domNode, previous.properties, vnode.properties, projectionOptions) ||\n      updated;\n    if (vnode.properties && vnode.properties.afterUpdate) {\n      vnode.properties.afterUpdate.apply(vnode.properties.bind || vnode.properties, [\n        <Element>domNode,\n        projectionOptions,\n        vnode.vnodeSelector,\n        vnode.properties,\n        vnode.children,\n      ]);\n    }\n  }\n  if (updated && vnode.properties && vnode.properties.updateAnimation) {\n    vnode.properties.updateAnimation(<Element>domNode, vnode.properties, previous.properties);\n  }\n  return textUpdated;\n};\n\nexport let createProjection = (vnode: VNode, projectionOptions: ProjectionOptions): Projection => {\n  return {\n    getLastRender: () => vnode,\n    update: (updatedVnode: VNode) => {\n      if (vnode.vnodeSelector !== updatedVnode.vnodeSelector) {\n        throw new Error(\n          \"The selector for the root VNode may not be changed. (consider using dom.merge and add one extra level to the virtual DOM)\"\n        );\n      }\n      let previousVNode = vnode;\n      vnode = updatedVnode;\n      updateDom(previousVNode, updatedVnode, projectionOptions);\n    },\n    domNode: <Element>vnode.domNode,\n  };\n};\n"]}