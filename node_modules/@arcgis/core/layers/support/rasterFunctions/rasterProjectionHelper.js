/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import"../../../geometry.js";import e from"../../../core/Error.js";import{isNone as t,isSome as n}from"../../../core/maybe.js";import{getMetersPerUnitForSR as i}from"../../../core/unitUtils.js";import{e as o,f as r,g as s,h as a,j as l}from"../../../chunks/pe.js";import{canProjectWithoutEngine as c,isLoaded as f,load as u,getTransformation as m,project as x}from"../../../geometry/projection.js";import h from"../../../geometry/Extent.js";import p from"../../../geometry/Point.js";import g from"../../../geometry/SpatialReference.js";function y(e,t,n){return!c(e,t,n)}function d(t,n,i){const o=y(t,n,i);if(o&&!f())throw new e("rasterprojectionhelper-project","projection engine is not loaded");return o}const M=function(e,t,n,i=0){if(1===n[0])return[0,0];let o=1,r=-1,s=1,a=-1;for(let g=0;g<e.length;g+=2)isNaN(e[g])||(o=o>e[g]?e[g]:o,r=r>e[g]?r:e[g],s=s>e[g+1]?e[g+1]:s,a=a>e[g+1]?a:e[g+1]);const{cols:l,rows:c}=t,f=(r-o)/l/n[0],u=(a-s)/c/n[1],m=2*i;let x=0,h=!1,p=[0,0];for(let g=0;g<l-3;g++){for(let t=0;t<c-3;t++){const n=g*c*2+2*t,i=(e[n]+e[n+4]+e[n+4*c]+e[n+4*c+4])/4,o=(e[n+1]+e[n+5]+e[n+4*c+1]+e[n+4*c+5])/4,r=Math.abs((i-e[n+2*c+2])/f),s=Math.abs((o-e[n+2*c+3])/u);if(r+s>x&&(x=r+s,p=[r,s]),m&&x>m){h=!0;break}}if(h)break}return p},w={3395:20037508.342789244,3410:17334193.943686873,3857:20037508.342788905,3975:17367530.445161372,4087:20037508.342789244,4088:20015108.787169147,6933:17367530.445161372,32662:20037508.342789244,53001:20015086.79602057,53002:10007543.39801029,53003:20015086.79602057,53004:20015086.79602057,53016:14152803.599503474,53017:17333573.624304302,53034:20015086.79602057,53079:20015114.352186374,53080:20015114.352186374,54001:20037508.342789244,54002:10018754.171394624,54003:20037508.342789244,54004:20037508.342789244,54016:14168658.027268292,54017:17367530.44516137,54034:20037508.342789244,54079:20037508.342789244,54080:20037508.342789244,54100:20037508.342789244,54101:20037508.342789244},R=32,P=4,S=P,b=new Map,E=new Map;async function G(){if(f())return null;await u()}function k(e,t,n){if(!d(e.spatialReference,t))return null;return n?m(t,e.spatialReference,e):m(e.spatialReference,t,e)}function N(e,o,r,s=null){const a=e.spatialReference;if(a.equals(o))return e;d(a,o,s);const l=r.center,c=new h({xmin:l.x-e.x/2,xmax:l.x+e.x/2,ymin:l.y-e.y/2,ymax:l.y+e.y/2,spatialReference:a}),f=x(c,o,s);if(t(f))return null;const u={x:f.xmax-f.xmin,y:f.ymax-f.ymin},m=L(o);if(n(m)&&u.x>=m){const t=i(a)/i(o);u.x=e.x*t,u.y=e.y*t}return u}function v(e,t=.01){return i(e)?t/i(e):0}function T(e,t,i=null,o=!0){const r=e.spatialReference;if(r.equals(t))return e;d(r,t,i);const s=x(e,t,i);if(!o||!s)return s;const a=q(r,!0),l=q(t,!0),c=v(r);return c&&n(a)&&n(l)&&(s.x>0&&Math.abs(e.x-a[0])<c?s.x-=l[1]-l[0]:s.x<0&&Math.abs(e.x-a[1])<c&&(s.x+=l[1]-l[0])),s}function C(e){const{inSR:t,outSR:i,datumTransformation:o,preferPE:r}=e;if(t.equals(i)){const{points:t}=A(e,null);return t}if(t.isWebMercator&&i.isWGS84||t.isWGS84&&i.isWebMercator)return z(e);if(d(t,i,o)&&r){if(t.isGeographic)return j(e);const i=W(t);if(n(i))return j(e)}return _(e)}function _(e){const{points:t}=A(e,null),n=t.map((t=>new p(t[0],t[1],e.inSR)));return x(n,e.outSR,e.datumTransformation).map((e=>e?[e.x,e.y]:[NaN,NaN]))}function j(e){const{inSR:t,outSR:i,datumTransformation:l}=e,c=W(t),{points:f,mask:u}=A(e,c);if(!t.isGeographic){const e=t.wkid?o.coordsys(t.wkid):o.fromString(t.isGeographic?r.PE_TYPE_GEOGCS:r.PE_TYPE_PROJCS,t.wkt);s.projToGeog(e,f.length,f)}if(n(l)&&l.steps.length&&l.steps.forEach((e=>{const t=e.wkid?o.geogtran(e.wkid):o.fromString(r.PE_TYPE_GEOGTRAN,e.wkt);a.geogToGeog(t,f.length,f,null,e.isInverse?r.PE_TRANSFORM_2_TO_1:r.PE_TRANSFORM_1_TO_2)})),!i.isGeographic){const e=W(i,!0),t=n(e)&&e.isEnvelope?[e.bbox[1],e.bbox[3]]:[-90,90];I(f,t);const a=i.wkid?o.coordsys(i.wkid):o.fromString(i.isGeographic?r.PE_TYPE_GEOGCS:r.PE_TYPE_PROJCS,i.wkt);s.geogToProj(a,f.length,f)}let m=f;if(u&&f.length!==u.length){m=[];for(let e=0,t=0;e<u.length;e++)u[e]?m.push(f[t++]):m.push([NaN,NaN])}return m}function z(e){const{cols:t,rows:n,xres:i,yres:o,usePixelCenter:r,inSR:s,outSR:a}=e;let{xmin:l,ymax:c}=e;r&&(l+=i/2,c-=o/2);const f=[],u=[],m=Math.max(t,n);for(let g=0;g<m;g++){const e=l+i*Math.min(t,g),r=c-o*Math.min(n,g),m=x(new p({x:e,y:r,spatialReference:s}),a);g<=t&&f.push(m.x),g<=n&&u.push(m.y)}const h=[];for(let x=0;x<t;x++)for(let e=0;e<n;e++)h.push([f[x],u[e]]);return h}function W(e,t=!1){let n=e.wkid||e.wkt;if(!n||e.isGeographic)return null;if(n=String(n),b.has(n)){const e=b.get(n);return t?null==e?void 0:e.gcs:null==e?void 0:e.pcs}const i=e.wkid?o.coordsys(e.wkid):o.fromString(e.isGeographic?r.PE_TYPE_GEOGCS:r.PE_TYPE_PROJCS,e.wkt),s=O(i,v(e,1e-4)),a=O(i,0,!0);return b.set(n,{pcs:s,gcs:a}),t?a:s}function O(e,t=0,n=!1){const i=l.generate(e),o=n?e.horizonGcsGenerate():e.horizonPcsGenerate();if(null==o||!o.length)return null;let r=!1,s=o.find((e=>1===e.getInclusive()&&1===e.getKind()));if(!s){if(s=o.find((e=>1===e.getInclusive()&&0===e.getKind())),!s)return null;r=!0}const a=i.isPannableRectangle(),c=s.getCoord();if(r)return{isEnvelope:r,isPannable:a,vertices:c,coef:null,bbox:[c[0][0]-t,c[0][1]-t,c[1][0]+t,c[1][1]+t]};let f=0;const u=[];let[m,x]=c[0],[h,p]=c[0];for(let l=0,g=c.length;l<g;l++){f++,f===g&&(f=0);const[e,t]=c[l],[n,i]=c[f];if(i===t)u.push([e,n,t,i,2]);else{const o=(n-e)/(i-t||1e-4),r=e-o*t;t<i?u.push([o,r,t,i,0]):u.push([o,r,i,t,1])}m=m<e?m:e,x=x<t?x:t,h=h>e?h:e,p=p>t?p:t}return{isEnvelope:!1,isPannable:a,vertices:c,coef:u,bbox:[m,x,h,p]}}function A(e,t){const i=[],{cols:o,rows:r,xres:s,yres:a,usePixelCenter:l}=e;let{xmin:c,ymax:f}=e;if(l&&(c+=s/2,f-=a/2),!n(t)){for(let e=0;e<o;e++)for(let t=0;t<r;t++)i.push([c+s*e,f-a*t]);return{points:i}}const u=new Uint8Array(o*r);if(t.isEnvelope){const{bbox:[e,n,l,m]}=t;for(let x=0,h=0;x<o;x++){const o=c+s*x,p=t.isPannable||o>=e&&o<=l;for(let e=0;e<r;e++,h++){const t=f-a*e;p&&t>=n&&t<=m&&(i.push([o,t]),u[h]=1)}}return{points:i,mask:u}}const{coef:m}=t,x=[];for(let n=0;n<r;n++){const e=f-a*n,t=[],i=[];for(let n=0;n<m.length;n++){const[o,r,s,a,l]=m[n];if(e===s&&s===a)t.push(o),t.push(r),i.push(2),i.push(2);else if(e>=s&&e<=a){const n=o*e+r;t.push(n),i.push(l)}}let o=t;if(t.length>2){let e=2===i[0]?0:i[0],n=t[0];o=[];for(let r=1;r<i.length;r++)2===i[r]&&r!==i.length-1||(i[r]!==e&&(o.push(0===e?Math.min(n,t[r-1]):Math.max(n,t[r-1])),e=i[r],n=t[r]),r===i.length-1&&o.push(0===i[r]?Math.min(n,t[r]):Math.max(n,t[r])));o.sort(((e,t)=>e-t))}else t[0]>t[1]&&(o=[t[1],t[0]]);x.push(o)}for(let n=0,h=0;n<o;n++){const e=c+s*n;for(let t=0;t<r;t++,h++){const n=f-a*t,o=x[t];if(2===o.length)e>=o[0]&&e<=o[1]&&(i.push([e,n]),u[h]=1);else if(o.length>2){let t=!1;for(let n=0;n<o.length;n+=2)if(e>=o[n]&&e<=o[n+1]){t=!0;break}t&&(i.push([e,n]),u[h]=1)}}}return{points:i,mask:u}}function I(e,t){const[n,i]=t;for(let o=0;o<e.length;o++){const t=e[o][1];(t<n||t>i)&&(e[o]=[NaN,NaN])}}function Y(e){const t=L(e[0].spatialReference);if(e.length<2||!n(t))return e[0];let{xmin:i,xmax:o,ymin:r,ymax:s}=e[0];for(let n=1;n<e.length;n++){const i=e[n];o=i.xmax+t*n,r=Math.min(r,i.ymin),s=Math.max(s,i.ymax)}return new h({xmin:i,xmax:o,ymin:r,ymax:s,spatialReference:e[0].spatialReference})}function B(e,n,i=null,o=!0){if(e.spatialReference.equals(n))return e;const r=X(e),s=L(e.spatialReference,!0),a=L(n);if(0===r||t(s)||t(a))return F(e,n,i,o);const l=e.clone().normalize();if(1===l.length&&e.xmax<s&&e.xmax-s/2>v(e.spatialReference)){const{xmin:t,xmax:n}=e;for(let i=0;i<=r;i++){const o=0===i?t:-s/2,a=i===r?n-s*i:s/2;l[i]=new h({xmin:o,xmax:a,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference})}}return Y(l.map((e=>F(e,n,i,o))).filter((e=>!!e)))}function F(e,n,i=null,o=!0,r=!0){const s=e.spatialReference;if(s.equals(n))return e;d(s,n,i);const a=x(e,n,i);if(r&&n.isWebMercator&&a&&(a.ymax=Math.min(20037508.342787,a.ymax),a.ymin=Math.max(-20037508.342787,a.ymin),a.ymin>=a.ymax))return null;if(!o||!a)return a;const l=q(s,!0),c=q(n,!0);if(t(l)||t(c))return a;const f=v(s,.001),u=v(s,500),m=v(n,.001);if(Math.abs(a.xmin-c[0])<m&&Math.abs(a.xmax-c[1])<m){const t=Math.abs(e.xmin-l[0]),o=Math.abs(l[1]-e.xmax);if(t<f&&o>u){a.xmin=c[0];const t=[];t.push(new p(e.xmax,e.ymin,s)),t.push(new p(e.xmax,(e.ymin+e.ymax)/2,s)),t.push(new p(e.xmax,e.ymax,s));const o=t.map((e=>T(e,n,i))).filter((e=>!isNaN(null==e?void 0:e.x))).map((e=>e.x));a.xmax=Math.max.apply(null,o)}if(o<f&&t>u){a.xmax=c[1];const t=[];t.push(new p(e.xmin,e.ymin,s)),t.push(new p(e.xmin,(e.ymin+e.ymax)/2,s)),t.push(new p(e.xmin,e.ymax,s));const o=t.map((e=>T(e,n,i))).filter((e=>!isNaN(null==e?void 0:e.x))).map((e=>e.x));a.xmin=Math.min.apply(null,o)}}else{const e=v(n,.001);Math.abs(a.xmin-c[0])<e&&(a.xmin=c[0]),Math.abs(a.xmax-c[1])<e&&(a.xmax=c[1])}return a}function L(e,t=!1){const n=t?20037508.342787:20037508.342788905;return e.isWebMercator?2*n:e.wkid&&e.isGeographic?360:2*w[e.wkid]||null}function q(e,t=!1){if(e.isGeographic)return[-180,180];const i=L(e,t);return n(i)?[-i/2,i/2]:null}function J(e,t,n,i){let o=(e-t)/n;return o-Math.floor(o)!=0?o=Math.floor(o):i&&(o-=1),o}function X(e,t=!1){const i=L(e.spatialReference);if(!n(i))return 0;const o=t?0:-(i/2),r=v(e.spatialReference),s=!t&&Math.abs(e.xmax-i/2)<r?i/2:e.xmax,a=!t&&Math.abs(e.xmin+i/2)<r?-i/2:e.xmin;return J(s,o,i,!0)-J(a,o,i,!1)}function K(e){const t=e.storageInfo.origin.x,i=L(e.spatialReference,!0);if(!n(i))return{originX:t,halfWorldWidth:null,pyramidsInfo:null};const o=i/2,{nativePixelSize:r,storageInfo:s,extent:a}=e,{maximumPyramidLevel:l,blockWidth:c,pyramidScalingFactor:f}=s;let u=r.x;const m=[],x=n(e.transform)&&"gcs-shift"===e.transform.type,h=t+(x?0:o),p=x?i-t:o-t;for(let n=0;n<=l;n++){const e=(a.xmax-t)/u/c,n=e-Math.floor(e)==0?e:Math.ceil(e),i=p/u/c,o=i-Math.floor(i)==0?i:Math.ceil(i),r=Math.floor(h/u/c),s=Math.round(h/u)%c,l=(c-Math.round(p/u)%c)%c;m.push({resolutionX:u,blockWidth:c,datsetColumnCount:n,worldColumnCountFromOrigin:o,leftMargin:s,rightPadding:l,originColumnOffset:r}),u*=f}return{originX:t,halfWorldWidth:o,pyramidsInfo:m,hasGCSSShiftTransform:x}}function U(e){if(!e||e.isGeographic)return e;const t=String(e.wkid||e.wkt);let n;if(E.has(t))n=E.get(t);else{n=(e.wkid?o.coordsys(e.wkid):o.fromString(r.PE_TYPE_PROJCS,e.wkt)).getGeogcs().getCode(),E.set(t,n)}return new g({wkid:n})}function D(e){const t=e.isAdaptive&&null==e.spacing;let i=e.spacing||[R,R],o=H(e),r={cols:o.size[0]+1,rows:o.size[1]+1};const s=o.outofBoundPointCount>0&&o.outofBoundPointCount<o.offsets.length/2;let a=o.outofBoundPointCount===o.offsets.length/2||t&&s?[0,0]:M(o.offsets,r,i,S);const l=(a[0]+a[1])/2,c=e.projectedExtent.spatialReference,f=e.srcBufferExtent.spatialReference;if(t&&(s||l>S)){y(c,f,e.datumTransformation)&&(c.isGeographic||n(W(c))),i=[P,P],o=H({...e,spacing:i}),r={cols:o.size[0]+1,rows:o.size[1]+1},a=M(o.offsets,r,i,S)}if(o.error=a,i[0]>1&&(o.coefficients=Q(o.offsets,r,s)),e.includeGCSGrid&&!c.isGeographic&&!c.isWebMercator)if(f.isGeographic)o.gcsGrid={offsets:o.offsets,coefficients:o.coefficients,spacing:i};else{const t=W(c);if(n(t)&&!t.isEnvelope){const t=U(c),n=B(e.projectedExtent,t),{offsets:a}=H({...e,srcBufferExtent:n,spacing:i}),l=Q(a,r,s);o.gcsGrid={offsets:a,coefficients:l,spacing:i}}}return o}function H(e){const{projectedExtent:t,srcBufferExtent:i,pixelSize:o,datumTransformation:r,rasterTransform:s}=e,a=t.spatialReference,l=i.spatialReference;d(a,l);const{xmin:c,ymin:f,xmax:u,ymax:m}=t,x=L(l),h=n(x)&&(e.hasWrapAround||"gcs-shift"===(null==s?void 0:s.type)),g=e.spacing||[R,R],y=g[0]*o.x,M=g[1]*o.y,w=1===g[0],S=Math.ceil((u-c)/y-.1/g[0])+(w?0:1),b=Math.ceil((m-f)/M-.1/g[1])+(w?0:1),E=C({cols:S,rows:b,xmin:c,ymax:m,xres:y,yres:M,inSR:a,outSR:l,datumTransformation:r,preferPE:g[0]<=P,usePixelCenter:w}),G=[];let k,N=0;const T=w?-1:NaN,{xmin:_,xmax:j,ymax:z,width:W,height:O}=i,A=v(l,500);for(let n=0;n<S;n++){const e=[];for(let t=0;t<b;t++){let i=E[n*b+t];if(h&&i[0]>j&&i[0]>x/2-A&&(i[0]-=x),!i||isNaN(i[0])||isNaN(i[1]))G.push(T),G.push(T),e.push(null),N++;else{if(s){const e=s.inverseTransform(new p({x:i[0],y:i[1],spatialReference:l}));i=[e.x,e.y]}e.push(i),n>0&&h&&k[t]&&i[0]<k[t][0]&&(i[0]+=x),G.push((i[0]-_)/W),G.push((z-i[1])/O)}}k=e}return{offsets:G,error:null,coefficients:null,outofBoundPointCount:N,spacing:g,size:w?[S,b]:[S-1,b-1]}}function Q(e,t,n){const{cols:i,rows:o}=t,r=new Float32Array((i-1)*(o-1)*2*6),s=new Float32Array([-0,-1,1,-1,1,-0,1,-0,-0]),a=new Float32Array([-1,1,0,0,-1,1,1,0,0]);for(let l=0;l<i-1;l++){for(let t=0;t<o-1;t++){let n=l*o*2+2*t;const c=e[n],f=e[n+1],u=e[n+2],m=e[n+3];n+=2*o;const x=e[n],h=e[n+1],p=e[n+2],g=e[n+3];let y=0,d=12*(t*(i-1)+l);for(let e=0;e<3;e++)r[d++]=s[y++]*c+s[y++]*u+s[y++]*p;y=0;for(let e=0;e<3;e++)r[d++]=s[y++]*f+s[y++]*m+s[y++]*g;y=0;for(let e=0;e<3;e++)r[d++]=a[y++]*c+a[y++]*x+a[y++]*p;y=0;for(let e=0;e<3;e++)r[d++]=a[y++]*f+a[y++]*h+a[y++]*g}if(n)for(let e=0;e<r.length;e++)isNaN(r[e])&&(r[e]=-1)}return r}function V(e){const t=e.clone().normalize();return 1===t.length?t[0]:Y(t)}function Z(e,t,i){const{storageInfo:o,pixelSize:r}=t;let s,a=!1;const{pyramidResolutions:l}=o;if(n(l)&&l.length){const n=(e.x+e.y)/2,o=l[l.length-1],c=(o.x+o.y)/2,f=(r.x+r.y)/2;if(n<=f)s=0;else if(n>=c)s=l.length,a=n/c>8;else{let e,t=f;for(let o=1;o<=l.length;o++){if(e=(l[o-1].x+l[o-1].y)/2,n<=e){n===e?s=o:"down"===i?(s=o-1,a=n/t>8):s="up"===i||n-t>e-n||n/t>2?o:o-1;break}t=e}}const u=0===s?r:l[s-1];return{pyramidLevel:s,pyramidResolution:new p({x:u.x,y:u.y,spatialReference:t.spatialReference}),excessiveReading:a}}const c=Math.log(e.x/r.x)/Math.LN2,f=Math.log(e.y/r.y)/Math.LN2,u=t.storageInfo.maximumPyramidLevel||0;s="down"===i?Math.floor(Math.min(c,f)):"up"===i?Math.ceil(Math.max(c,f)):Math.round((c+f)/2),s<0?s=0:s>u&&(a=s>u+3,s=u);const m=2**s;return{pyramidLevel:s,pyramidResolution:new p({x:m*t.nativePixelSize.x,y:m*t.nativePixelSize.y,spatialReference:t.spatialReference}),excessiveReading:a}}function $(e,t,n=512,o=!0){const{extent:r,spatialReference:s,pixelSize:a}=e,l=N(new p({x:a.x,y:a.y,spatialReference:s}),t,r);if(null==l)return{projectedPixelSize:null,scales:null,srcResolutions:null,isCustomTilingScheme:!1};const c=(l.x+l.y)/2,f=i(t),u=c*f*96*39.37,m=t.isGeographic?256/n*295828763.7958547:256/n*591657527.591555;let x="vector-magdir"===e.dataType||"vector-uv"===e.dataType;const h=B(r,t);x||o&&(t.isGeographic||t.isWebMercator)&&(x=h.xmin*h.xmax<0);let g,y=u;const d=1.001;if(x){y=m;const e=t.isGeographic?1341104507446289e-21:.29858214164761665,n=e*(96*f*39.37),i=t.isGeographic?4326:3857;g=N(new p({x:e,y:e,spatialReference:{wkid:i}}),s,h),g.x*=y/n,g.y*=y/n}else{g={x:a.x,y:a.y};const t=Math.ceil(Math.log(Math.min(e.width,e.height)/32)/Math.LN2);let n=0;for(;y<m*(d/2)&&n<t;)n++,y*=2,g.x*=2,g.y*=2;Math.max(y,m)/Math.min(y,m)<=d&&(y=m)}const M=[y],w=[{x:g.x,y:g.y}],R=70.5310735,P=Math.min(R,u)/d;for(;y>=P;)y/=2,g.x/=2,g.y/=2,M.push(y),w.push({x:g.x,y:g.y});return{projectedPixelSize:l,scales:M,srcResolutions:w,isCustomTilingScheme:!x}}export{$ as computeProjectedScales,R as defaultGridSpacing,S as defaultProjectionToleranceInPixels,k as getDefaultDatumTransformationForDataset,C as getProjectedGridPoints,D as getProjectionOffsetGrid,K as getRasterDatasetAlignmentInfo,L as getWorldWidth,X as getWorldWrapCount,G as load,P as minimumGridSpacing,B as projectExtent,T as projectPoint,N as projectResolution,y as requirePE,V as snapExtent,Z as snapPyramid};
