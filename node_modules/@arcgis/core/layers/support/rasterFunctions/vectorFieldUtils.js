/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{JSONMap as t}from"../../../core/jsonMap.js";import{isNone as e,unwrap as n,isSome as r}from"../../../core/maybe.js";import o from"../PixelBlock.js";import{isValidPixelBlock as a}from"./pixelUtils.js";const s=new Map;s.set("meter-per-second",1),s.set("kilometer-per-hour",.277778),s.set("knots",.514444),s.set("feet-per-second",.3048),s.set("mile-per-hour",.44704);const i=180/Math.PI,h=5,l=new t({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function c(t,e){return s.get(t)/s.get(e)||1}function u(t){return(450-t)%360}function f(t,e="geographic"){const[n,r]=t,o=Math.sqrt(n*n+r*r);let a=Math.atan2(r,n)*i;return a=(360+a)%360,"geographic"===e&&(a=u(a)),[o,a]}function p(t,e="geographic"){let n=t[1];"geographic"===e&&(n=u(n)),n%=360;const r=t[0];return[r*Math.cos(n/i),r*Math.sin(n/i)]}function m(t,r,o,s="geographic"){if(!a(t)||e(o))return t;const i="vector-magdir"===r?t.clone():n(d(t,r)),h=i.pixels[1];for(let e=0;e<h.length;e++)h[e]="geographic"===s?(h[e]+o[e]+270)%360:(h[e]+360-o[e])%360;return"vector-magdir"===r?i:d(i,"vector-magdir")}function d(t,e,n="geographic",r=1){if(!a(t))return t;const{pixels:s,width:i,height:h}=t,l=i*h,c=s[0],u=s[1],m=t.pixelType.startsWith("f")?t.pixelType:"f32",d=o.createEmptyBand(m,l),M=o.createEmptyBand(m,l);let g=0;for(let o=0;o<h;o++)for(let t=0;t<i;t++)"vector-uv"===e?([d[g],M[g]]=f([c[g],u[g]],n),d[g]*=r):([d[g],M[g]]=p([c[g],u[g]],n),d[g]*=r,M[g]*=r),g++;const x=new o({pixelType:m,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[d,M]});return x.updateStatistics(),x}function M(t,e,n=1){if(1===n||!a(t))return t;const r=t.clone(),{pixels:o,width:s,height:i}=r,h=o[0],l=o[1];let c=0;for(let a=0;a<i;a++)for(let t=0;t<s;t++)"vector-uv"===e?(h[c]*=n,l[c]*=n):h[c]*=n,c++;return r.updateStatistics(),r}function g(t,e,n,o,a){if(!r(a)||!a.spatialReference.equals(t.spatialReference))return{extent:t,width:Math.round(e/o),height:Math.round(n/o),resolution:t.width/e};const s=a.xmin,i=a.ymax,h=(t.xmax-t.xmin)/e*o,l=(t.ymax-t.ymin)/n*o,c=(h+l)/2;return t.xmin=s+Math.floor((t.xmin-s)/h)*h,t.xmax=s+Math.ceil((t.xmax-s)/h)*h,t.ymin=i+Math.floor((t.ymin-i)/l)*l,t.ymax=i+Math.ceil((t.ymax-i)/l)*l,{extent:t,width:Math.round(t.width/h),height:Math.round(t.height/l),resolution:c}}const x=k(0,0,0);function k(t=0,e=0,n=Math.PI,r=!0){r&&(n=(2*Math.PI-n)%(2*Math.PI));const o=r?-1:1,a=13*o,s=-7*o,i=-2*o,h=-16*o,l=21.75,[c,u]=y(0,e+a,n,l),[f,p]=y(t-5.5,e+s,n,l),[m,d]=y(t+5.5,e+s,n,l),[M,g]=y(t-1.5,e+i,n,l),[x,k]=y(t+1.5,e+i,n,l),[w,P]=y(t-1.5,e+h,n,l),[b,I]=y(t+1.5,e+h,n,l);return[c,u,f,p,M,g,x,k,m,d,w,P,b,I]}function w(t=0,e=Math.PI,n=!0){n&&(e=(2*Math.PI-e)%(2*Math.PI));const r=10,o=n?-1:1,a=5*o,s=20*o,i=25*o,l=45,c=0,u=0,f=2,p=0,m=f*o;let[d,M]=[c+r/2,u-s],[g,x]=[d+f,M],[k,w]=[g-p,x+m],[P,b]=[c-r/2,u-i],[I,v]=[P+p,b-m],A=Math.ceil(t/h),_=Math.floor(A/10);A-=8*_;const U=[],S=[];for(let h=0;h<A/2;h++,_--){_<=0&&A%2==1&&h===(A-1)/2&&(P=c,I=P+p,b=(b+M)/2,v=b-m);const[t,n]=y(P,b,e,l);if(_>0){const[r,o]=y(g,b,e,l),[a,s]=y(d,M,e,l);U.push(r),U.push(o),U.push(t),U.push(n),U.push(a),U.push(s)}else{const[r,o]=y(g,x,e,l),[a,s]=y(k,w,e,l),[i,h]=y(I,v,e,l);S.push(t),S.push(n),S.push(i),S.push(h),S.push(a),S.push(s),S.push(r),S.push(o)}b+=a,M+=a,x+=a,w+=a,v+=a}const[D,F]=y(c+r/2,u+s,e,l),j=r/2+f,[N,J]=y(c+j,u+s,e,l),[O,q]=y(c+r/2,u-i,e,l),[B,E]=y(c+j,u-i,e,l);return{pennants:U,barbs:S,shaft:[D,F,N,J,O,q,B,E]}}function y(t,e,n,r=1){const o=Math.sqrt(t*t+e*e)/r,a=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[o,(2*Math.PI+a-n)%(2*Math.PI)]}const P=[0,1,3,6,10,16,21,27,33,40,47,55,63],b=[0,.5,1,1.5,2],I=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function v(t,e,n,r){const o=c(r||"knots",n);let a;for(a=1;a<e.length;a++)if(a===e.length-1){if(t<e[a]*o)break}else if(t<=e[a]*o)break;return Math.min(a-1,e.length-2)}function A(t,e,n,r,o){let a=0;switch(e){case"beaufort_kn":a=v(t,P,"knots",n);break;case"beaufort_km":a=v(t,P,"kilometer-per-hour",n);break;case"beaufort_ft":a=v(t,P,"feet-per-second",n);break;case"beaufort_m":a=v(t,P,"meter-per-second",n);break;case"classified_arrow":a=v(t,o,r,n);break;case"ocean_current_m":a=v(t,b,"meter-per-second",n);break;case"ocean_current_kn":a=v(t,I,"knots",n)}return a}function _(t,e){const{style:n,inputUnit:r,outputUnit:o,breakValues:a}=e,s=l.fromJSON(r),i=l.fromJSON(o),h=7*6,c=15;let u=0,f=0;const{width:p,height:m,mask:d}=t,M=t.pixels[0],g=t.pixels[1],k=d?d.filter((t=>t>0)).length:p*m,w=new Float32Array(k*h),y=new Uint32Array(c*k);for(let l=0;l<m;l++)for(let t=0;t<p;t++){const e=l*p+t;if(!d||d[l*p+t]){var P;const r=null!=(P=(g[e]+360)%360/180*Math.PI)?P:2*Math.PI*Math.random(),o=A(M[e],n,s,i,a);for(let n=0;n<x.length;n+=2)w[u++]=(t+.5)/p,w[u++]=(l+.5)/m,w[u++]=x[n],w[u++]=x[n+1]+r,w[u++]=o,w[u++]=M[e];const c=7*(u/h-1);y[f++]=c,y[f++]=c+1,y[f++]=c+2,y[f++]=c+0,y[f++]=c+4,y[f++]=c+3,y[f++]=c+0,y[f++]=c+2,y[f++]=c+3,y[f++]=c+2,y[f++]=c+5,y[f++]=c+3,y[f++]=c+5,y[f++]=c+6,y[f++]=c+3}}return{vertexData:w,indexData:y}}const U=[];function S(t,e){if(0===U.length)for(let h=0;h<30;h++)U.push(w(5*h,0));const n=c(l.fromJSON(e.inputUnit),"knots"),{width:r,height:o,mask:a}=t,s=t.pixels[0],i=t.pixels[1],u=6,f=[],p=[];let m=0,d=0;for(let l=0;l<o;l++)for(let t=0;t<r;t++){const e=l*r+t,c=s[e]*n;if((!a||a[l*r+t])&&c>=h){var M;const n=null!=(M=(i[e]+360)%360/180*Math.PI)?M:2*Math.PI*Math.random(),{pennants:a,barbs:s,shaft:h}=U[Math.min(Math.floor(c/5),29)];if(a.length+s.length===0)continue;let g=f.length/u;const x=(t+.5)/r,k=(l+.5)/o;for(let t=0;t<a.length;t+=2)f[m++]=x,f[m++]=k,f[m++]=a[t],f[m++]=a[t+1]+n,f[m++]=0,f[m++]=c;for(let t=0;t<s.length;t+=2)f[m++]=x,f[m++]=k,f[m++]=s[t],f[m++]=s[t+1]+n,f[m++]=0,f[m++]=c;for(let t=0;t<h.length;t+=2)f[m++]=x,f[m++]=k,f[m++]=h[t],f[m++]=h[t+1]+n,f[m++]=0,f[m++]=c;for(let t=0;t<a.length/6;t++)p[d++]=g,p[d++]=g+1,p[d++]=g+2,g+=3;for(let t=0;t<s.length/8;t++)p[d++]=g,p[d++]=g+1,p[d++]=g+2,p[d++]=g+1,p[d++]=g+2,p[d++]=g+3,g+=4;p[d++]=g+0,p[d++]=g+1,p[d++]=g+2,p[d++]=g+1,p[d++]=g+3,p[d++]=g+2,g+=4}}return{vertexData:new Float32Array(f),indexData:new Uint32Array(p)}}function D(t,e){const n=4*6;let r=0,o=0;const{width:a,height:s,mask:i}=t,u=t.pixels[0],f=[],p=[],m=c(l.fromJSON(e.inputUnit),"knots"),d="wind_speed"===e.style?h:Number.MAX_VALUE;for(let h=0;h<s;h++)for(let t=0;t<a;t++){const e=u[h*a+t]*m;if((!i||i[h*a+t])&&e<d){for(let n=0;n<4;n++)f[r++]=(t+.5)/a,f[r++]=(h+.5)/s,f[r++]=n<2?-.5:.5,f[r++]=n%2==0?-.5:.5,f[r++]=0,f[r++]=e;const i=4*(r/n-1);p[o++]=i,p[o++]=i+1,p[o++]=i+2,p[o++]=i+1,p[o++]=i+2,p[o++]=i+3}}return{vertexData:new Float32Array(f),indexData:new Uint32Array(p)}}function F(t,e){return"simple_scalar"===e.style?D(t,e):"wind_speed"===e.style?S(t,e):_(t,e)}function j(t,e,n,r=[0,0],a=.5){const{width:s,height:i,mask:h}=t,[l,c]=t.pixels,[u,m]=r,d=Math.round((s-u)/n),M=Math.round((i-m)/n),g=d*M,x=new Float32Array(g),k=new Float32Array(g),w=new Uint8Array(g),y="vector-uv"===e;for(let o=0;o<M;o++)for(let t=0;t<d;t++){let e=0;const r=o*d+t,M=Math.max(0,o*n+m),g=Math.max(0,t*n+u),P=Math.min(i,M+n),b=Math.min(s,g+n);for(let t=M;t<P;t++)for(let n=g;n<b;n++){const o=t*s+n;if(!h||h[o]){e++;const t=y?[l[o],c[o]]:[l[o],(360+c[o])%360],[n,a]=y?t:p(t);x[r]+=n,k[r]+=a}}if(e>=(P-M)*(b-g)*(1-a)){w[r]=1;const[t,n]=f([x[r]/e,k[r]/e]);x[r]=t,k[r]=n}else w[r]=0,x[r]=0,k[r]=0}const P=new o({width:d,height:M,pixels:[x,k],mask:w});return P.updateStatistics(),P}export{m as convertToLocalDirections,d as convertVectorFieldData,M as convertVectorFieldUnit,F as createVFMesh,D as createVFMeshScalar,c as getUnitConversionFactor,j as sampleVectorField,g as snapImageToSymbolTile,l as unitKebabDict,f as uvComponentToVector};
