/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import"../../../geometry.js";import e from"../../../core/Error.js";import{isSome as s}from"../../../core/maybe.js";import{eachAlways as r}from"../../../core/promiseUtils.js";import{property as i}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as o}from"../../../core/accessorSupport/decorators/subclass.js";import a from"../RasterInfo.js";import m from"./BaseRaster.js";import{split as n,estimateStatisticsHistograms as l}from"../rasterFunctions/pixelUtils.js";import p from"../../../geometry/Extent.js";import c from"../../../geometry/SpatialReference.js";let h=class extends m{constructor(){super(...arguments),this.datasetFormat="MEMORY"}async open(t){var e;await this.init();const{pixelBlock:s,statistics:r,histograms:i,name:o,keyProperties:m,nativeExtent:n,transform:l}=this.data,{width:h,height:d,pixelType:f}=s,u=this.data.extent||new p({xmin:-.5,ymin:.5,xmax:h-.5,ymax:d-.5,spatialReference:new c({wkid:3857})}),y=null!=(e=this.data.isPseudoSpatialReference)?e:!this.data.extent,x={x:u.width/h,y:u.height/d},v=new a({width:h,height:d,pixelType:f,extent:u,nativeExtent:n,transform:l,pixelSize:x,spatialReference:u.spatialReference,bandCount:3,keyProperties:m||{},statistics:r,isPseudoSpatialReference:y,histograms:i});this.createRemoteDatasetStorageInfo(v,512,512),this._set("rasterInfo",v),this.updateTileInfo(),await this._buildInMemoryRaster(s,{width:512,height:512},t),this.datasetName=o,this.url="/InMemory/"+o}fetchRawTile(t,e,s,r={}){const i=this._pixelBlockTiles.get(`${t}/${e}/${s}`);return Promise.resolve(i)}async _buildInMemoryRaster(t,i,o){const a=this.rasterInfo.storageInfo.maximumPyramidLevel,m=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:t,tileSize:i,maximumPyramidLevel:a},o):Promise.resolve(n(t,i,a)),p=s(this.rasterInfo.statistics),c=s(this.rasterInfo.histograms),h=p&&c?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:t},o):Promise.resolve(l(t)),d=await r([m,h]);if(!d[0].value&&d[1].value)throw new e("inmemory-raster:open","failed to build in memory raster");var f,u;(this._pixelBlockTiles=d[0].value,p)||(this.rasterInfo.statistics=null==(f=d[1].value)?void 0:f.statistics);c&&(this.rasterInfo.histograms=null==(u=d[1].value)?void 0:u.histograms)}};t([i({type:String,json:{write:!0}})],h.prototype,"datasetFormat",void 0),t([i()],h.prototype,"data",void 0),h=t([o("esri.layers.support.rasterDatasets.InMemoryRaster")],h);const d=h;export{d as default};
