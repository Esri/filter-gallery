/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../geometry.js";import t from"../../../core/Error.js";import{unwrap as r,isSome as i}from"../../../core/maybe.js";import{property as s}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as a}from"../../../core/accessorSupport/decorators/subclass.js";import n from"../RasterInfo.js";import o from"../RasterStorageInfo.js";import l from"./BaseRaster.js";import{parseSpatialReference as f,parsePAMInfo as u}from"./pamParser.js";import{parseSignature as m,getImageInfo as p,parseIFD as c,parseFieldValues as h,isBSQConfig as d}from"../rasterFormats/TiffDecoder.js";import y from"../rasterFormats/TiffTags.js";import{estimateStatisticsFromHistograms as g}from"../rasterFunctions/pixelUtils.js";import x from"../rasterTransforms/PolynomialTransform.js";import T from"../../../geometry/SpatialReference.js";import I from"../../../geometry/Extent.js";import w from"../../../geometry/Point.js";const _=function(e,t){const r=e.get(t);return r&&r.values},b=function(e,t){const r=e.get(t);return r&&r.values[0]};let E=class extends l{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){var s,a,l;await this.init();const u=e?r(e.signal):null,{data:c}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:u});if(!c)throw new t("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:h,firstIFD:d,isBigTiff:y}=m(c),_=[];await this._readIFDs(_,c,h,d,0,y?8:4,u);const b=p(_),{width:E,height:S,tileWidth:F,tileHeight:v,planes:R,pixelType:k,compression:j,firstPyramidLevel:B,maximumPyramidLevel:D,pyramidBlockWidth:L,pyramidBlockHeight:z,tileBoundary:O,affine:P,metadata:H}=b,A=(null==(s=b.extent.spatialReference)?void 0:s.wkt)||(null==(a=b.extent.spatialReference)?void 0:a.wkid);let G=f(A),q=!1;null==G&&(q=!0,G=new T({wkid:3857}));const C=new I({...b.extent,spatialReference:G}),W=new w(C?{x:C.xmin,y:C.ymax,spatialReference:G}:{x:0,y:0}),U=new o({blockWidth:F,blockHeight:v,pyramidBlockWidth:L,pyramidBlockHeight:z,compression:j,origin:W,firstPyramidLevel:B,maximumPyramidLevel:D,blockBoundary:O}),Y=new w({x:(C.xmax-C.xmin)/E,y:(C.ymax-C.ymin)/S,spatialReference:G}),M=H?{BandProperties:H.bandProperties,DataType:H.dataType}:{},N=new n({width:E,height:S,bandCount:R,pixelType:k,compression:j,pixelSize:Y,storageInfo:U,spatialReference:G,isPseudoSpatialReference:q,keyProperties:M,extent:C,statistics:H?H.statistics:null});if(null!=P&&P.length&&(N.nativeExtent=new I({xmin:-.5,ymin:.5-S,xmax:E-.5,ymax:.5,spatialReference:G}),N.transform=new x({polynomialOrder:1,forwardCoefficients:[P[2]+P[0]/2,P[5]-P[3]/2,P[0],P[3],-P[1],-P[4]]}),N.extent=N.transform.forwardTransform(N.nativeExtent),N.pixelSize=new w({x:(C.xmax-C.xmin)/E,y:(C.ymax-C.ymin)/S,spatialReference:G}),U.origin.x=-.5,U.origin.y=.5),null==(l=this.ioConfig.skipExtensions)||!l.includes("aux.xml")){const t=await this._fetchAuxiliaryData(e);if(null!=t){var K;if(N.statistics=null!=(K=t.statistics)?K:N.statistics,N.histograms=t.histograms,t.histograms&&!i(N.statistics)&&(N.statistics=g(t.histograms)),t.transform&&!P){N.transform=t.transform,N.nativeExtent=N.extent;const e=N.transform.forwardTransform(N.nativeExtent);N.pixelSize=new w({x:(e.xmax-e.xmin)/E,y:(e.ymax-e.ymin)/S,spatialReference:G}),N.extent=e}N.spatialReference||(N.spatialReference=t.spatialReference)}}if(this._set("rasterInfo",N),this._headerInfo={littleEndian:h,isBigTiff:y,ifds:_,...b},!this._headerInfo.isSupported)throw new t("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(e,t,r,i={}){var s;if(null==(s=this._headerInfo)||!s.isSupported||this.isBlockOutside(e,t,r))return null;const a=this._getTileLocation(e,t,r);if(!a)return null;const{ranges:n,actualTileWidth:o,actualTileHeight:l,ifd:f}=a,u=n.map((e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:i.signal}))),m=await Promise.all(u),p=m.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),c=1===m.length?m[0].data:new ArrayBuffer(p),h=[0],d=[0];if(m.length>1){const e=new Uint8Array(c);for(let t=0,r=0;t<m.length;t++){const i=m[t].data;e.set(new Uint8Array(i),r),h[t]=r,r+=i.byteLength,d[t]=i.byteLength}}const{blockWidth:y,blockHeight:g}=this.getBlockWidthHeight(e),x=await this.decodePixelBlock(c,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:f,offsets:h,sizes:d},width:y,height:g,planes:null,pixelType:null});let T,I,w;if(o!==y||l!==g){let e=x.mask;if(e)for(T=0;T<g;T++)if(w=T*y,T<l)for(I=o;I<y;I++)e[w+I]=0;else for(I=0;I<y;I++)e[w+I]=0;else for(e=new Uint8Array(y*g),x.mask=e,T=0;T<l;T++)for(w=T*y,I=0;I<o;I++)e[w+I]=1}return x}async _readIFDs(e,t,r,i,s,a=4,n){if(!i)return null;if(i>=t.byteLength||i<0){t=(await this.request(this.url,{range:{from:i+s,to:i+s+this._bufferSize},responseType:"array-buffer",signal:n})).data,s=i+s,i=0}const o=await this._readIFD(t,r,i,s,y.TIFF_TAGS,a,n);if(e.push(o.ifd),!o.nextIFD)return null;await this._readIFDs(e,t,r,o.nextIFD-s,s,a,n)}async _readIFD(e,t,r,i,s=y.TIFF_TAGS,a=4,n){if(!e)return null;const o=c(e,t,r,i,s,a);if(o.success){const r=[];if(o.ifd.forEach((e=>{e.values||r.push(e)})),r.length>0){const s=r.map((e=>e.offlineOffsetSize)),a=Math.min.apply(null,s.map((e=>e[0])));if(Math.min.apply(null,s.map((e=>e[0]+e[1])))-a<=this._bufferSize){const{data:s}=await this.request(this.url,{range:{from:a,to:a+this._bufferSize},responseType:"array-buffer",signal:n});e=s,i=a,r.forEach((r=>h(e,t,r,i)))}}if(o.ifd.has("GEOKEYDIRECTORY")){const r=o.ifd.get("GEOKEYDIRECTORY"),s=r.values;if(s&&s.length>4){const a=s[0]+"."+s[1]+"."+s[2],o=await this._readIFD(e,t,r.valueOffset+6-i,i,y.GEO_KEYS,2,n);r.data=o.ifd,r.data&&r.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[a]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==e.byteLength){const r=await this.request(this.url,{range:{from:i,to:i+o.requiredBufferSize+4},responseType:"array-buffer",signal:n});return(e=r.data).byteLength<o.requiredBufferSize?null:this._readIFD(e,t,0,i,y.TIFF_TAGS,4,n)}}_getTileLocation(e,t,r){const{firstPyramidLevel:i,blockBoundary:s}=this.rasterInfo.storageInfo,a=0===e?0:e-(i-1),n=this._headerInfo.ifds[a];if(!n)return null;const o=d(n,this._headerInfo),l=_(n,"TILEOFFSETS");if(void 0===l)return null;const f=_(n,"TILEBYTECOUNTS"),{minRow:u,minCol:m,maxRow:p,maxCol:c}=s[a];if(t>p||r>c||t<u||r<m)return null;const h=b(n,"IMAGEWIDTH"),y=b(n,"IMAGELENGTH"),g=b(n,"TILEWIDTH"),x=b(n,"TILELENGTH"),T=o?this.rasterInfo.bandCount:1,I=T*t*(c+1)+r,w=[{from:l[I],to:l[I+T-1]+f[I+T-1]-1}];if(o){let e=!0;for(let t=0;t<T;t++)if(l[I+t]+f[I+t]!==l[I+t+1]){e=!1;break}if(!e)for(let t=0;t<T;t++)w[t]={from:l[I+t],to:l[I+t]+f[I+t]-1}}const E=l[I],S=f[I];if(null==E||null==S)return null;return{ranges:w,ifd:n,actualTileWidth:r===c?h%g:g,actualTileHeight:t===p?y%x:x}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return u(t)}catch{return null}}};e([s()],E.prototype,"_files",void 0),e([s()],E.prototype,"_headerInfo",void 0),e([s()],E.prototype,"_bufferSize",void 0),e([s({type:String,json:{write:!0}})],E.prototype,"datasetFormat",void 0),E=e([a("esri.layers.support.rasterDatasets.TIFFRaster")],E);const S=E;export{S as default};
