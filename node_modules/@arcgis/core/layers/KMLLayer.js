/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import"../geometry.js";import r from"../core/Collection.js";import t from"../core/CollectionFlattener.js";import{isSome as o}from"../core/maybe.js";import{MultiOriginJSONMixin as s}from"../core/MultiOriginJSONSupport.js";import{throwIfAbortError as i}from"../core/promiseUtils.js";import{getFilename as l}from"../core/urlUtils.js";import{property as a}from"../core/accessorSupport/decorators/property.js";import"../core/arrayUtils.js";import"../core/has.js";import"../core/accessorSupport/ensureType.js";import{reader as p}from"../core/accessorSupport/decorators/reader.js";import{subclass as n}from"../core/accessorSupport/decorators/subclass.js";import{writer as u}from"../core/accessorSupport/decorators/writer.js";import y from"../geometry/SpatialReference.js";import m from"./Layer.js";import{BlendLayer as c}from"./mixins/BlendLayer.js";import{OperationalLayer as h}from"./mixins/OperationalLayer.js";import{PortalLayer as d}from"./mixins/PortalLayer.js";import{RefreshableLayer as f}from"./mixins/RefreshableLayer.js";import{ScaleRangeLayer as b}from"./mixins/ScaleRangeLayer.js";import{url as j}from"./support/commonProperties.js";import v from"./support/KMLSublayer.js";import{sublayersFromJSON as g,fetchService as S,parseKML as x}from"./support/kmlUtils.js";import L from"../geometry/Extent.js";const w=["kml","xml"];let E=class extends(c(f(b(h(d(s(m))))))){constructor(...e){super(...e),this._visibleFolders=[],this.allSublayers=new t({getCollections:()=>[this.sublayers],getChildrenFunction:e=>e.sublayers}),this.outSpatialReference=y.WGS84,this.path=null,this.legendEnabled=!1,this.operationalLayerType="KML",this.sublayers=null,this.type="kml",this.url=null}initialize(){this.watch("sublayers",((e,r)=>{r&&r.forEach((e=>{e.parent=null,e.layer=null})),e&&e.forEach((e=>{e.parent=this,e.layer=this}))}),!0),this.on("sublayer-update",(()=>this.notifyChange("fullExtent")))}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}readSublayersFromItemOrWebMap(e,r){this._visibleFolders=r.visibleFolders}readSublayers(e,r,t){return g(v,r,t,this._visibleFolders)}writeSublayers(e,r){const t=[],o=e.toArray();for(;o.length;){const e=o[0];e.networkLink||(e.visible&&t.push(e.id),e.sublayers&&o.push(...e.sublayers.toArray())),o.shift()}r.visibleFolders=t}get title(){const e=this._get("title");return e&&"defaults"!==this.originOf("title")?e:this.url?l(this.url,w)||"KML":e||""}set title(e){this._set("title",e)}get visibleSublayers(){const e=this.sublayers,r=[],t=e=>{e.visible&&(r.push(e),e.sublayers&&e.sublayers.forEach(t))};return e&&e.forEach(t),r}get fullExtent(){return this._recomputeFullExtent()}load(e){const r=o(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["KML"]},e).catch(i).then((()=>this._fetchService(r)))),Promise.resolve(this)}destroy(){super.destroy(),this.allSublayers.destroy()}async _fetchService(e){const r=await Promise.resolve().then((()=>this.resourceInfo?{ssl:!1,data:this.resourceInfo}:S(this.url,this.outSpatialReference,this.refreshInterval,e))),t=x(r.data);t&&this.read(t,{origin:"service"})}_recomputeFullExtent(){let e=null;o(this.extent)&&(e=this.extent.clone());const r=t=>{if(t.sublayers)for(const s of t.sublayers.items)r(s),s.visible&&s.fullExtent&&(o(e)?e.union(s.fullExtent):e=s.fullExtent.clone())};return r(this),e}};e([a({readOnly:!0})],E.prototype,"allSublayers",void 0),e([a({type:y})],E.prototype,"outSpatialReference",void 0),e([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],E.prototype,"path",void 0),e([a({readOnly:!0,json:{read:!1,write:!1}})],E.prototype,"legendEnabled",void 0),e([a({type:["show","hide","hide-children"]})],E.prototype,"listMode",void 0),e([a({type:["KML"]})],E.prototype,"operationalLayerType",void 0),e([a({})],E.prototype,"resourceInfo",void 0),e([a({type:r.ofType(v),json:{write:{ignoreOrigin:!0}}})],E.prototype,"sublayers",void 0),e([p(["web-map","portal-item"],"sublayers",["visibleFolders"])],E.prototype,"readSublayersFromItemOrWebMap",null),e([p("service","sublayers",["sublayers"])],E.prototype,"readSublayers",null),e([u("sublayers")],E.prototype,"writeSublayers",null),e([a({readOnly:!0,json:{read:!1}})],E.prototype,"type",void 0),e([a({json:{origins:{"web-map":{read:{source:"title"}}},write:{ignoreOrigin:!0}}})],E.prototype,"title",null),e([a(j)],E.prototype,"url",void 0),e([a({readOnly:!0})],E.prototype,"visibleSublayers",null),e([a({type:L})],E.prototype,"extent",void 0),e([a()],E.prototype,"fullExtent",null),E=e([n("esri.layers.KMLLayer")],E);const F=E;export{F as default};
