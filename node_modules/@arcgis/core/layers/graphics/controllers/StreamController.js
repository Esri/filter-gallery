/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../geometry.js";import t from"../../../Graphic.js";import r from"../../../core/Accessor.js";import{HandleOwnerMixin as s}from"../../../core/HandleOwner.js";import{isSome as i}from"../../../core/maybe.js";import{EsriPromiseMixin as o}from"../../../core/Promise.js";import{property as a}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as n}from"../../../core/accessorSupport/decorators/subclass.js";import{StreamFeatureManager as c}from"../data/StreamFeatureManager.js";import{createConnection as p}from"../sources/connections/createConnection.js";import{EventedSet as h}from"../../../views/3d/support/EventedSet.js";import{featureGeometryTypeKebabDictionary as l}from"../../../geometry/support/typeUtils.js";const d=2500;let u=class extends t{getObjectId(){return this.objectId}};e([a({type:Number,json:{read:!0}})],u.prototype,"objectId",void 0),u=e([n("esri.layers.graphics.controllers.StreamGraphic")],u);class m{constructor(e){this.onUpdate=e,this._idToGraphic=new Map}destroy(){this._idToGraphic.clear()}add(e){this._idToGraphic.set(e.objectId,e)}get(e){return this._idToGraphic.get(e)}forEach(e){this._idToGraphic.forEach(e)}removeById(e){const t=this._idToGraphic.get(e);return t?(t.sourceLayer=t.layer=null,this._idToGraphic.delete(e),t):null}update(e,t){this.onUpdate(e,t)}get size(){return this._idToGraphic.size}}let y=class extends(s(o(r))){constructor(){super(...arguments),this._updateInfo={websocket:0,client:0},this.graphics=new h}initialize(){this.addResolvingPromise(this.layer.when((()=>this._startup())))}destroy(){this.clear()}_clearInterval(){this._updateIntervalId&&(clearInterval(this._updateIntervalId),this._updateIntervalId=0)}clear(){this._clearInterval(),this.connection&&(this.connection.destroy(),this.connection=null),this.store&&(this.store.destroy(),this.store=null),this.graphics.clear(),this.handles.removeAll()}get updating(){return!this.connection||"connected"===this.connection.connectionStatus}_startup(){const{parsedUrl:e,spatialReference:t,definitionExpression:r,geometryDefinition:s,objectIdField:i,timeInfo:o,purgeOptions:a,maxReconnectionAttempts:n,maxReconnectionInterval:h,customParameters:d}=this.layer,u=l.toJSON(this.layer.geometryType),y=t,f=this.layerView.view.spatialReference,_={geometry:s,where:r};this.clear(),this._set("connection",p(e,y,f,u,_,n,h,d)),this._outSpatialReference=f.toJSON(),this.store=new m(this._onUpdate.bind(this)),this.featuresManager=new c(this.store,i,o.toJSON(),a),this.handles.add([this.connection.on("feature",(e=>this._onFeature(e))),this.layer.watch("definitionExpression",(()=>this._startup())),this.layer.watch("geometryDefinition",(()=>this._startup())),this.layer.watch("purgeOptions",(()=>this._startup()))]),this._initUpdateInterval()}_onFeature(e){this._updateInfo.websocket++,this.layerView.hasEventListener("data-received")&&this.layerView.emit("data-received",{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry});try{i(e.geometry)&&!e.geometry.spatialReference&&(e.geometry.spatialReference=this._outSpatialReference);const t=u.fromJSON(e);t.sourceLayer=t.layer=this.layer,this.featuresManager.add(t)}catch{}}_onUpdate(e,t){i(t)&&this.graphics.removeMany(t),i(e)&&(this._updateInfo.client+=e.length,this.graphics.addMany(e))}_initUpdateInterval(){this._clearInterval();const{updateInterval:e}=this.layer;let t=performance.now();this._updateIntervalId=setInterval((()=>{const e=performance.now(),r=e-t;if(r>d){t=e;const s=Math.round(this._updateInfo.client/(r/1e3)),i=Math.round(this._updateInfo.websocket/(r/1e3));this._updateInfo.client=0,this._updateInfo.websocket=0,this.layerView.emit("update-rate",{client:s,websocket:i})}this.featuresManager.checkForUpdates()}),e)}pauseStream(){this._clearInterval()}resumeStream(){this._initUpdateInterval()}};e([a()],y.prototype,"connection",void 0),e([a()],y.prototype,"layer",void 0),e([a()],y.prototype,"layerView",void 0),e([a({readOnly:!0})],y.prototype,"updating",null),y=e([n("esri.layers.graphics.controllers.StreamController")],y);export{y as StreamController,u as StreamGraphic};
