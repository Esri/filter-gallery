/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import r from"../core/Error.js";import{isSome as t}from"../core/maybe.js";import{MultiOriginJSONMixin as o}from"../core/MultiOriginJSONSupport.js";import{aliasOf as s}from"../core/accessorSupport/decorators/aliasOf.js";import"../core/arrayUtils.js";import"../core/has.js";import"../core/accessorSupport/ensureType.js";import{property as i}from"../core/accessorSupport/decorators/property.js";import{subclass as a}from"../core/accessorSupport/decorators/subclass.js";import l from"./Layer.js";import{BlendLayer as n}from"./mixins/BlendLayer.js";import{CustomParametersMixin as p}from"./mixins/CustomParametersMixin.js";import{ImageryTileMixin as m}from"./mixins/ImageryTileMixin.js";import{OperationalLayer as u}from"./mixins/OperationalLayer.js";import{PortalLayer as c}from"./mixins/PortalLayer.js";import{RefreshableLayer as d}from"./mixins/RefreshableLayer.js";import{ScaleRangeLayer as f}from"./mixins/ScaleRangeLayer.js";import{TemporalLayer as y}from"./mixins/TemporalLayer.js";import{popupEnabled as h}from"./support/commonProperties.js";import v from"./support/Field.js";import g from"./support/rasterDatasets/WCSRaster.js";import{createPopupTemplate as j}from"../support/popupUtils.js";const x=new Set(["milliseconds","seconds","minutes","hours","days","weeks","months","years","decades","centuries"]);let I=class extends(n(f(u(c(p(m(y(d(o(l)))))))))){constructor(...e){super(...e),this.coverageId=null,this.coverageInfo=null,this.version=null,this.isReference=null,this.type="wcs",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(e){const r=t(e)?e.signal:null;return this.addResolvingPromise(this._openRaster(r)),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){return[new v({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})]}createPopupTemplate(e){return j({fields:this.rasterFields,title:this.title},e)}async _openRaster(e){const o=new g({url:this.url,version:this.version,coverageId:this.coverageId,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters}});if(await o.open({signal:e}),!o.rasterInfo)throw o.destroy(),new r("wcs-layer:load","cannot load resources on "+this.url);null==this.title&&this.setAtOrigin("title",o.datasetName,"service"),null==this.coverageId&&this.setAtOrigin("coverageId",o.coverageInfo.id,"service");const{multidimensionalInfo:s}=o.rasterInfo;if(t(s)){const e=s.variables[0].dimensions.find((({name:e})=>"StdTime"===e));if(e){var i,a,l,n,p;let r=null!=(i=null==(a=e.extent)?void 0:a[0])?i:e.values[0];Array.isArray(r)&&(r=r[0]);let t=null!=(l=null==(n=e.extent)?void 0:n[1])?l:e.values[e.values.length-1];Array.isArray(t)&&(t=t[1]);const o=x.has(null==(p=e.intervalUnit)?void 0:p.toLowerCase())?e.intervalUnit.toLowerCase():null;this.set("timeInfo",{startField:"StdTime",fullTimeExtent:{start:r,end:t},timeReference:null,interval:o?{value:e.interval,unit:o}:null})}}this.raster=o,this._configDefaultSettings(),this.watch("customParameters",(e=>this.raster.ioConfig.customFetchParameters=e))}};e([i({json:{write:!0}})],I.prototype,"coverageId",void 0),e([i({readOnly:!0}),s("raster.coverageInfo")],I.prototype,"coverageInfo",void 0),e([i()],I.prototype,"version",void 0),e([i()],I.prototype,"isReference",void 0),e([i({readOnly:!0})],I.prototype,"type",void 0),e([i(h)],I.prototype,"popupEnabled",void 0),e([i()],I.prototype,"popupTemplate",void 0),e([i({readOnly:!0})],I.prototype,"defaultPopupTemplate",null),e([i({readOnly:!0,type:[v]})],I.prototype,"fields",void 0),e([i({readOnly:!0,type:[v]})],I.prototype,"rasterFields",null),I=e([a("esri.layers.WCSLayer")],I);const P=I;export{P as default};
