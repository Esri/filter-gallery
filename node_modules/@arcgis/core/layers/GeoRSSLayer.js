/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import r from"../config.js";import o from"../request.js";import"../symbols.js";import{isSome as t}from"../core/maybe.js";import{MultiOriginJSONMixin as s}from"../core/MultiOriginJSONSupport.js";import{throwIfAbortError as i}from"../core/promiseUtils.js";import{getFilename as l}from"../core/urlUtils.js";import{property as n}from"../core/accessorSupport/decorators/property.js";import"../core/arrayUtils.js";import"../core/has.js";import"../core/accessorSupport/ensureType.js";import{reader as p}from"../core/accessorSupport/decorators/reader.js";import{subclass as a}from"../core/accessorSupport/decorators/subclass.js";import m from"../geometry/Extent.js";import{isWGS84 as y}from"../geometry/support/spatialReferenceUtils.js";import u from"./Layer.js";import{BlendLayer as c}from"./mixins/BlendLayer.js";import{OperationalLayer as d}from"./mixins/OperationalLayer.js";import{PortalLayer as f}from"./mixins/PortalLayer.js";import{RefreshableLayer as h}from"./mixins/RefreshableLayer.js";import{ScaleRangeLayer as S}from"./mixins/ScaleRangeLayer.js";import{id as v,legendEnabled as g,url as j}from"./support/commonProperties.js";import b from"../symbols/Symbol.js";import x from"../symbols/SimpleLineSymbol.js";import C from"../symbols/PictureMarkerSymbol.js";import P from"../symbols/SimpleMarkerSymbol.js";import G from"../symbols/SimpleFillSymbol.js";const L=["atom","xml"],R={base:b,key:"type",typeMap:{"simple-line":x},errorContext:"symbol"},k={base:b,key:"type",typeMap:{"picture-marker":C,"simple-marker":P},errorContext:"symbol"},_={base:b,key:"type",typeMap:{"simple-fill":G},errorContext:"symbol"};let w=class extends(c(h(d(f(S(s(u))))))){constructor(...e){super(...e),this.description=null,this.fullExtent=null,this.legendEnabled=!0,this.lineSymbol=null,this.pointSymbol=null,this.polygonSymbol=null,this.operationalLayerType="GeoRSS",this.url=null,this.type="geo-rss"}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}readFeatureCollections(e,r){return r.featureCollection.layers.forEach((e=>{var r;const o=e.layerDefinition.drawingInfo.renderer.symbol;o&&"esriSFS"===o.type&&null!=(r=o.outline)&&r.style.includes("esriSFS")&&(o.outline.style="esriSLSSolid")})),r.featureCollection.layers}get hasPoints(){return this._hasGeometry("esriGeometryPoint")}get hasPolylines(){return this._hasGeometry("esriGeometryPolyline")}get hasPolygons(){return this._hasGeometry("esriGeometryPolygon")}get title(){const e=this._get("title");return e&&"defaults"!==this.originOf("title")?e:this.url?l(this.url,L)||"GeoRSS":e||""}set title(e){this._set("title",e)}load(e){const r=t(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},e).catch(i).then((()=>this._fetchService(r))).then((e=>{this.read(e,{origin:"service"})}))),Promise.resolve(this)}async hasDataChanged(){const e=await this._fetchService();return this.read(e,{origin:"service",ignoreDefaults:!0}),!0}async _fetchService(e){var t;const s=this.spatialReference,{data:i}=await o(r.geoRSSServiceUrl,{query:{url:this.url,refresh:!!this.loaded||void 0,outSR:y(s)?void 0:null!=(t=s.wkid)?t:JSON.stringify(s)},signal:e});return i}_hasGeometry(e){var r,o;return null!=(r=null==(o=this.featureCollections)?void 0:o.some((r=>{var o,t;return(null==(o=r.featureSet)?void 0:o.geometryType)===e&&(null==(t=r.featureSet.features)?void 0:t.length)>0})))&&r}};e([n()],w.prototype,"description",void 0),e([n()],w.prototype,"featureCollections",void 0),e([p("service","featureCollections",["featureCollection.layers"])],w.prototype,"readFeatureCollections",null),e([n({type:m,json:{name:"lookAtExtent"}})],w.prototype,"fullExtent",void 0),e([n(v)],w.prototype,"id",void 0),e([n(g)],w.prototype,"legendEnabled",void 0),e([n({types:R,json:{write:!0}})],w.prototype,"lineSymbol",void 0),e([n({type:["show","hide"]})],w.prototype,"listMode",void 0),e([n({types:k,json:{write:!0}})],w.prototype,"pointSymbol",void 0),e([n({types:_,json:{write:!0}})],w.prototype,"polygonSymbol",void 0),e([n({type:["GeoRSS"]})],w.prototype,"operationalLayerType",void 0),e([n(j)],w.prototype,"url",void 0),e([n({json:{origins:{service:{read:{source:"name",reader:e=>e||void 0}}}}})],w.prototype,"title",null),e([n({readOnly:!0,json:{read:!1},value:"geo-rss"})],w.prototype,"type",void 0),w=e([a("esri.layers.GeoRSSLayer")],w);const F=w;export{F as default};
