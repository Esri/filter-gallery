/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as r}from"../chunks/tslib.es6.js";import{JSONSupport as o}from"../core/JSONSupport.js";import{property as t}from"../core/accessorSupport/decorators/property.js";import"../core/arrayUtils.js";import"../core/has.js";import"../core/accessorSupport/ensureType.js";import{enumeration as e}from"../core/accessorSupport/decorators/enumeration.js";import{subclass as s}from"../core/accessorSupport/decorators/subclass.js";import p from"./support/ColormapInfo.js";import{convertColorRampToColormap as a}from"./support/colorRampUtils.js";var c;let m=c=class extends o{constructor(r){super(r),this.colormapInfos=null,this.type="raster-colormap"}static createFromColormap(r,o){if(!r)return null;const t=5===r[0].length,e=[...r].sort((r=>r[0][0]-r[1][0])).map((r=>{var e;return p.fromJSON({value:r[0],color:t?r.slice(1,5):r.slice(1,4).concat([255]),label:o?null!=(e=o[r[0]])?e:"":r[0]})}));return new c({colormapInfos:e})}static createFromColorramp(r){const o=a(r,256);return c.createFromColormap(o)}clone(){return new c({colormapInfos:this.colormapInfos.map((r=>r.toJSON()))})}extractColormap(){return this.colormapInfos.map((({value:r,color:o})=>[r,o.r,o.g,o.b,o.a>1?o.a:255*o.a&255])).sort(((r,o)=>r[0]-o[0]))}};r([t({type:[p],json:{write:!0}})],m.prototype,"colormapInfos",void 0),r([e({rasterColormap:"raster-colormap"})],m.prototype,"type",void 0),m=c=r([s("esri.renderers.RasterColormapRenderer")],m);const l=m;export{l as default};
