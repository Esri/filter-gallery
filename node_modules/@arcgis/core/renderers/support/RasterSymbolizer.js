/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import{toHSV as t}from"../../core/colorUtils.js";import{JSONSupport as r}from"../../core/JSONSupport.js";import s from"../../core/Logger.js";import{unwrap as o,isSome as a}from"../../core/maybe.js";import{property as n}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import l from"../../layers/support/RasterInfo.js";import{isValidPixelBlock as u,extractBands as c,stretch as p,colorize as d,remapColor as h,lookupPixels as m,createStretchLUT as f,createColormapLUT as g,createHistogramEqualizationLUT as y,estimateStatisticsHistograms as b}from"../../layers/support/rasterFunctions/pixelUtils.js";import{hillshade as S,tintHillshade as v,calculateHillshadeParams as x}from"../../layers/support/rasterFunctions/surfaceUtils.js";import{convertColorRampToColormap as k}from"./colorRampUtils.js";const R=s.getLogger("esri.renderers.support.RasterSymbolizer");function C(e,t){const{attributeTable:r,bandCount:s}=e;if(!a(r)||s>1)return!1;if(t){if(null==r.fields.find((e=>e.name.toLowerCase()===t.toLowerCase())))return!1}return!0}function _(e){return"elevation"===e.dataType}function O(e){const{bandCount:t,colormap:r}=e;return a(r)&&r.length&&1===t}const I={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34e38,34e38],f64:[-Number.MAX_VALUE,Number.MAX_VALUE]};let L=class extends r{constructor(e){super(e)}bind(){const{rendererJSON:e}=this;if(!e)return{success:!1};let t;switch(this.lookup={rendererJSON:{}},e.type){case"uniqueValue":t=this._updateUVRenderer(e);break;case"rasterColormap":t=this._updateColormapRenderer(e);break;case"rasterStretch":t=this._updateStretchRenderer(e);break;case"classBreaks":t=this._updateClassBreaksRenderer(e);break;case"rasterShadedRelief":t=this._updateShadedReliefRenderer(e);break;case"vectorField":t=this._updateVectorFieldRenderer();break;case"flowRenderer":t=this._updateFlowRenderer()}return t}symbolize(e){let t=e&&e.pixelBlock;if(!V(t))return t;if(e.simpleStretchParams&&"rasterStretch"===this.rendererJSON.type)return this.simpleStretch(t,e.simpleStretchParams);try{let r;switch(t.pixels.length>3&&(t=c(t,[0,1,2])),this.rendererJSON.type){case"uniqueValue":case"rasterColormap":r=this._symbolizeColormap(t);break;case"classBreaks":r=this._symbolizeClassBreaks(t);break;case"rasterStretch":r=this._symbolizeStretch(t,e.bandIds);break;case"rasterShadedRelief":{const{extent:s}=e,o=s.spatialReference.isGeographic,a={x:(s.xmax-s.xmin)/t.width,y:(s.ymax-s.ymin)/t.height};r=this._symbolizeShadedRelief(t,{isGCS:o,resolution:a});break}}return r}catch(r){return R.error("symbolize",r.message),t}}simpleStretch(e,t){if(!V(e))return e;try{return e.pixels.length>3&&(e=c(e,[0,1,2])),p(e,t)}catch(r){return R.error("symbolize",r.message),e}}generateWebGLParameters(e){if(["uniqueValue","rasterColormap","classBreaks"].indexOf(this.rendererJSON.type)>-1){var t;const{indexedColormap:e,offset:r}=(null==(t=this.lookup)?void 0:t.colormapLut)||{};return{colormap:e,colormapOffset:r,type:"lut"}}const{pixelBlock:r,isGCS:s,resolution:o,bandIds:a}=e,{rendererJSON:n}=this;return"rasterStretch"===n.type?this._generateStretchWebGLParams(r,n,a):"rasterShadedRelief"===n.type?this._generateShadedReliefWebGLParams(n,s,o):"vectorField"===n.type?this._generateVectorFieldWebGLParams(n):null}_isLUTChanged(e){if(!this.lookup||!this.lookup.rendererJSON)return!0;if("colorRamp"in this.rendererJSON){const t=this.rendererJSON.colorRamp;return e?JSON.stringify(t)!==JSON.stringify(this.lookup.rendererJSON.colorRamp):(this.rendererJSON,this.lookup.rendererJSON,JSON.stringify(this.rendererJSON)!==JSON.stringify(this.lookup.rendererJSON))}return JSON.stringify(this.rendererJSON)!==JSON.stringify(this.lookup.rendererJSON)}_symbolizeColormap(e){if(this._isLUTChanged()){if(!this.bind().success)return e}return d(e,this.lookup.colormapLut)}_symbolizeClassBreaks(e){const t=this.rasterInfo.pixelType,r=["u8","u16","s8","s16"].indexOf(t)>-1;if(this._isLUTChanged()){if(!this.bind().success)return e}return r?d(e,this.lookup.colormapLut):h(e,this.lookup.remapLut)}_symbolizeStretch(e,t){const{pixelType:r,bandCount:s}=this.rasterInfo,a=this.rendererJSON,n=["u8","u16","s8","s16"].indexOf(r)>-1;let i,l;const{dra:u}=a,c=a.useGamma?a.gamma:null;if("histogramEqualization"===a.stretchType){const r=u?null:this.lookup.histogramLut,s=this._getStretchCutoff(a,e,t,!r),o=p(e,{...s,gamma:c});l=m(o,{lut:u?s.histogramLut:r,offset:0})}else if(n){var h,g;if(u){const s=this._getStretchCutoff(a,e,t);i=f({pixelType:r,...s,gamma:c})}else if(this._isLUTChanged()){if(!this.bind().success)return e;i=this.lookup?this.lookup.stretchLut:null}else i=this.lookup?this.lookup.stretchLut:null;if(!i)return e;s>1&&(null==t?void 0:t.length)===(null==(h=o(e))?void 0:h.pixels.length)&&(null==(g=i)?void 0:g.lut.length)===s&&(i={lut:t.map((e=>i.lut[e])),offset:i.offset}),l=m(e,i)}else{const r=this._getStretchCutoff(a,e,t);l=p(e,{...r,gamma:c})}if(a.colorRamp){if(this._isLUTChanged(!0)){if(!this.bind().success)return e}l=d(l,this.lookup.colormapLut)}return l}_symbolizeShadedRelief(e,t){var r,s;const a=this.rendererJSON,n={...a,...t},i=S(e,n);if(!a.colorRamp)return i;let l;if(this._isLUTChanged(!0)){if(!this.bind().success)return i;l=this.lookup?this.lookup.hsvMap:null}else l=this.lookup?this.lookup.hsvMap:null;if(!l)return i;const u=null!=(r=null==(s=o(this.rasterInfo.statistics))?void 0:s[0])?r:{min:0,max:8e3};return v(i,e,l,u),i}_isVectorFieldData(){const{bandCount:e,dataType:t}=this.rasterInfo;return 2===e&&("vector-magdir"===t||"vector-uv"===t)}_updateVectorFieldRenderer(){return this._isVectorFieldData()?{success:!0}:{success:!1,error:`Unsupported data type "${this.rasterInfo.dataType}"; VectorFieldRenderer only supports "vector-magdir" and "vector-uv".`}}_updateFlowRenderer(){return this._isVectorFieldData()?{success:!0}:{success:!1,error:`Unsupported data type "${this.rasterInfo.dataType}"; FlowRenderer only supports "vector-magdir" and "vector-uv".`}}_updateUVRenderer(e){const{bandCount:t,attributeTable:r,pixelType:s}=this.rasterInfo,o=e.field1;if(!o)return{success:!1,error:"Unsupported renderer; missing UniqueValueRenderer.field."};const a=e.defaultSymbol,n=1===t&&["u8","s8"].includes(s);if(!C(this.rasterInfo,o)&&!n)return{success:!1,error:"Unsupported data; UniqueValueRenderer is only supported on single band data with a valid raster attribute table."};const i=[];if(r){const t=r.fields.find((e=>"value"===e.name.toLowerCase()));if(!t)return{success:!1,error:"Unsupported data; the data's raster attribute table does not have a value field."};r.features.forEach((r=>{var s;const n=e.uniqueValueInfos.find((e=>String(e.value)===String(r.attributes[o]))),l=null==n||null==(s=n.symbol)?void 0:s.color;l?i.push([r.attributes[t.name]].concat(l)):a&&i.push([r.attributes[t.name]].concat(a.color))}))}else{if("value"!==o.toLowerCase())return{success:!1,error:'Unsupported renderer; UniqueValueRenderer.field must be "Value" when raster attribute table is not availalbe.'};e.uniqueValueInfos.forEach((e=>{var t;const r=null==e||null==(t=e.symbol)?void 0:t.color;r?i.push([parseInt(""+e.value,10)].concat(r)):a&&i.push([parseInt(""+e.value,10)].concat(a.color))}))}if(0===i.length)return{success:!1,error:"Invalid UniqueValueRenderer. Cannot find matching records in the raster attribute table."};const l=g({colormap:i});return this.lookup={rendererJSON:e,colormapLut:l},this.canRenderInWebGL=!0,{success:!0}}_updateColormapRenderer(e){if(!O(this.rasterInfo))return{success:!1,error:"Unsupported data; the data source does not have a colormap."};const t=e.colormapInfos.map((e=>[e.value].concat(e.color))).sort(((e,t)=>e[0]-t[0]));if(!t||0===t.length)return{success:!1,error:"Unsupported renderer; ColormapRenderer must have meaningful colormapInfos."};const r=g({colormap:t});return this.lookup={rendererJSON:e,colormapLut:r},this.canRenderInWebGL=!0,{success:!0}}_updateShadedReliefRenderer(e){if(!_(this.rasterInfo))return{success:!1,error:`Unsupported data type "${this.rasterInfo.dataType}"; ShadedReliefRenderer only supports "elevation".`};if(e.colorRamp){const r=k(e.colorRamp,256,!0),s=g({colormap:r}),o=[],a=s.indexedColormap;for(let e=0;e<a.length;e+=4){const r=t({r:a[e],g:a[e+1],b:a[e+2]});o.push([r.h/60,r.s/100,255*r.v/100])}this.lookup={rendererJSON:e,colormapLut:s,hsvMap:o}}else this.lookup=null;return this.canRenderInWebGL=!0,{success:!0}}_updateClassBreaksRenderer(e){const t=this.rasterInfo.pixelType,r=["u8","u16","s8","s16"].indexOf(t)>-1,s=e.classBreakInfos;if(null==s||!s.length)return{success:!1,error:"Unsupported renderer; missing or invalid ClassBreaksRenderer.classBreakInfos."};const o=s.sort(((e,t)=>e.classMaxValue-t.classMaxValue)),a=o[o.length-1];let n=e.minValue;if(!r){const t=[];for(let e=0;e<o.length;e++){var i;t.push({value:null!=(i=o[e].classMinValue)?i:n,mappedColor:o[e].symbol.color}),n=o[e].classMaxValue}return t.push({value:a.classMaxValue,mappedColor:a.symbol.color}),this.lookup={rendererJSON:e,remapLut:t},this.canRenderInWebGL=!1,{success:!0}}const l=[];n=Math.floor(e.minValue);for(let c=0;c<o.length;c++){const e=o[c];for(let t=n;t<e.classMaxValue;t++)l.push([t].concat(e.symbol.color));n=Math.ceil(e.classMaxValue)}a.classMaxValue===n&&l.push([a.classMaxValue].concat(a.symbol.color));const u=g({colormap:l,fillUnspecified:!1});return this.lookup={rendererJSON:e,colormapLut:u},this.canRenderInWebGL=!0,{success:!0}}_isHistogramRequired(e){return"percentClip"===e||"histogramEqualization"===e}_isValidRasterStatistics(e){return a(e)&&e.length>0&&null!=e[0].min&&null!=e[0].max}_updateStretchRenderer(e){var t;let{stretchType:r,dra:s}=e;if(!("none"===r||null!=(t=e.statistics)&&t.length||this._isValidRasterStatistics(this.rasterInfo.statistics)||s))return{success:!1,error:"Unsupported renderer; StretchRenderer.statistics is required when dynamic range adjustment is not used."};const a=o(e.histograms||this.rasterInfo.histograms);!this._isHistogramRequired(e.stretchType)||null!=a&&a.length||s||(r="minMax");const{gamma:n,useGamma:i,colorRamp:l}=e,u=this.rasterInfo.pixelType,c=!s&&["u8","u16","s8","s16"].indexOf(u)>-1;if("histogramEqualization"===r){const t=a.map((e=>y(e)));this.lookup={rendererJSON:e,histogramLut:t}}else if(c){const t=this._getStretchCutoff(e),r=f({pixelType:u,...t,gamma:i?n:null});this.lookup={rendererJSON:e,stretchLut:r}}if(l){const t=k(l,256,!0);this.lookup||(this.lookup={rendererJSON:e}),this.lookup.colormapLut=g({colormap:t}),this.lookup.rendererJSON=e}return this.canRenderInWebGL=!0,{success:!0}}_getStretchCutoff(e,t=null,r,s){var n,i,l;let u,c,p=e.stretchType;var d;if(e.dra)if("minMax"===p&&a(t)&&t.statistics)u=t.statistics.map((e=>[e.minValue,e.maxValue,0,0]));else{const e=b(t);u=a(e)?e.statistics:null,c=a(e)?e.histograms:null}else u=(null==(d=e.statistics)?void 0:d.length)>0?e.statistics:o(this.rasterInfo.statistics),c=e.histograms||o(this.rasterInfo.histograms);!this._isHistogramRequired(p)||null!=(n=c)&&n.length||(p="minMax");const h=(null==(i=u)?void 0:i.length)||(null==(l=c)?void 0:l.length)||this.rasterInfo.bandCount,m=[],f=[];let g,S,v,x,k,R,C,_,O,L,V,T;switch(u&&!Array.isArray(u[0])&&(u=u.map((e=>[e.min,e.max,e.avg,e.stddev]))),p){case"none":{const e=I[this.rasterInfo.pixelType]||I.f32;for(_=0;_<h;_++)m[_]=e[0],f[_]=e[1]}break;case"minMax":for(_=0;_<h;_++)m[_]=u[_][0],f[_]=u[_][1];break;case"standardDeviation":for(_=0;_<h;_++)m[_]=u[_][2]-e.numberOfStandardDeviations*u[_][3],f[_]=u[_][2]+e.numberOfStandardDeviations*u[_][3],m[_]<u[_][0]&&(m[_]=u[_][0]),f[_]>u[_][1]&&(f[_]=u[_][1]);break;case"histogramEqualization":for(_=0;_<h;_++)m[_]=c[_].min,f[_]=c[_].max;break;case"percentClip":for(_=0;_<c.length;_++){for(g=c[_],k=new Uint32Array(g.size),x=[...g.counts],x.length>=20&&(x[0]=x[1]=x[2]=x[x.length-1]=x[x.length-2]=0),v=0,S=(g.max-g.min)/g.size,C=-.5===g.min&&1===S?.5:0,O=0;O<g.size;O++)v+=x[O],k[O]=v;for(R=(e.minPercent||0)*v/100,O=0;O<g.size;O++)if(k[O]>R){m[_]=g.min+S*(O+C);break}for(R=(1-(e.maxPercent||0)/100)*v,O=g.size-2;O>=0;O--)if(k[O]<R){f[_]=g.min+S*(O+2-C);break}}break;default:for(_=0;_<h;_++)m[_]=u[_][0],f[_]=u[_][1]}"histogramEqualization"===p?(V=c[0].size||256,L=0,s&&(T=c.map((e=>y(e))))):(V=e.max||255,L=e.min||0);const N={minCutOff:m,maxCutOff:f,outMax:V,outMin:L,histogramLut:T};return this._getSelectedBandCutoffs(N,r)}_getSelectedBandCutoffs(e,t){if(null==t||0===t.length)return e;const r=Math.max.apply(null,t),{minCutOff:s,maxCutOff:o,outMin:a,outMax:n,histogramLut:i}=e;return s.length===t.length||s.length<=r?e:{minCutOff:t.map((e=>s[e])),maxCutOff:t.map((e=>o[e])),histogramLut:i?t.map((e=>i[e])):null,outMin:a,outMax:n}}_generateStretchWebGLParams(e,t,r){let s=null,o=null;const n=this.lookup&&this.lookup.colormapLut;t.colorRamp&&n&&(s=n.indexedColormap,o=n.offset),"histogramEqualization"===t.stretchType&&(t={...t,stretchType:"minMax"});const{gamma:i}=t,l=!!(t.useGamma&&i&&i.some((e=>1!==e))),{minCutOff:u,maxCutOff:c,outMin:p,outMax:d}=this._getStretchCutoff(t,e,r);let h=0;a(e)&&(h=e.getPlaneCount(),2===h&&((e=e.clone()).statistics=[e.statistics[0]],e.pixels=[e.pixels[0]]));const m=Math.min(3,(null==r?void 0:r.length)||h||this.rasterInfo.bandCount),f=new Float32Array(m),g=s||l?1:255;let y;for(y=0;y<m;y++)f[y]=(d-p)/(c[y]-u[y])/g;const b=new Float32Array(m);if(l)for(y=0;y<m;y++)i[y]>1?i[y]>2?b[y]=6.5+(i[y]-2)**2.5:b[y]=6.5+100*(2-i[y])**4:b[y]=1;return{bandCount:m,outMin:p/g,outMax:d/g,minCutOff:u,maxCutOff:c,factor:f,useGamma:l,gamma:l?i:[1,1,1],gammaCorrection:l?b:[1,1,1],colormap:s,colormapOffset:o,stretchType:t.stretchType,type:"stretch"}}_generateShadedReliefWebGLParams(e,t,r){var s,a,n;let i=null,l=null;const u=this.lookup&&this.lookup.colormapLut;e.colorRamp&&u&&(i=u.indexedColormap,l=u.offset);const c={...e,isGCS:t,resolution:r},p=x(c),d=null==(s=o(this.rasterInfo.statistics))?void 0:s[0];return{...p,minValue:null!=(a=null==d?void 0:d.min)?a:0,maxValue:null!=(n=null==d?void 0:d.max)?n:8e3,hillshadeType:"traditional"===e.hillshadeType?0:1,type:"hillshade",colormap:i,colormapOffset:l}}_generateVectorFieldWebGLParams(e){var t,r,s,o,n,i,l,u;const{style:c,inputUnit:p,outputUnit:d,visualVariables:h,symbolTileSize:m,flowRepresentation:f}=e;let g;const y=null!=(t=null==(r=this.rasterInfo.statistics)?void 0:r[0].min)?t:0,b=null!=(s=null==(o=this.rasterInfo.statistics)?void 0:o[0].max)?s:50,S=null!=(n=null==h?void 0:h.find((e=>"sizeInfo"===e.type)))?n:{type:"sizeInfo",field:"Magnitude",maxDataValue:b,maxSize:.8*m,minDataValue:y,minSize:.2*m},v=null!=(i=S.minDataValue)?i:y,x=null!=(l=S.maxDataValue)?l:b,k=a(S.maxSize)&&a(S.minSize)?[S.minSize/m,S.maxSize/m]:[.2,.8];if("wind_speed"===c){const e=(k[0]+k[1])/2;k[0]=k[1]=e}const R=a(v)&&a(x)?[v,x]:null;if("classified_arrow"===c)if(a(v)&&a(x)&&a(S)){g=[];const e=(S.maxDataValue-S.minDataValue)/5;for(let t=0;t<6;t++)g.push(S.minDataValue+e*t)}else g=[0,1e-6,3.5,7,10.5,14];const C="flow_to"===f===("ocean_current_kn"===c||"ocean_current_m"===c)?0:Math.PI,_=null==h?void 0:h.find((e=>"rotationInfo"===e.type));return{breakValues:g,dataRange:R,inputUnit:p,outputUnit:d,symbolTileSize:m,symbolPercentRange:k,style:c||"single_arrow",rotation:C,rotationType:(null==(u=this.rasterInfo.storageInfo)?void 0:u.tileInfo)&&"vector-uv"===this.rasterInfo.dataType?"geographic":(null==_?void 0:_.rotationType)||e.rotationType,type:"vectorField"}}};function V(e){return u(e)&&0!==e.validPixelCount}e([n({json:{write:!0}})],L.prototype,"rendererJSON",void 0),e([n({type:l,json:{write:!0}})],L.prototype,"rasterInfo",void 0),e([n({json:{write:!0}})],L.prototype,"lookup",void 0),e([n()],L.prototype,"canRenderInWebGL",void 0),L=e([i("esri.renderers.support.RasterSymbolizer")],L);const T=L;export{T as default};
