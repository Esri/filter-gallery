/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as o}from"../../chunks/tslib.es6.js";import{JSONSupport as r}from"../../core/JSONSupport.js";import{clone as s}from"../../core/lang.js";import{property as e}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import{subclass as t}from"../../core/accessorSupport/decorators/subclass.js";import i from"./AuthoringInfoClassBreakInfo.js";var n;let a=n=class extends r{constructor(o){super(o),this.field="",this.normalizationField="",this.label="",this.classBreakInfos=[]}clone(){return new n({field:this.field,normalizationField:this.normalizationField,label:this.label,classBreakInfos:s(this.classBreakInfos)})}};o([e({type:String,json:{write:!0}})],a.prototype,"field",void 0),o([e({type:String,json:{write:!0}})],a.prototype,"normalizationField",void 0),o([e({type:String,json:{write:!0}})],a.prototype,"label",void 0),o([e({type:[i],json:{write:!0}})],a.prototype,"classBreakInfos",void 0),a=n=o([t("esri.renderers.support.AuthoringInfoFieldInfo")],a);const p=a;export{a as AuthoringInfoFieldInfo,p as default};
