/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import e from"../request.js";import{isSome as t}from"../core/maybe.js";import{createQueryParamsHelper as r}from"../core/queryUtils.js";import{normalizeCentralMeridian as s}from"../geometry/support/normalizeUtils.js";import{collectGeometries as i,isInputGeometryZAware as o,fetchServiceDescription as a,dropZValuesOffInputGeometry as n}from"./networkService.js";import{parseUrl as l}from"./utils.js";import u from"./support/RouteSolveResult.js";const f=r({accumulateAttributes:{name:"accumulateAttributeNames"},attributeParameterValues:!0,directionsTimeAttribute:{name:"directionsTimeAttributeName"},impedanceAttribute:{name:"impedanceAttributeName"},outSpatialReference:{name:"outSR",getter:e=>e.outSpatialReference.wkid},pointBarriers:{name:"barriers"},polylineBarriers:!0,polygonBarriers:!0,restrictionAttributes:{name:"restrictionAttributeNames"},stops:!0,travelMode:!0});function c(e){return"esri.rest.support.FeatureSet"===(null==e?void 0:e.declaredClass)}async function p(t,r,u){const p=[],d=[],y={},g={},R=l(t),{path:v}=R;c(r.stops)&&i(r.stops.features,d,"stops.features",y),c(r.pointBarriers)&&i(r.pointBarriers.features,d,"pointBarriers.features",y),c(r.polylineBarriers)&&i(r.polylineBarriers.features,d,"polylineBarriers.features",y),c(r.polygonBarriers)&&i(r.polygonBarriers.features,d,"polygonBarriers.features",y);const b=await s(d);for(const e in y){const t=y[e];p.push(e),g[e]=b.slice(t[0],t[1])}if(o(g,p)){let e=null;try{e=await a(v,r.apiKey,u)}catch{}e&&!e.hasZ&&n(g,p)}for(const e in g)g[e].forEach(((t,s)=>{r.get(e)[s].geometry=t}));const h={...u,query:{...R.query,...f.toQueryParams(r),f:"json"}},A=v.endsWith("/solve")?v:`${v}/solve`,{data:B}=await e(A,h);return m(B)}function m(e){var r,s,i,o,a;const n=new Map,{directionLines:l,directionPoints:f,directions:c,routes:p,stops:m,barriers:d,polygonBarriers:y,polylineBarriers:g,messages:R}=e,v=null!=(r=null!=(s=null!=(i=null!=(o=null==p?void 0:p.spatialReference)?o:null==m?void 0:m.spatialReference)?i:null==d?void 0:d.spatialReference)?s:null==y?void 0:y.spatialReference)?r:null==g?void 0:g.spatialReference;null==p||p.features.forEach((e=>{const r=e.attributes.Name,s=e.attributes.ObjectID;n.has(r)?(n.get(r).route=e,n.get(r).routeId=s):n.set(r,{route:e,routeId:s,routeName:r}),t(e.geometry)&&(e.geometry.spatialReference=v)})),null==c||c.forEach((e=>{const t=e.routeName;n.has(t)?n.get(t).directions=e:n.set(t,{routeName:t,directions:e})})),null==m||m.features.forEach((e=>{var r;const s=null!=(r=e.attributes.RouteName)?r:null;n.has(s)?n.get(s).stops?n.get(s).stops.push(e):n.get(s).stops=[e]:n.set(s,{stops:[e],routeName:s}),t(e.geometry)&&(e.geometry.spatialReference=v)}));const b=null==(a=null==m?void 0:m.features.every((e=>null==e.attributes.RouteName)))||a;if((null==m?void 0:m.features.length)>0&&b){const e=Array.from(n.keys())[0];n.get(e).stops=n.get(null).stops,n.delete(null)}null==l||l.features.forEach((e=>{var t;const r=e.attributes.RouteID,s=null==(t=Array.from(n.values()).find((e=>e.routeId===r)))?void 0:t.routeName;if(s)if(n.has(s))if(n.get(s).directionLines)n.get(s).directionLines.features.push(e);else{const{fieldAliases:t,geometryType:r,spatialReference:i}=l;n.get(s).directionLines={features:[e],fieldAliases:t,geometryType:r,spatialReference:i}}else{const{fieldAliases:t,geometryType:r,spatialReference:i}=l;n.set(s,{routeName:s,directionLines:{features:[e],fieldAliases:t,geometryType:r,spatialReference:i}})}})),null==f||f.features.forEach((e=>{var t;const r=e.attributes.RouteID,s=null==(t=Array.from(n.values()).find((e=>e.routeId===r)))?void 0:t.routeName;if(s)if(n.has(s))if(n.get(s).directionPoints)n.get(s).directionPoints.features.push(e);else{const{fieldAliases:t,geometryType:r,spatialReference:i}=f;n.get(s).directionPoints={features:[e],fieldAliases:t,geometryType:r,spatialReference:i}}else{const{fieldAliases:t,geometryType:r,spatialReference:i}=f;n.set(s,{routeName:s,directionPoints:{features:[e],fieldAliases:t,geometryType:r,spatialReference:i}})}}));const h=Array.from(n.values());return u.fromJSON({routeResults:h,barriers:d,polygonBarriers:y,polylineBarriers:g,messages:R})}export{p as solve};
