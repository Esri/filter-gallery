/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{isSome as e}from"../core/maybe.js";import{urlToObject as n}from"../core/urlUtils.js";import{getScale as t}from"../geometry/support/scaleUtils.js";import{getLayerFloorFilterClause as i,combineFloorsDefinitionExpression as r}from"../views/support/floorFilterUtils.js";function s(e,n){return n?{...n,query:{...e,...n.query}}:{query:e}}function o(e){return"string"==typeof e?n(e):e}function l(e,n,t){const i={};for(const r in e){if("declaredClass"===r)continue;const s=e[r];if(null!=s&&"function"!=typeof s)if(Array.isArray(s)){i[r]=[];for(let e=0;e<s.length;e++)i[r][e]=l(s[e])}else if("object"==typeof s)if(s.toJSON){const e=s.toJSON(t&&t[r]);i[r]=n?e:JSON.stringify(e)}else i[r]=n?s:JSON.stringify(s);else i[r]=s}return i}function f({mapExtent:e,floors:n,width:r,sublayers:s,layerIds:o}){const l={},f={extent:e,width:r,spatialReference:null==e?void 0:e.spatialReference};let u=s;null!=o&&o.length&&s&&(u=s.filter((e=>o.includes(e.id))));const c=t(f),y=[],p=e=>{const n=0===c,t=0===e.minScale||c<=e.minScale,i=0===e.maxScale||c>=e.maxScale;e.visible&&(n||t&&i)&&(e.sublayers?e.sublayers.forEach(p):y.unshift(e))};if(u&&u.forEach(p),u&&u.length){const e=y.map((e=>{const t=i(n,e);return e.toExportImageJSON(t)})),t=e.some((e=>"mapLayer"===e.source.type?e.source.mapLayerId!==e.id:"dataLayer"===e.source.type));if(t){let n=JSON.stringify(e);"[]"===n&&(n="[{}]"),l.dynamicLayers=n}else if(!t){if(null!=o&&o.length)l.layerIds=o;else{const e=u.map((({id:e})=>e));e.length&&(l.layerIds=e)}const e=a({floors:n,visibleSublayers:y});if(e&&e.length){const n=e.reduce(((e,n)=>(n.definitionExpression&&(e[n.id]=n.definitionExpression),e)),{});Object.keys(n).length&&(l.layerDefs=JSON.stringify(n))}}}else null!=o&&o.length&&(l.layerIds=o);return l}function a({floors:n,visibleSublayers:t}){const s=!(null==n||!n.length),o=t.filter((e=>null!=e.definitionExpression||s&&null!=e.floorInfo));if(!o.length)return null;return o.map((t=>{const s=i(n,t),o=e(s)?r(s,t):t.definitionExpression,l={id:t.id,definitionExpression:null};return o&&(l.definitionExpression=o),l}))}export{s as asValidOptions,l as encode,o as parseUrl,f as toDynamicLayersJSON};
