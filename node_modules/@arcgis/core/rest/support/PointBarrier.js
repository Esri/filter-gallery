/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../PopupTemplate.js";import{symbolTypes as r}from"../../symbols.js";import{JSONSupport as o}from"../../core/JSONSupport.js";import{clone as s}from"../../core/lang.js";import{isNone as i,isSome as a,unwrap as l}from"../../core/maybe.js";import{property as p}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import{reader as d}from"../../core/accessorSupport/decorators/reader.js";import{subclass as u}from"../../core/accessorSupport/decorators/subclass.js";import{writer as n}from"../../core/accessorSupport/decorators/writer.js";import m from"../../geometry/Point.js";import{getPrefixedProperties as c}from"../route/utils.js";import{barrierTypeJsonMap as b,curbApproachJsonMap as y,fullEdgeJsonMap as h,sideOfEdgeJsonMap as f,statusJsonMap as g}from"./networkEnums.js";import{fromJSON as O}from"../../symbols/support/jsonUtils.js";var S;let T=S=class extends o{constructor(e){super(e),this.addedCost=null,this.barrierType=null,this.costs=null,this.curbApproach=null,this.fullEdge=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sideOfEdge=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null}readCosts(e,t){return c(t.attributes,"Attr_")}writeCosts(e,t){if(!i(e)){t.attributes||(t.attributes={});for(const r in e)t.attributes[`Attr_${r}`]=e[r]}}static fromPortalJSON(e){var r,o;return new S({addedCost:null!=(r=e.attributes.AddedCost)?r:null,barrierType:a(e.attributes.BarrierType)?b.fromJSON(e.attributes.BarrierType):null,costs:a(e.attributes.Costs)?JSON.parse(e.attributes.Costs):null,curbApproach:a(e.attributes.CurbApproach)?y.fromJSON(e.attributes.CurbApproach):null,fullEdge:a(e.attributes.FullEdge)?h.fromJSON(e.attributes.FullEdge):null,geometry:m.fromJSON(e.geometry),name:null!=(o=e.attributes.Name)?o:null,objectId:e.attributes.__OBJECTID,popupTemplate:a(e.popupInfo)?t.fromJSON(e.popupInfo):null,status:a(e.attributes.Status)?g.fromJSON(e.attributes.Status):null,symbol:a(e.symbol)?O(e.symbol):null})}clone(){return new S(s({addedCost:this.addedCost,barrierType:this.barrierType,costs:this.costs,curbApproach:this.curbApproach,fullEdge:this.fullEdge,geometry:this.geometry,name:this.name,objectId:this.objectId,popupTemplate:this.popupTemplate,sideOfEdge:this.sideOfEdge,sourceId:this.sourceId,sourceOid:this.sourceOid,status:this.status,symbol:this.symbol}))}toPortalJSON(){return{geometry:a(this.geometry)?this.geometry.toJSON():null,attributes:{__OBJECTID:l(this.objectId),AddedCost:this.addedCost,BarrierType:a(this.barrierType)?b.toJSON(this.barrierType):null,Costs:a(this.costs)?JSON.stringify(this.costs):null,CurbApproach:a(this.curbApproach)?y.toJSON(this.curbApproach):null,FullEdge:a(this.fullEdge)?h.toJSON(this.fullEdge):null,Name:this.name,Status:a(this.status)?g.toJSON(this.status):null},symbol:a(this.symbol)?this.symbol.toJSON():null,popupInfo:a(this.popupTemplate)?this.popupTemplate.toJSON():null}}};T.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AddedCost",alias:"Added Cost",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"FullEdge",alias:"Full Edge",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAIntYesNo",codedValues:[{name:"No",code:0},{name:"Yes",code:1}]}},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"Status",alias:"Status",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAObjectStatus",codedValues:[{name:"OK",code:0},{name:"Not Located on Network",code:1},{name:"Network Unbuilt",code:2},{name:"Prohibited Street",code:3},{name:"Invalid Field Values",code:4},{name:"Cannot Reach",code:5},{name:"Time Window Violation",code:6}]}}],T.popupInfo={title:"Point Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"AddedCost",label:"Added Cost",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},e([p({json:{read:!1}})],T.prototype,"addedCost",void 0),e([p({type:b.apiValues,json:{name:"attributes.BarrierType",read:{reader:b.read},write:{writer:b.write}}})],T.prototype,"barrierType",void 0),e([p()],T.prototype,"costs",void 0),e([d("costs",["attributes"])],T.prototype,"readCosts",null),e([n("costs")],T.prototype,"writeCosts",null),e([p({type:y.apiValues,json:{read:{source:"attributes.CurbApproach",reader:y.read}}})],T.prototype,"curbApproach",void 0),e([p({type:h.apiValues,json:{name:"attributes.FullEdge",read:{reader:h.read},write:{writer:h.write}}})],T.prototype,"fullEdge",void 0),e([p({type:m,json:{write:!0}})],T.prototype,"geometry",void 0),e([p({json:{name:"attributes.Name",write:!0}})],T.prototype,"name",void 0),e([p({json:{name:"attributes.ObjectID",write:!0}})],T.prototype,"objectId",void 0),e([p({type:t,json:{read:!1}})],T.prototype,"popupTemplate",void 0),e([p({type:f.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:f.read}}})],T.prototype,"sideOfEdge",void 0),e([p({json:{read:{source:"attributes.SourceID"}}})],T.prototype,"sourceId",void 0),e([p({json:{read:{source:"attributes.SourceOID"}}})],T.prototype,"sourceOid",void 0),e([p({type:g.apiValues,json:{read:{source:"attributes.Status",reader:g.read}}})],T.prototype,"status",void 0),e([p({types:r,json:{read:!1}})],T.prototype,"symbol",void 0),T=S=e([u("esri.rest.support.PointBarrier")],T);const j=T;export{j as default};
