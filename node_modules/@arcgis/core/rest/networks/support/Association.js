/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as o}from"../../../chunks/tslib.es6.js";import"../../../geometry.js";import{JSONSupport as e}from"../../../core/JSONSupport.js";import{property as r}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{reader as t}from"../../../core/accessorSupport/decorators/reader.js";import{subclass as l}from"../../../core/accessorSupport/decorators/subclass.js";import{writer as m}from"../../../core/accessorSupport/decorators/writer.js";import n from"./NetworkElement.js";import s from"../../../geometry/Polyline.js";let p=class extends e{constructor(o){super(o),this.globalId=null,this.associationType=null,this.fromNetworkElement=null,this.toNetworkElement=null,this.geometry=null}readFromNetworkElement(o,e){const r=new n;return r.globalId=e.fromGlobalId,r.networkSourceId=e.fromNetworkSourceId,r.terminalId=e.fromTerminalId,r}writeFromNetworkElement(o,e){o&&(e.fromGlobalId=o.globalId,e.fromNetworkSourceId=o.networkSourceId,e.fromTerminalId=o.terminalId)}readToNetworkElement(o,e){const r=new n;return r.globalId=e.toGlobalId,r.networkSourceId=e.toNetworkSourceId,r.terminalId=e.toTerminalId,r}writeToNetworkElement(o,e){o&&(e.toGlobalId=o.globalId,e.toNetworkSourceId=o.networkSourceId,e.toTerminalId=o.terminalId)}};o([r({type:String,json:{write:!0}})],p.prototype,"globalId",void 0),o([r({type:["attachment","connectivity","containment"],json:{write:!0}})],p.prototype,"associationType",void 0),o([r({type:n,json:{write:{target:{fromGlobalId:{type:String},fromNetworkSourceId:{type:Number},fromTerminalId:{type:Number}}},read:{source:["fromGlobalId","fromNetworkSourceId","fromTerminalId"]}}})],p.prototype,"fromNetworkElement",void 0),o([t("fromNetworkElement")],p.prototype,"readFromNetworkElement",null),o([m("fromNetworkElement")],p.prototype,"writeFromNetworkElement",null),o([r({type:n,json:{write:{target:{toGlobalId:{type:String},toNetworkSourceId:{type:Number},toTerminalId:{type:Number}}},read:{source:["toGlobalId","toNetworkSourceId","toTerminalId"]}}})],p.prototype,"toNetworkElement",void 0),o([t("toNetworkElement")],p.prototype,"readToNetworkElement",null),o([m("toNetworkElement")],p.prototype,"writeToNetworkElement",null),o([r({type:s,json:{write:!0}})],p.prototype,"geometry",void 0),p=o([l("esri.rest.networks.support.Association")],p);const a=p;export{a as default};
