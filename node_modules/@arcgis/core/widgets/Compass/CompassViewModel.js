/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import e from"../../core/Accessor.js";import o from"../../core/Handles.js";import{init as r}from"../../core/watchUtils.js";import{property as s}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import{GoToMixin as a}from"../support/GoTo.js";const n="esri.widgets.CompassViewModel";let h=class extends(a(e)){constructor(t){super(t),this._handles=new o,this.orientation={x:0,y:0,z:0},this.view=null,this._updateForCamera=this._updateForCamera.bind(this),this._updateForRotation=this._updateForRotation.bind(this),this._updateRotationWatcher=this._updateRotationWatcher.bind(this)}initialize(){this._handles.add(r(this,"view",this._updateRotationWatcher))}destroy(){this._handles.destroy(),this._handles=null,this.view=null}get canShowNorth(){const t=this.get("view.spatialReference");return!(!t||!t.isWebMercator&&!t.isGeographic)}get state(){return this.get("view.ready")?this.canShowNorth?"compass":"rotation":"disabled"}reset(){if(!this.get("view.ready"))return;const t={};"2d"===this.view.type?t.rotation=0:t.heading=0,this.callGoTo({target:t})}_updateForRotation(t){null!=t&&(this.orientation={z:t})}_updateForCamera(t){if(!t)return;const e=-t.heading;this.orientation={x:0,y:0,z:e}}_updateRotationWatcher(t){this._handles.removeAll(),t&&("2d"===t.type?this._handles.add(r(this,"view.rotation",this._updateForRotation)):this._handles.add(r(this,"view.camera",this._updateForCamera)))}};t([s({readOnly:!0})],h.prototype,"canShowNorth",null),t([s()],h.prototype,"orientation",void 0),t([s({readOnly:!0})],h.prototype,"state",null),t([s()],h.prototype,"view",void 0),h=t([i(n)],h);const d=h;export{d as default};
