/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../core/Accessor.js";import s from"../../core/Handles.js";import{on as i,whenTrueOnce as o,pausable as a}from"../../core/watchUtils.js";import{property as n}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{subclass as r}from"../../core/accessorSupport/decorators/subclass.js";let p=class extends t{constructor(e){super(e),this._viewpointHandle=null,this._handles=new s,this.group=null}initialize(){this._handles.add(i(this,"view.ui","expand",(e=>{const{target:t}=e;t&&t!==this&&t.expanded&&t.group&&t.group===this.group&&this._collapse()})))}destroy(){this._viewpointHandle=null,this.view=null,this._handles.destroy(),this._handles=null}set autoCollapse(e){this._set("autoCollapse",e),this._watchViewpoint()}set expanded(e){const t=!!e;this._set("expanded",t);const s=this.get("view.ui");s&&s.emit("expand",{target:this}),this._viewpointHandleChange(t)}get state(){return this.get("view.ready")?"ready":"disabled"}set view(e){this._get("view")!==e&&(this._set("view",e),e&&o(e,"ready",(()=>{this.view===e&&this._watchViewpoint()})))}_viewpointHandleChange(e){this._viewpointHandle&&(e?o(this.view,"stationary",(()=>this._viewpointHandle.resume())):this._viewpointHandle.pause())}_watchViewpoint(){const e="viewpoint";this._handles.remove(e),this._viewpointHandle=null;const{autoCollapse:t,view:s}=this;if(s&&t){const t="3d"===s.type?"camera":"viewpoint",i=a(s,t,(()=>this._collapse()));this._handles.add(i,e),this._viewpointHandle=i}}_collapse(){this.expanded=!1}};e([n({value:!1})],p.prototype,"autoCollapse",null),e([n({value:!1})],p.prototype,"expanded",null),e([n()],p.prototype,"group",void 0),e([n({readOnly:!0})],p.prototype,"state",null),e([n({value:null})],p.prototype,"view",null),p=e([r("esri.widgets.Expand.ExpandViewModel")],p);const l=p;export{l as default};
