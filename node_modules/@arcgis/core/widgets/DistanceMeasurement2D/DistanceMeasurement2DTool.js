/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../geometry.js";import t from"../../Graphic.js";import"../../intl.js";import"../../symbols.js";import s from"../../core/Handles.js";import{destroyMaybe as i}from"../../core/maybe.js";import{watch as r,initial as o}from"../../core/reactiveUtils.js";import{formatDecimal as a,formatImperialLength as n,formatMetricLength as l}from"../../core/unitFormatUtils.js";import{convertUnit as m}from"../../core/unitUtils.js";import{property as h}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{subclass as c}from"../../core/accessorSupport/decorators/subclass.js";import{geodesicLength as p,geodesicDensify as d,planarLength as y}from"../../geometry/geometryEngine.js";import{project as u}from"../../geometry/projection.js";import{isSupported as v,geodesicLengths as _,geodesicDensify as f}from"../../geometry/support/geodesicUtils.js";import g from"../../layers/GraphicsLayer.js";import w from"../../layers/GroupLayer.js";import{ViewingMode as j}from"../../views/ViewingMode.js";import b from"../../views/draw/Draw.js";import{createManipulatorDragEventPipeline as S,screenToMap as L,dragGraphic as A}from"../../views/interactive/dragEventPipeline.js";import{GraphicManipulator as M}from"../../views/interactive/GraphicManipulator.js";import{InteractiveToolBase as x}from"../../views/interactive/InteractiveToolBase.js";import{fetchMessageBundle as C}from"../../intl/messages.js";import{onLocaleChange as I}from"../../intl/locale.js";import k from"../../geometry/Point.js";import D from"../../symbols/CIMSymbol.js";import G from"../../symbols/TextSymbol.js";import T from"../../symbols/Font.js";import P from"../../symbols/SimpleMarkerSymbol.js";import R from"../../geometry/Polyline.js";import W from"../../geometry/SpatialReference.js";const E=1e5;let U=class extends x{constructor(e){super(e),this._drawActive=!1,this._handles=new s,this._polylineLayer=new g,this._manipulatorLayer=new g,this._groupLayer=new w({layers:[this._polylineLayer,this._manipulatorLayer],listMode:"hide",visible:!1}),this._vertices=[],this.geodesicDistanceThreshold=1e5,this.measurement=null,this.measurementLabel=null}initialize(){C("esri/core/t9n/Units").then((e=>{this.messages=e})),this._handles.add(I((async()=>{this.messages=await C("esri/core/t9n/Units")})));const e=this.view;this._draw=new b({view:e}),e.map.add(this._groupLayer),e.focus(),this._handles.add([r((()=>[this.unit,this.geodesicDistanceThreshold,this.palette,this.messages]),(()=>{this._vertices.length>0&&this._updatePolylines()}),o)]),this.startToolCreation()}destroy(){const{map:e}=this.view;this._draw.view=null,this._draw=i(this._draw),e.remove(this._groupLayer),this._handles.removeAll(),this._polylineLayer.removeAll(),this._manipulatorLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._handles=i(this._handles),this._polylineLayer=i(this._polylineLayer),this._manipulatorLayer=i(this._manipulatorLayer)}get cursor(){return this._drawActive?"crosshair":null}set editable(e){this._set("editable",e),e||this._draw.reset()}onActivate(){this._drawActive||0!==this._vertices.length||this._startSketch()}onShow(){this._groupLayer.visible=!0}onHide(){this._groupLayer.visible=!1}reset(){this._vertices=[],this._polylineLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._draw.reset(),this._drawActive=!1,this._updateSketch([])}_startSketch(){this._drawActive=!0;const e=this._draw.create("polyline",{mode:"click"});e.on(["vertex-add","vertex-update","vertex-remove","cursor-update","undo","redo"],(e=>this._updateSketch(e.vertices))),e.on("draw-complete",(()=>{this._stopSketch()}))}_stopSketch(){this.manipulators.forEach((e=>{e.manipulator.interactive=!0})),this._drawActive=!1,this.finishToolCreation()}_updateSketch(e){if(e.length<2)return this._vertices=[],this.manipulators.removeAll(),void this._polylineLayer.removeAll();const{spatialReference:t}=this.view;for(;this._vertices.length>e.length;){const{manipulatorId:e}=this._vertices.pop();this.manipulators.remove(e)}for(let n=this._vertices.length;n<e.length;n++){const[s,i]=e[n],r=z(new k({x:s,y:i,spatialReference:t}),this.view,this._manipulatorLayer,this.palette),o=this.manipulators.add(r);S(r,((e,t)=>{t.next(L(this.view)).next(A(e.graphic,j.Local)).next((()=>{const t=e.graphic.geometry;this._vertices[n].coord=[t.x,t.y],this._updatePolylines()}))})),this._vertices.push({manipulatorId:o,coord:[s,i]})}const s=this._vertices.length-1,i=this._vertices[s],[r,o]=e[s];if(i.coord[0]!==r||i.coord[1]!==o){i.coord=[r,o];const e=new k({x:r,y:o,spatialReference:t});this.manipulators.findById(i.manipulatorId).graphic.geometry=e}const a=this._drawActive?this._vertices[s].manipulatorId:null;this.manipulators.forEach((e=>{e.manipulator.interactive=null==a||e.id!==a})),this._updatePolylines()}_updatePolylines(){const e=this._vertices.map((e=>e.coord)),{measurement:s,drawing:i,original:r}=B(e,this.view.spatialReference,this.geodesicDistanceThreshold);this._set("measurement",s);const o=H(this.messages,s,this.unit);let a,n;this._set("measurementLabel",o);const{graphics:l}=this._polylineLayer;if(2===l.length)a=l.getItemAt(0),n=l.getItemAt(1);else{const{pathPrimaryColor:e,pathSecondaryColor:s,pathWidth:i}=this.palette;a=new t({symbol:new D({data:{type:"CIMSymbolReference",symbol:{type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",effects:[{type:"CIMGeometricEffectDashes",dashTemplate:[14,12],lineDashEnding:"FullGap",controlPointEnding:"NoConstraint"}],enable:!0,capStyle:"Butt",joinStyle:"Round",width:i-1.5,color:s},{type:"CIMSolidStroke",enable:!0,capStyle:"Butt",joinStyle:"Round",width:i,color:e}]}}})}),n=new t({symbol:new G({color:[255,255,255,1],haloColor:[0,0,0,.5],haloSize:2,font:new T({size:14,family:"sans-serif"})})}),l.removeAll(),l.addMany([a,n])}a.geometry=i,n.geometry=r.extent.center,n.symbol.text=o}};function z(e,s,i,r){const o=new P({style:"circle",color:r.handleColor,size:r.handleWidth,outline:{type:"simple-line",width:0}}),a=new P({style:"circle",color:r.handleColor,size:1.5*r.handleWidth,outline:{type:"simple-line",width:0}}),n=new t({geometry:e,symbol:o});return new M({view:s,layer:i,graphic:n,focusedSymbol:a})}function B(e,t,s){const i=new R({paths:[e],spatialReference:t});let r,o;if(t.isGeographic)if(v(t))r=_([i],"meters")[0],o=f(i,E);else{const e=u(i,W.WGS84),s=f(e,E);r=_([e],"meters")[0],o=u(s,t)}else if(t.isWebMercator)r=p(i,"meters"),o=d(i,E,"meters");else{const e=y(i,"meters");if(e>=s){const e=u(i,W.WGS84),s=f(e,E);r=_([e],"meters")[0],o=u(s,t)}else r=e,o=i}return{measurement:{geometry:o,length:r},original:i,drawing:o}}function O(e){return null!=e}function F(e){if(!e)return!1;const{isGeographic:t,isWebMercator:s,isWGS84:i}=e;return t&&!i&&!v(e)||!t&&!s}function H(e,t,s){if(!t||!e)return null;switch(s){case"metric":return l(e,t.length,"meters");case"imperial":return n(e,t.length,"meters");default:return a(e,m(t.length,"meters",s),s)}}e([h()],U.prototype,"_drawActive",void 0),e([h({readOnly:!0})],U.prototype,"cursor",null),e([h({value:!0})],U.prototype,"editable",null),e([h({type:Number})],U.prototype,"geodesicDistanceThreshold",void 0),e([h({readOnly:!0})],U.prototype,"measurement",void 0),e([h({readOnly:!0})],U.prototype,"measurementLabel",void 0),e([h()],U.prototype,"messages",void 0),e([h()],U.prototype,"palette",void 0),e([h()],U.prototype,"unit",void 0),e([h({constructOnly:!0})],U.prototype,"view",void 0),U=e([c("esri.widgets.DistanceMeasurement2D.DistanceMeasurement2DTool")],U);export{U as DistanceMeasurement2DTool,B as createDistanceMeasurementInfo2D,H as createDistanceMeasurementLabel,F as isProjectionEngineRequired,O as isSupported};
