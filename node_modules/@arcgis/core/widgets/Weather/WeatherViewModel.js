/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../core/Accessor.js";import r from"../../core/Handles.js";import s from"../../core/Logger.js";import{isNone as o,destroyMaybe as n,applySome as i,unwrapOr as a,isSome as h}from"../../core/maybe.js";import{watch as p,syncAndInitial as m}from"../../core/reactiveUtils.js";import{property as c}from"../../core/accessorSupport/decorators/property.js";import{subclass as l}from"../../core/accessorSupport/decorators/subclass.js";import y from"../../views/3d/environment/CloudyWeather.js";import w from"../../views/3d/environment/FoggyWeather.js";import u from"../../views/3d/environment/RainyWeather.js";import d from"../../views/3d/environment/SnowyWeather.js";import v from"../../views/3d/environment/SunnyWeather.js";import{validateWeatherType as g}from"../../views/3d/environment/weather.js";import{WeatherState as f,WeatherError as _}from"./enums.js";const j=s.getLogger("esri.widgets.Weather.WeatherViewModel");let W=class extends t{constructor(e){super(e),this.view=null,this._handles=new r,this._settingWeather=!1,this._weatherByType={sunny:new v,cloudy:new y,rainy:new u,snowy:new d,foggy:new w}}initialize(){this._handles.add([p((()=>this.current),(e=>{this._settingWeather||o(e)||(this._weatherByType={...this._weatherByType,[e.type]:e})}),m)])}destroy(){this._handles=n(this._handles)}get state(){const e=this.view;if(o(e)||!e.ready)return f.Disabled;switch(this.error){case"unsupported-view":case"local-scene":return f.Error;default:return f.Ready}}get error(){const e=this.view;return o(e)||!e.ready?null:"3d"!==e.type?_.UnsupportedView:"local"===e.viewingMode?_.LocalScene:e.environmentManager.weatherVisible?null:_.NotVisible}get current(){const e=i(this._environment,(e=>e.weather));return a(e,this._weatherByType.sunny)}set current(e){i(this._environment,(t=>t.weather=e))}get test(){return{...this._weatherByType}}get _environment(){const e=this.view;return h(e)&&"3d"===e.type?e.environment:null}setWeatherByType(e){if(!g(e,j))return;const t=this._environment;h(t)&&(this._settingWeather=!0,t.weather=this._weatherByType[e],this._settingWeather=!1)}};e([c()],W.prototype,"view",void 0),e([c()],W.prototype,"state",null),e([c()],W.prototype,"error",null),e([c()],W.prototype,"current",null),e([c()],W.prototype,"_environment",null),W=e([l("esri.widgets.Weather.WeatherViewModel")],W);const B=W;export{B as default};
