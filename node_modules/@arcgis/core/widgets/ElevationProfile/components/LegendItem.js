/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../intl.js";import{destroyMaybe as s}from"../../../core/maybe.js";import{property as t}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as i}from"../../../core/accessorSupport/decorators/subclass.js";import o from"../../Widget.js";import{LEGEND_ITEM_CSS as r}from"../css.js";import{Statistics as l}from"./Statistics.js";import{getTranslatedLineTitle as a}from"../support/intlUtils.js";import"../../support/widgetUtils.js";import{messageBundle as c}from"../../support/decorators/messageBundle.js";import"../../../core/Logger.js";import{tsx as n}from"../../support/jsxFactory.js";import{substitute as d}from"../../../intl/substitute.js";let p=class extends o{constructor(e,s){super(e,s),this.expanded=!1,this.checkboxVisible=!0,this._messages=null}initialize(){this._statistics=new l(this._statisticsProps),this.own(this.watch("_statisticsProps",(e=>{this._statistics.set(e)})))}destroy(){this._statistics=s(this._statistics)}render(){const e=this.expanded;return n("div",{key:this,class:this.classes(r.base,{[r.disabled]:this.disabled,[r.expanded]:e})},this._renderColorIndicator(),n("div",{key:"header",class:r.header},this._renderLabelWithCheckbox(),this._renderCollapseToggleButton()),e&&n("div",{key:"content",class:r.content},this._statistics.render()))}get disabled(){return!this.line.available}get _statisticsProps(){return{line:this.line,effectiveUnits:this.effectiveUnits}}_renderColorIndicator(){return n("div",{key:"color-indicator",class:r.colorIndicator,styles:{backgroundColor:this.line.color.toCss()}})}_renderCollapseToggleButton(){const e=this._messages,s=this.expanded?e.hideDetails:e.showDetails;return n("button",{key:"collapse-toggle",bind:this,class:r.collapseToggle,onclick:this._onCollapseToggleClick,title:s,"aria-label":s,type:"button"},n("span",{class:r.collapseToggleIcon}))}_onCollapseToggleClick(){this.onExpandedToggle()}_renderLabelWithCheckbox(){const{line:e,checkboxVisible:s,disabled:t}=this,i=`${r.base}__check-${e.id}`;return n("label",{key:"id",for:i,class:this.classes(r.label,{[r.labelDisabled]:t||!s})},s&&this._renderCheckbox(i),n("span",null,a(e,this._messages)))}_renderCheckbox(e){const s=this.line,t=s.visible,i=this.disabled,o=this._messages,l=t?o.hideProfile:o.showProfile,c=a(s,this._messages),p=d(l,{name:c});return n("input",{key:"checkbox",id:e,type:"checkbox",class:r.checkbox,title:p,checked:t,disabled:i,"aria-label":p,bind:this,onchange:e=>this._onCheckboxToggle(e,s)})}_onCheckboxToggle(e,s){e.stopPropagation(),s.toggleVisibility()}};e([t({nonNullable:!0})],p.prototype,"effectiveUnits",void 0),e([t({nonNullable:!0})],p.prototype,"line",void 0),e([t()],p.prototype,"expanded",void 0),e([t()],p.prototype,"disabled",null),e([t()],p.prototype,"checkboxVisible",void 0),e([t()],p.prototype,"onExpandedToggle",void 0),e([t()],p.prototype,"_statistics",void 0),e([t(),c("esri/widgets/ElevationProfile/t9n/ElevationProfile")],p.prototype,"_messages",void 0),p=e([i("esri.widgets.ElevationProfile.LegendItem")],p);export{p as LegendItem};
