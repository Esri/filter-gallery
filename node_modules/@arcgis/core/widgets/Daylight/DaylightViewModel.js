/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import{HandleOwner as e}from"../../core/HandleOwner.js";import{unwrap as i}from"../../core/maybe.js";import{when as n,initial as s,watch as a,on as l}from"../../core/reactiveUtils.js";import{schedule as o}from"../../core/scheduling.js";import{truncateLocalTime as r,resetUTCDate as h,offsetDate as g}from"../../core/timeUtils.js";import{property as d}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{subclass as p}from"../../core/accessorSupport/decorators/subclass.js";import u from"../../views/SceneView.js";import y from"../../views/3d/environment/SunLighting.js";import{positionToTimezoneInfo as c}from"../../views/3d/support/earthUtils.js";import{dateTimeToSliderPos as m,sliderPosToDateTime as v,getSeasonFromDate as w,getNorthernHemisphereSeason as f,getSeasonDate as _,Hemisphere as D,calculatePlaySpeed as S}from"./support/daylightUtils.js";import{SliderWithDropdownViewModel as T}from"./support/SliderWithDropdownViewModel.js";import U from"../support/DatePickerViewModel.js";import{getSunriseAndSunsetTimes as P}from"../support/timeWidgetUtils.js";let O=class extends e{constructor(t){super(t),this.view=null,this.datePickerViewModel=new U,this.timeSliderViewModel=new T,this.lightingUpdateInterval=200,this._cachedLightingDateUTC=new Date(0),this._cachedDisplayUTCOffset=0,this._enableShadowsOnFirstInteraction=!0,this._lastLightingUpdate=0,this._nextLightingUpdate=null,this.playSpeedMultiplier=1}initialize(){this.handles.add([n((()=>this.view),(t=>t.when((()=>this._updateLighting(null)))),s),a((()=>{var t;return null==(t=this.view)?void 0:t.environment.lighting.date}),(t=>this._scheduleUpdateLighting(t))),l((()=>{var t;return null==(t=this.view)?void 0:t.environment.lighting}),"timezone-will-change",(t=>this._timezoneWillChange(t)),{onListenerAdd:()=>this._timezoneWillChange(null)}),a((()=>{var t;return null==(t=this.view)?void 0:t.stationary}),(()=>{(this.dayPlaying||this.yearPlaying)&&this._updateSunriseAndSunset()}),s),a((()=>{const t=this.timeSliderViewModel;return{vm:t,state:t.state,sliderPosition:this.timeSliderPosition}}),(({vm:t,state:e,sliderPosition:i})=>{"ready"===e&&t.setValue(0,i)})),a((()=>{var t;return null==(t=this.timeSliderViewModel.currentItem)?void 0:t.utcOffset}),(t=>this.utcOffset=t)),a((()=>this.timeSliderViewModel.isDropdownOpen),(()=>this.stopPlaying())),a((()=>this.timeSliderViewModel.values),(t=>this.timeSliderPosition=t[0])),a((()=>this.datePickerViewModel.value),(t=>{this.dayPlaying=!1,this.localDate=t})),a((()=>this.localDate),(t=>{this.datePickerViewModel.value.valueOf()!==t.getTime()&&this.datePickerViewModel.set("value",t)}))])}destroy(){this._nextLightingUpdate&&(clearTimeout(this._nextLightingUpdate),this._nextLightingUpdate=null),this.view=null}get isSupported(){return!this.view||"3d"===this.view.type}get utcOffset(){return this._cachedDisplayUTCOffset}set utcOffset(t){t!==this.utcOffset&&(this.view.environment.lighting.displayUTCOffset=t,this._updateLighting(null))}get localDate(){return r(this._lightingDateDisplay)}set localDate(t){t.getTime()!==this.localDate.getTime()&&(this._lightingDateDisplay=h(this._lightingDateDisplay,t))}get timeSliderPosition(){return m(this._lightingDateDisplay)}set timeSliderPosition(t){Math.abs(t-this.timeSliderPosition)>1/60&&(this._lightingDateDisplay=v(this._lightingDateDisplay,t),this.stopPlaying(),this._enableShadowsOnFirstInteraction&&(this.directShadowsEnabled=!0,this._enableShadowsOnFirstInteraction=!1))}get _lightingDateDisplay(){return g(this._cachedLightingDateUTC,this._cachedDisplayUTCOffset,"hours")}set _lightingDateDisplay(t){if("virtual"!==this.view.environment.lighting.type){const e=g(t,-this._cachedDisplayUTCOffset,"hours");e.getTime()!==this.view.environment.lighting.date.getTime()&&(this.view.environment.lighting.date=e,this._updateLighting(null))}}_timezoneFromCamera(t){var e;const n=null==(e=t.camera)?void 0:e.position;if(!n||"virtual"===t.environment.lighting.type||!t.environment.lighting.cameraTrackingEnabled)return 0;const s=i(c([n.longitude,n.latitude]));return Math.round(s.hours+s.minutes/60+s.seconds/3600)}set playingState(t){this.playingState!==t&&"virtual"!==this.view.environment.lighting.type&&(this._set("playingState",t),"none"!==t&&(this._updateSunriseAndSunset(),this._lastTime=Date.now(),this._play(),this._enableShadowsOnFirstInteraction&&(this.directShadowsEnabled=!0,this._enableShadowsOnFirstInteraction=!1)))}get dayPlaying(){return"day"===this.playingState}set dayPlaying(t){t?this.playingState="day":this.dayPlaying&&(this.playingState="none")}get yearPlaying(){return"year"===this.playingState}set yearPlaying(t){t?this.playingState="year":this.yearPlaying&&(this.playingState="none")}get currentSeason(){return w(this.localDate,this._currentHemisphere)}set currentSeason(t){this.stopPlaying();const e=f(t,this._currentHemisphere);this.localDate=_(this.localDate,e,D.NORTHERN)}get _currentHemisphere(){var t,e;const i=null==(t=this.view)||null==(e=t.camera)?void 0:e.position;return i?i.latitude>=0?D.NORTHERN:D.SOUTHERN:D.NORTHERN}stopPlaying(){this.playingState="none"}toggleDayPlaying(){this.dayPlaying=!this.dayPlaying}toggleYearPlaying(){this.yearPlaying=!this.yearPlaying}toggleDirectShadows(){this.stopPlaying(),this.directShadowsEnabled=!this.directShadowsEnabled}_updateLighting(t){var e;const i=Date.now();this._lastLightingUpdate=i;const n=null==(e=this.view)?void 0:e.environment.lighting;if(!n||"virtual"===n.type)return;const s=t||n.date,a=n.displayUTCOffset,l=null!==a?a:this._timezoneFromCamera(this.view);this._cachedLightingDateUTC.getTime()!==s.getTime()&&(this._cachedLightingDateUTC=new Date(s.getTime())),this._cachedDisplayUTCOffset!==l&&(this._cachedDisplayUTCOffset=l)}_timezoneWillChange(t){var e;const i=null==(e=this.view)?void 0:e.environment.lighting;if(!i||"virtual"===i.type||!i.cameraTrackingEnabled)return;let n;if(t)n=t.timezoneOffset;else{if(null!=i.displayUTCOffset)return;n=y.calculateTimezoneOffset(i.positionTimezoneInfo)}i.displayUTCOffset=n,this._scheduleUpdateLighting(null)}_scheduleUpdateLighting(t){if(this._nextLightingUpdate)return;const e=Date.now()-this._lastLightingUpdate,i=this.lightingUpdateInterval-e;i<=0?o((()=>this._updateLighting(t))):this._nextLightingUpdate=setTimeout((()=>{this._updateLighting(null),this._nextLightingUpdate=null}),i)}_play(){var t;const e=this.view;if(null!=(t=this.view)&&t.environment&&"virtual"!==this.view.environment.lighting.type&&(this.dayPlaying||this.yearPlaying)){const t=Date.now()-this._lastTime;if(this.dayPlaying){this._lastTime=Date.now();const i=S(this._sunrise,this._sunset,e.environment.lighting.date)*this.playSpeedMultiplier/100*t;if(i>0){let t=new Date(e.environment.lighting.date.getTime()+i);if(((t.getUTCHours()+e.environment.lighting.displayUTCOffset)%24+24)%24<((e.environment.lighting.date.getUTCHours()+e.environment.lighting.displayUTCOffset)%24+24)%24){const n=864e5;t=new Date(e.environment.lighting.date.getTime()+i-n)}e.environment.lighting.date=t}}else{if(t>1e3){this._lastTime=Date.now();const t=(e.environment.lighting.date.getUTCMonth()+1)%12,i=new Date(e.environment.lighting.date.getTime());i.setUTCMonth(t),e.environment.lighting.date=i}}requestAnimationFrame((()=>this._play()))}}_updateSunriseAndSunset(){const t=P(this.view.environment.lighting.date,this.view.camera.position.latitude,this.view.camera.position.longitude,this.view.environment.lighting.displayUTCOffset);this._sunrise=new Date(t.sunrise),this._sunset=new Date(t.sunset)}};t([d({type:u})],O.prototype,"view",void 0),t([d({type:U,nonNullable:!0})],O.prototype,"datePickerViewModel",void 0),t([d({type:T,nonNullable:!0})],O.prototype,"timeSliderViewModel",void 0),t([d()],O.prototype,"isSupported",null),t([d()],O.prototype,"lightingUpdateInterval",void 0),t([d()],O.prototype,"_cachedLightingDateUTC",void 0),t([d()],O.prototype,"_cachedDisplayUTCOffset",void 0),t([d()],O.prototype,"_enableShadowsOnFirstInteraction",void 0),t([d()],O.prototype,"utcOffset",null),t([d()],O.prototype,"localDate",null),t([d()],O.prototype,"timeSliderPosition",null),t([d()],O.prototype,"_lightingDateDisplay",null),t([d({aliasOf:"view.environment.lighting.directShadowsEnabled"})],O.prototype,"directShadowsEnabled",void 0),t([d({type:["none","day","year"],value:"none"})],O.prototype,"playingState",null),t([d()],O.prototype,"dayPlaying",null),t([d()],O.prototype,"yearPlaying",null),t([d()],O.prototype,"playSpeedMultiplier",void 0),t([d()],O.prototype,"currentSeason",null),t([d()],O.prototype,"_lastTime",void 0),t([d()],O.prototype,"_sunrise",void 0),t([d()],O.prototype,"_sunset",void 0),t([d({readOnly:!0})],O.prototype,"_currentHemisphere",null),O=t([p("esri.widgets.Daylight.DaylightViewModel")],O);const C=O;export{C as default};
