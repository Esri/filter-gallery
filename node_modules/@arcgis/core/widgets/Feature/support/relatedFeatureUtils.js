/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import e from"../../../request.js";import t from"../../../core/Error.js";import r from"../../../core/Logger.js";import{eachAlways as s}from"../../../core/promiseUtils.js";import{isNumericField as i}from"../../../layers/support/fieldUtils.js";import o from"../../../rest/support/Query.js";import n from"../../../rest/support/RelationshipQuery.js";import a from"../../../rest/support/StatisticDefinition.js";import l from"../../../tasks/QueryTask.js";import{isRelatedField as u}from"./featureUtils.js";const c="esri.widgets.Feature.support.relatedFeatureUtils",d=r.getLogger(c),f=new Map;function p(e){if(!u(e))return null;const[t,r]=e.split("/").slice(1);return{layerId:t,fieldName:r}}function m(e,t){if(!t.relationships)return null;let r=null;const{relationships:s}=t;return s.some((t=>t.id===parseInt(e,10)&&(r=t,!0))),r}function y({originRelationship:e,relationships:t,layerId:r}){let s;return t&&t.some((t=>(`${t.relatedTableId}`===r&&t.id===e.id&&(s=t),!!s))),s}function F(e,t){const r=t.toLowerCase();for(const s in e)if(s.toLowerCase()===r)return e[s];return null}function h(e,t){const r=m(e,t);if(!r)return;const s=`${t.url}/${r.relatedTableId}`;return{url:s,queryTask:new l({url:s,sourceSpatialReference:t.spatialReference}),relation:r,relatedFields:[],outStatistics:[]}}function I(e,t){if(!t)return;if(!e)return;const{features:r,statsFeatures:s}=e,i=r&&r.value;t.relatedFeatures=i?i.features:[];const o=s&&s.value;t.relatedStatsFeatures=o?o.features:[]}function w(e,t,r,s){const i=new n;return i.outFields=["*"],i.relationshipId="number"==typeof t.id?t.id:parseInt(t.id,10),i.objectIds=[e.attributes[r.objectIdField]],r.queryRelatedFeatures(i,s)}function b(e,t,r){let s=0;const i=[];for(;s<t.length;)i.push(`${e} IN (${t.slice(s,r+s)})`),s+=r;return i.join(" OR ")}async function j(e,t,r,n){const a=r.layerId.toString(),{layerInfo:l,queryTask:u,relation:c,relatedFields:d,outStatistics:f}=t,p=y({originRelationship:c,relationships:l.relationships,layerId:a});if(p.relationshipTableId&&p.keyFieldInRelationshipTable){const t=(await w(e,p,r,n))[e.attributes[r.objectIdField]];if(!t)return null;const i=t.features.map((e=>e.attributes[l.objectIdField]));if((null==f?void 0:f.length)>0&&l.supportsStatistics){const e=new o;e.where=b(l.objectIdField,i,1e3),e.outFields=d,e.outStatistics=f;const r={features:Promise.resolve(t),statsFeatures:u.execute(e)};return s(r)}}const m=null==p?void 0:p.keyField;if(m){const r=i(q(l.fields,m)),a=F(e.attributes,c.keyField),d=r?`${m}=${a}`:`${m}='${a}'`,f=u.execute(new o({where:d,outFields:t.relatedFields}),n),p=t.outStatistics&&t.outStatistics.length>0&&l.supportsStatistics?u.execute(new o({where:d,outFields:t.relatedFields,outStatistics:t.outStatistics}),n):null,y={features:f};return p&&(y.statsFeatures=p),s(y)}return null}function g(t,r){return e(t,{query:{f:"json"},signal:r&&r.signal})}function S({relatedInfos:e,layer:r},i){const o={};return e.forEach(((e,s)=>{const{relation:n}=e;if(!n){const e=new t("relation-required","A relation is required on a layer to retrieve related records.");throw d.error(e),e}const{relatedTableId:a}=n;if("number"!=typeof a){const e=new t("A related table ID is required on a layer to retrieve related records.");throw d.error(e),e}const l=`${r.url}/${a}`,u=f.get(l),c=u||g(l,i);u||f.set(l,c),o[s]=c})),s(o)}function T({graphic:e,relatedInfos:t,layer:r},i){const o={};return t.forEach(((t,s)=>{t.layerInfo&&(o[s]=j(e,t,r,i))})),s(o)}function $({relatedInfo:e,fieldName:t,fieldInfo:r}){if(e.relatedFields.push(t),r.statisticType){const s=new a({statisticType:r.statisticType,onStatisticField:t,outStatisticFieldName:t});e.outStatistics.push(s)}}function q(e,t){if(null!=e){t=t.toLowerCase();for(const r of e)if(r&&r.name.toLowerCase()===t)return r}return null}export{h as createRelatedInfo,y as getDestinationRelation,p as getRelatedFieldInfo,S as queryLayerInfos,T as queryRelatedFeatures,I as setRelatedFeatures,$ as updateRelatedInfo};
