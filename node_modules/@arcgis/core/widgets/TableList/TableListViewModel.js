/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import e from"../../core/Collection.js";import s from"../../core/Evented.js";import i from"../../core/Handles.js";import{debounce as a,throwIfNotAbortError as o}from"../../core/promiseUtils.js";import{init as l,on as r,watch as m}from"../../core/watchUtils.js";import{property as c}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{subclass as n}from"../../core/accessorSupport/decorators/subclass.js";import{findLayerListMode as d}from"../LayerList/support/layerListUtils.js";import h from"./ListItem.js";const p={map:"map",tables:"tables",layerListMode:"layer-list-mode"},_=300,u="hide",b=e.ofType(h);let I=class extends s.EventedAccessor{constructor(t){super(t),this._handles=new i,this.listItemCreatedFunction=null,this.tableItems=new b,this.map=null,this._callListItemsCreatedDebounced=a((async()=>this._callListItemsCreated()),_)}initialize(){this._handles.add([l(this,["map","map.loaded"],(()=>this._mapHandles()))],p.map)}destroy(){this._handles.destroy(),this._handles=null,this.map=null,this.tableItems.removeAll()}get state(){var t;const e=null==(t=this.map)?void 0:t.loadStatus;return"string"==typeof e?"loaded"===e?"ready":"loading"===e?"loading":"disabled":"disabled"}triggerAction(t,e){t&&!t.disabled&&this.emit("trigger-action",{action:t,item:e})}_mapHandles(){const{_handles:t,map:e}=this;t.remove(p.tables),this._compileList(),e&&t.add([r(this,"map.allTables","change",(()=>this._compileList())),l(this,"map.allTables",(()=>this._compileList())),l(this,"listItemCreatedFunction",(()=>this._compileList()))],p.tables)}_callListItemCreated(t){if("function"==typeof this.listItemCreatedFunction){const e={item:t};this.listItemCreatedFunction.call(null,e)}}_removeAllItems(){this.tableItems.removeAll()}_getViewableTables(t){if(t)return t.filter((t=>d(t)!==u))}_watchTablesListMode(t){const{_handles:e}=this;e.remove(p.layerListMode),t&&t.forEach((t=>{e.add(m(t,"listMode",(()=>this._compileList())),p.layerListMode)}))}_compileList(){var t;const e=null==(t=this.map)?void 0:t.tables;this._watchTablesListMode(e);const s=this._getViewableTables(e);s&&s.length?(this._createNewItems(s),this._removeItems(s),this._sortItems(s),this._beforeCallListItemsCreated()):this._removeAllItems()}async _beforeCallListItemsCreated(){return this._callListItemsCreatedDebounced().catch(o)}async _callListItemsCreated(){var t;await(null==(t=this.map)?void 0:t.when()),this.tableItems.forEach((t=>this._callListItemCreated(t)))}_createNewItems(t){const{tableItems:e}=this;t.forEach((t=>{e.find((e=>e.layer===t))||e.add(new h({layer:t}))}))}_removeItems(t){const{tableItems:e}=this;e.forEach((s=>{if(!s)return;t&&t.find((t=>s.layer===t))||e.remove(s)}))}_sortItems(t){const{tableItems:e}=this;e.sort(((e,s)=>{const i=t.indexOf(e.layer),a=t.indexOf(s.layer);return i>a?-1:i<a?1:0}))}};t([c()],I.prototype,"listItemCreatedFunction",void 0),t([c({type:b})],I.prototype,"tableItems",void 0),t([c()],I.prototype,"map",void 0),t([c({readOnly:!0})],I.prototype,"state",null),I=t([n("esri.widgets.TableList.TableListViewModel")],I);const f=I;export{f as default};
