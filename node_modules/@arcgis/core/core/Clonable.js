/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as o}from"../chunks/tslib.es6.js";import s from"./Accessor.js";import"./has.js";import{tryClone as r}from"./lang.js";import e from"./Logger.js";import{unwrapOrThrow as t}from"./maybe.js";import{OriginId as n}from"./accessorSupport/PropertyOrigin.js";import{getProperties as c}from"./accessorSupport/utils.js";import{subclass as l}from"./accessorSupport/decorators/subclass.js";e.getLogger("esri.core.Clonable");const i=s=>{let e=class extends s{clone(){const o=t(c(this),"unable to clone instance of non-accessor class"),s=o.metadatas,e=o.store,l={},i=new Map;for(const t in s){const o=s[t],c=null==e?void 0:e.originOf(t),a=o.clonable;if(o.readOnly||!1===a||c!==n.USER&&c!==n.DEFAULTS&&c!==n.WEB_MAP&&c!==n.WEB_SCENE)continue;const f=this[t];let p=null;p="function"==typeof a?a(f):"reference"===a?f:r(f),null!=f&&null==p||(c===n.DEFAULTS?i.set(t,p):l[t]=p)}const a=new(0,Object.getPrototypeOf(this).constructor)(l);if(i.size){var f;const o=null==(f=c(a))?void 0:f.store;if(o)for(const[s,r]of i)o.set(s,r,n.DEFAULTS)}return a}};return e=o([l("esri.core.Clonable")],e),e};let a=class extends(i(s)){};a=o([l("esri.core.Clonable")],a);export{a as Clonable,i as ClonableMixin};
