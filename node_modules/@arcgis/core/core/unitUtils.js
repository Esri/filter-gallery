/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import"./has.js";import{strict as e}from"./jsonMap.js";import{isSome as s}from"./maybe.js";import{getReferenceEllipsoid as r}from"../geometry/projectionEllipsoid.js";import t from"../geometry/SpatialReference.js";import{earth as i,mars as n,moon as a}from"../geometry/support/Ellipsoid.js";import{isEarth as u,isWKIDFromMars as c,isWKIDFromMoon as o}from"../geometry/support/spatialReferenceUtils.js";import l from"../geometry/support/WKIDUnitConversion.js";const m=39.37,f=i.radius*Math.PI/200,d=/UNIT\[([^\]]+)\]\]$/i,U=l,q=/UNIT\[([^\]]+)\]/i,p=new Set([4261,4305,4807,4810,4811,4812,4816,4819,4821,4901,4902,37225,104139,104140]),B=e()({meter:"meters",foot:"feet",foot_us:"us-feet",foot_clarke:"clarke-feet",yard_clarke:"clarke-yards",link_clarke:"clarke-links",yard_sears:"sears-yards",foot_sears:"sears-feet",chain_sears:"sears-chains",chain_benoit_1895_b:"benoit-1895-b-chains",yard_indian:"indian-yards",yard_indian_1937:"indian-1937-yards",foot_gold_coast:"gold-coast-feet",chain_sears_1922_truncated:"sears-1922-truncated-chains","50_kilometers":"50-kilometers","150_kilometers":"150-kilometers"}),h=e=>e*e,k=e=>e*e*e,y={length:{baseUnit:"meters",units:{millimeters:{inBaseUnits:.001},centimeters:{inBaseUnits:.01},decimeters:{inBaseUnits:.1},meters:{inBaseUnits:1},kilometers:{inBaseUnits:1e3},inches:{inBaseUnits:.0254},feet:{inBaseUnits:.3048},yards:{inBaseUnits:.9144},miles:{inBaseUnits:1609.344},"nautical-miles":{inBaseUnits:1852},"us-feet":{inBaseUnits:1200/3937}}},area:{baseUnit:"square-meters",units:{"square-millimeters":{inBaseUnits:h(.001)},"square-centimeters":{inBaseUnits:h(.01)},"square-decimeters":{inBaseUnits:h(.1)},"square-meters":{inBaseUnits:1},"square-kilometers":{inBaseUnits:h(1e3)},"square-inches":{inBaseUnits:h(.0254)},"square-feet":{inBaseUnits:h(.3048)},"square-yards":{inBaseUnits:h(.9144)},"square-miles":{inBaseUnits:h(1609.344)},"square-us-feet":{inBaseUnits:h(1200/3937)},acres:{inBaseUnits:.0015625*h(1609.344)},ares:{inBaseUnits:100},hectares:{inBaseUnits:1e4}}},volume:{baseUnit:"liters",units:{liters:{inBaseUnits:1},"cubic-millimeters":{inBaseUnits:1e3*k(.001)},"cubic-centimeters":{inBaseUnits:1e3*k(.01)},"cubic-decimeters":{inBaseUnits:1e3*k(.1)},"cubic-meters":{inBaseUnits:1e3},"cubic-kilometers":{inBaseUnits:1e3*k(1e3)},"cubic-inches":{inBaseUnits:1e3*k(.0254)},"cubic-feet":{inBaseUnits:1e3*k(.3048)},"cubic-yards":{inBaseUnits:1e3*k(.9144)},"cubic-miles":{inBaseUnits:1e3*k(1609.344)}}},angle:{baseUnit:"radians",units:{radians:{inBaseUnits:1},degrees:{inBaseUnits:Math.PI/180}}}},b=function(){const e={};for(const s in y)for(const r in y[s].units)e[r]=s;return e}();function _(e,s,r){return e*y[r].units[s].inBaseUnits}function g(e,s,r){return e/y[r].units[s].inBaseUnits}const S=["metric","imperial","square-inches","square-feet","square-yards","square-miles","square-us-feet","square-meters","square-kilometers","acres","ares","hectares"],w=["metric","imperial","inches","feet","yards","miles","nautical-miles","us-feet","meters","kilometers"];function j(e){return"imperial"===e||"metric"===e}function M(e){const s=b[e];if(s)return s;throw new Error("unknown type")}function I(e){return y[e].baseUnit}function P(e){return I(M(e))}function C(e,s=null){return s=s||M(e),y[s].baseUnit===e}function D(e,s,r){if(s===r)return e;const t=M(s);if(t!==M(r))throw new Error("incompatible units");const i=C(s,t)?e:_(e,s,t);return C(r,t)?i:g(i,r,t)}function x(e,s,r){switch(r){case"metric":return E(e,s);case"imperial":return O(e,s);default:return r}}function v(e,s,r){switch(r){case"metric":return N(e,s);case"imperial":return F(e,s);default:return r}}function E(e,s){return D(e,s,"meters")<3e3?"meters":"kilometers"}function N(e,s){return D(e,s,"meters")<1e5?"meters":"kilometers"}function O(e,s){return D(e,s,"feet")<1e3?"feet":"miles"}function F(e,s){return D(e,s,"feet")<1e5?"feet":"miles"}function J(e,s){return D(e,s,"square-meters")<3e6?"square-meters":"square-kilometers"}function K(e,s){return D(e,s,"square-feet")<1e6?"square-feet":"square-miles"}function R(e,s,r){return D(e,s,"meters")/(r*Math.PI/180)}function A(e){return B.fromJSON(e.toLowerCase())||null}function T(e){return B.toJSON(e)||null}function Y(e){if(e&&"object"==typeof e&&!u(e))return 1;const s=H(e);return s>1e5?1:s}function G(e){return H(e)>=(e instanceof t?r(e).metersPerDegree:1e5)?"meters":z(e)}function H(e,s=i.metersPerDegree){return L(e,!0)||s}function L(e,s=!1){let r,t,i=null;if(null!=e&&("object"==typeof e?(r=e.wkid,t=e.wkt):"number"==typeof e?r=e:"string"==typeof e&&(t=e)),r){if(c(r))return n.metersPerDegree;if(o(r))return a.metersPerDegree;i=U.values[U[r]],!i&&s&&p.has(r)&&(i=f)}else t&&(V(t)?i=W(d.exec(t),i):Q(t)&&(i=W(q.exec(t),i)));return i}function W(e,s){return e&&e[1]?$(e[1]):s}function $(e){return parseFloat(e.split(",")[1])}function z(e){let r,t,i=null;if(null!=e&&("object"==typeof e?(r=e.wkid,t=e.wkt):"number"==typeof e?r=e:"string"==typeof e&&(t=e)),r)i=U.units[U[r]];else if(t){const e=V(t)?d:Q(t)?q:null;if(e){const s=e.exec(t);s&&s[1]&&(i=Z(s[1]))}}return s(i)?A(i):null}function Q(e){return/^GEOCCS/i.test(e)}function V(e){return/^PROJCS/i.test(e)}const X=1e-7;function Z(e){const s=/[\\"\\']{1}([^\\"\\']+)/.exec(e);let r=s&&s[1];if(!r||-1===U.units.indexOf(r)){const s=$(e);r=null;const t=U.values;for(let e=0;e<t.length;++e)if(Math.abs(s-t[e])<X){r=U.units[e];break}}return r}function ee(e){if(!e)return null;switch(z(e)){case"feet":case"us-feet":case"clarke-feet":case"clarke-yards":case"clarke-links":case"sears-yards":case"sears-feet":case"sears-chains":case"benoit-1895-b-chains":case"indian-yards":case"indian-1937-yards":case"gold-coast-feet":case"sears-1922-truncated-chains":return"imperial";case"50-kilometers":case"150-kilometers":case"meters":return"metric";case null:case void 0:return null}return null}const se={esriAcres:"acres",esriAres:"ares",esriHectares:"hectares",esriSquareCentimeters:"square-centimeters",esriSquareDecimeters:"square-decimeters",esriSquareFeet:"square-feet",esriSquareInches:"square-inches",esriSquareKilometers:"square-kilometers",esriSquareMeters:"square-meters",esriSquareMiles:"square-miles",esriSquareMillimeters:"square-millimeters",esriSquareUsFeet:"square-us-feet",esriSquareYards:"square-yards"},re={esriCentimeters:"centimeters",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriYards:"yards"},te=e()(se),ie=e()(re),ne=e()({...se,...re});export{te as areaUnitsJSONMap,P as baseUnitForUnit,I as baseUnitForUnitType,D as convertUnit,ee as getDefaultUnitSystem,L as getMetersPerUnit,H as getMetersPerUnitForSR,Y as getMetersPerVerticalUnitForSR,z as getUnitString,G as getVerticalUnitStringForSR,m as inchesPerMeter,C as isBaseUnit,j as isMeasurementSystem,R as lengthToDegrees,ie as lengthUnitsJSONMap,S as measurementAreaUnits,w as measurementLengthUnits,K as preferredImperialAreaUnit,O as preferredImperialLengthUnit,F as preferredImperialVerticalLengthUnit,x as preferredLengthUnit,J as preferredMetricAreaUnit,E as preferredMetricLengthUnit,N as preferredMetricVerticalLengthUnit,v as preferredVerticalLengthUnit,A as unitFromRESTJSON,T as unitToRESTJSON,M as unitType,ne as unitsJSONMap};
