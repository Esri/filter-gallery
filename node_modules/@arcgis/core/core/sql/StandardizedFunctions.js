/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{escapeRegExpString as a}from"../string.js";class e{constructor(){this.op="+",this.day=0,this.second=0,this.hour=0,this.month=0,this.year=0,this.minute=0}static _fixDefaults(a){if(null!==a.precision||null!==a.secondary)throw new Error("Primary and Secondary SqlInterval qualifiers not supported")}static createFromMilliseconds(a){const t=new e;return t.second=a/1e3,t}static createFromValueAndQualifer(a,t,r){let n=null;const l=new e;if(l.op="-"===r?"-":"+","interval-period"===t.type){e._fixDefaults(t);const r=new RegExp("^[0-9]{1,}$");if("year"===t.period||"month"===t.period)throw new Error("Year-Month Intervals not supported");if(!r.test(a))throw new Error("Illegal Interval");l[t.period]=parseFloat(a)}else{if(e._fixDefaults(t.start),e._fixDefaults(t.end),"year"===t.start.period||"month"===t.start.period)throw new Error("Year-Month Intervals not supported");if("year"===t.end.period||"month"===t.end.period)throw new Error("Year-Month Intervals not supported");switch(t.start.period){case"day":switch(t.end.period){case"hour":if(n=new RegExp("^[0-9]{1,} [0-9]{1,}$"),!n.test(a))throw new Error("Illegal Interval");l[t.start.period]=parseFloat(a.split(" ")[0]),l[t.end.period]=parseFloat(a.split(" ")[1]);break;case"minute":if(n=new RegExp("^[0-9]{1,} [0-9]{1,2}:[0-9]{1,}$"),!n.test(a))throw new Error("Illegal Interval");{l[t.start.period]=parseFloat(a.split(" ")[0]);const e=a.split(" ")[1].split(":");l.hour=parseFloat(e[0]),l.minute=parseFloat(e[1])}break;case"second":if(n=new RegExp("^[0-9]{1,} [0-9]{1,2}:[0-9]{1,2}:[0-9]{1,}([.]{1}[0-9]{1,}){0,1}$"),!n.test(a))throw new Error("Illegal Interval");{l[t.start.period]=parseFloat(a.split(" ")[0]);const e=a.split(" ")[1].split(":");l.hour=parseFloat(e[0]),l.minute=parseFloat(e[1]),l.second=parseFloat(e[2])}break;default:throw"Invalid Interval."}break;case"hour":switch(t.end.period){case"minute":if(n=new RegExp("^[0-9]{1,}:[0-9]{1,}$"),!n.test(a))throw new Error("Illegal Interval");l.hour=parseFloat(a.split(":")[0]),l.minute=parseFloat(a.split(":")[1]);break;case"second":if(n=new RegExp("^[0-9]{1,}:[0-9]{1,2}:[0-9]{1,}([.]{1}[0-9]{1,}){0,1}$"),!n.test(a))throw new Error("Illegal Interval");{const e=a.split(":");l.hour=parseFloat(e[0]),l.minute=parseFloat(e[1]),l.second=parseFloat(e[2])}break;default:throw"Invalid Interval."}break;case"minute":if("second"!==t.end.period)throw"Invalid Interval.";if(n=new RegExp("^[0-9]{1,}:[0-9]{1,}([.]{1}[0-9]{1,}){0,1}$"),!n.test(a))throw new Error("Illegal Interval");{const e=a.split(":");l.minute=parseFloat(e[0]),l.second=parseFloat(e[1])}break;default:throw"Invalid Interval."}}return l}valueInMilliseconds(){return("-"===this.op?-1:1)*(1e3*this.second+60*this.minute*1e3+60*this.hour*60*1e3+24*this.day*60*60*1e3+this.month*(365/12)*24*60*60*1e3+365*this.year*24*60*60*1e3)}}function t(a,e){const t=n[a.toLowerCase()];if(null==t)throw new Error("Function Not Recognised");if(e.length<t.minParams||e.length>t.maxParams)throw new Error(`Invalid Parameter count for call to ${a.toUpperCase()}`);return t.evaluate(e)}function r(a,e){const t=n[a.toLowerCase()];return null!=t&&e>=t.minParams&&e<=t.maxParams}const n={extract:{minParams:2,maxParams:2,evaluate:([a,e])=>{if(null==e)return null;if(e instanceof Date)switch(a.toUpperCase()){case"SECOND":return e.getSeconds();case"MINUTE":return e.getMinutes();case"HOUR":return e.getHours();case"DAY":return e.getDate();case"MONTH":return e.getMonth()+1;case"YEAR":return e.getFullYear()}throw new Error("Invalid Parameter for call to EXTRACT")}},substring:{minParams:2,maxParams:3,evaluate:a=>{if(2===a.length){const[e,t]=a;return null==e||null==t?null:e.toString().substring(t-1)}if(3===a.length){const[e,t,r]=a;return null==e||null==t||null==r?null:r<=0?"":e.toString().substring(t-1,t+r-1)}}},position:{minParams:2,maxParams:2,evaluate:([a,e])=>null==a||null==e?null:e.indexOf(a)+1},trim:{minParams:2,maxParams:3,evaluate:e=>{const t=3===e.length,r=t?e[1]:" ",n=t?e[2]:e[1];if(null==r||null==n)return null;const l=`(${a(r)})`;switch(e[0]){case"BOTH":return n.replace(new RegExp(`^${l}*|${l}*$`,"g"),"");case"LEADING":return n.replace(new RegExp(`^${l}*`,"g"),"");case"TRAILING":return n.replace(new RegExp(`${l}*$`,"g"),"")}throw new Error("Invalid Parameter for call to TRIM")}},abs:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.abs(a[0])},ceiling:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.ceil(a[0])},floor:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.floor(a[0])},log:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.log(a[0])},log10:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.log(a[0])*Math.LOG10E},sin:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.sin(a[0])},cos:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.cos(a[0])},tan:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.tan(a[0])},asin:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.asin(a[0])},acos:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.acos(a[0])},atan:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.atan(a[0])},sign:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:a[0]>0?1:a[1]<0?-1:0},power:{minParams:2,maxParams:2,evaluate:a=>null==a[0]||null==a[1]?null:a[0]**a[1]},mod:{minParams:2,maxParams:2,evaluate:a=>null==a[0]||null==a[1]?null:a[0]%a[1]},round:{minParams:1,maxParams:2,evaluate:a=>{const e=a[0],t=2===a.length?10**a[1]:1;return null==e?null:Math.round(e*t)/t}},truncate:{minParams:1,maxParams:2,evaluate:a=>null==a[0]?null:1===a.length?parseInt(a[0].toFixed(0),10):parseFloat(a[0].toFixed(a[1]))},char_length:{minParams:1,maxParams:1,evaluate:a=>"string"==typeof a[0]||a[0]instanceof String?a[0].length:0},concat:{minParams:1,maxParams:1/0,evaluate:a=>{let e="";for(let t=0;t<a.length;t++){if(null==a[t])return null;e+=a[t].toString()}return e}},lower:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:a[0].toString().toLowerCase()},upper:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:a[0].toString().toUpperCase()}};export{e as SqlInterval,t as evaluateFunction,r as isStandardized};
