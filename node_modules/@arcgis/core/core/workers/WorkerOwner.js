/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{workerMessages as e}from"../../kernel.js";import t from"../Error.js";import o from"../Logger.js";import{onAbortOrThrow as s,isPromiseLike as r,isAbortError as n}from"../promiseUtils.js";import{newJobId as a,receiveMessage as i,toInvokeError as l,postMessage as d,MessageType as h}from"./utils.js";import{createWorker as c}from"./workerFactory.js";const p=o.getLogger("esri.core.workers"),{ABORT:b,INVOKE:m,OPEN:_,OPENED:u,RESPONSE:g}=h;class j{constructor(e,t){this._outJobs=new Map,this._inJobs=new Map,this.worker=e,this.id=t,e.addEventListener("message",this._onMessage.bind(this)),e.addEventListener("error",(e=>{e.preventDefault(),p.error(e)}))}static async create(e){const t=await c();return new j(t,e)}terminate(){this.worker.terminate()}async open(e,t={}){const{signal:o}=t,r=a();return new Promise(((t,n)=>{const a={resolve:t,reject:n,abortHandle:s(o,(()=>{this._outJobs.delete(r),this._post({type:b,jobId:r})}))};this._outJobs.set(r,a),this._post({type:_,jobId:r,modulePath:e})}))}_onMessage(e){const t=i(e);if(t)switch(t.type){case u:this._onOpenedMessage(t);break;case g:this._onResponseMessage(t);break;case b:this._onAbortMessage(t);break;case m:this._onInvokeMessage(t)}}_onAbortMessage(e){const t=this._inJobs,o=e.jobId,s=t.get(o);s&&(s.controller&&s.controller.abort(),t.delete(o))}_onInvokeMessage(t){const{methodName:o,jobId:s,data:a,abortable:i}=t,d=i?new AbortController:null,h=this._inJobs,c=e[o];let p;try{if("function"!=typeof c)throw new TypeError(`${o} is not a function`);p=c.call(null,a,{signal:d?d.signal:null})}catch(b){return void this._post({type:g,jobId:s,error:l(b)})}r(p)?(h.set(s,{controller:d,promise:p}),p.then((e=>{h.has(s)&&(h.delete(s),this._post({type:g,jobId:s},e))}),(e=>{h.has(s)&&(h.delete(s),e||(e={message:"Error encountered at method"+o}),n(e)||this._post({type:g,jobId:s,error:l(e||{message:`Error encountered at method ${o}`})}))}))):this._post({type:g,jobId:s},p)}_onOpenedMessage(e){var t;const{jobId:o,data:s}=e,r=this._outJobs.get(o);r&&(this._outJobs.delete(o),null==(t=r.abortHandle)||t.remove(),r.resolve(s))}_onResponseMessage(e){var o;const{jobId:s,error:r,data:n}=e,a=this._outJobs.get(s);a&&(this._outJobs.delete(s),null==(o=a.abortHandle)||o.remove(),r?a.reject(t.fromJSON(JSON.parse(r))):a.resolve(n))}_post(e,t,o){return d(this.worker,e,t,o)}}export{j as default};
