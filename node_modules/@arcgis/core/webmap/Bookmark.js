/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import t from"../TimeExtent.js";import o from"../Viewpoint.js";import{deprecatedProperty as r}from"../core/deprecate.js";import i from"../core/Error.js";import{IdentifiableMixin as n}from"../core/Identifiable.js";import{JSONSupport as s}from"../core/JSONSupport.js";import{clone as p}from"../core/lang.js";import m from"../core/Logger.js";import{isSome as a,isNone as c}from"../core/maybe.js";import{property as l}from"../core/accessorSupport/decorators/property.js";import{cast as u}from"../core/accessorSupport/decorators/cast.js";import{reader as w}from"../core/accessorSupport/decorators/reader.js";import{subclass as y}from"../core/accessorSupport/decorators/subclass.js";import{writer as d}from"../core/accessorSupport/decorators/writer.js";import{ensureType as h}from"../core/accessorSupport/ensureType.js";import f from"../geometry/Extent.js";import{SlideThumbnail as j}from"../webdoc/support/SlideThumbnail.js";var v;const b="esri.webmap.Bookmark",x=m.getLogger(b);let g=v=class extends(n(s)){constructor(e){super(e),this.name=null,this.thumbnail=new j,this.timeExtent=null}set extent(e){r(x,"extent",{replacement:"viewpoint",version:"4.17"}),this._set("viewpoint",new o({targetGeometry:e.clone()})),this._set("extent",e)}castThumbnail(e){return"string"==typeof e?new j({url:e}):h(j,e)}set viewpoint(e){const{targetGeometry:t,scale:o}=e;a(t)&&("extent"===t.type?this._set("extent",t.clone()):"point"===t.type&&c(o)&&x.warn("Bookmark.viewpoint should include 'scale' when its targetGeometry is a point.",e)),this._set("viewpoint",e)}readViewpoint(e,t){const{extent:r,viewpoint:i}=t;return o.fromJSON(i||{targetGeometry:r})}writeViewpoint(e,t,o,r){if(!e)return;const{targetGeometry:n}=e;if(a(n)&&"extent"!==n.type){const e="Bookmark.viewpoint cannot be written to JSON when the viewpoint's targetGeometry is not an extent.";null!=r&&r.messages?r.messages.push(new i("property:unsupported",e)):x.error(e)}else t[o]=e.toJSON()}clone(){return new v(p({name:this.name,thumbnail:this.thumbnail,timeExtent:this.timeExtent,viewpoint:this.viewpoint}))}};e([l({type:f,nonNullable:!0,json:{read:!1,write:{isRequired:!0}}})],g.prototype,"extent",null),e([l({type:String,nonNullable:!0,json:{write:{isRequired:!0}}})],g.prototype,"name",void 0),e([l({type:j,json:{write:{overridePolicy:e=>({enabled:!(!e||!e.url)})}}})],g.prototype,"thumbnail",void 0),e([u("thumbnail")],g.prototype,"castThumbnail",null),e([l({type:t,json:{write:!0}})],g.prototype,"timeExtent",void 0),e([l({type:o,nonNullable:!0,json:{write:!0}})],g.prototype,"viewpoint",null),e([w("viewpoint",["extent","viewpoint"])],g.prototype,"readViewpoint",null),e([d("viewpoint")],g.prototype,"writeViewpoint",null),g=v=e([y(b)],g);const S=g;export{S as default};
