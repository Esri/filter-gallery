/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import e from"../Color.js";import{createColors as o}from"../smartMapping/renderers/support/utils.js";import t from"../smartMapping/symbology/support/colors.js";import{createThemes as n,getThemesforBasemap as a,getRawSchemes as r,filterSchemesByName as i,filterSchemesByTag as s}from"../smartMapping/symbology/support/symbologyUtils.js";const m={light:{color:[153,153,153,.25],width:"1px"},dark:{color:[153,153,153,.25],width:"1px"}},c=["vibrant-rainbow","cat-dark","predominant-v2","predominant-v1","predominance-race","desert-blooms","tropical-bliss","under-the-sea","ocean-bay","cat-light","predominant-v4","predominance-money","predominant-v3","predominance-race-ethnic","pastel-chalk","predominance-rainbow","predominance-sequence"],l=n({themeDictionary:{default:{name:"default",label:"Default",description:"Default theme for visualizing features using the density of randomly placed dots.",schemes:{default:{light:{primary:"predominant-v5",secondary:c,common:{outline:m.light,fillOpacity:.8}},dark:{primary:"predominant-v5",secondary:c,common:{outline:m.dark,fillOpacity:.8}}}}}}});function p(e){return a(l,e)}function u(e){const o="default",t=r({basemap:e.basemap,basemapTheme:e.basemapTheme,theme:l.get(o)});if(!t)return;const{schemesInfo:n,basemapId:a,basemapTheme:i}=t,s=n.common,m=e.numColors;return{primaryScheme:g(n.primary,s,m),secondarySchemes:n.secondary.map((e=>g(e,s,m))).filter(Boolean),basemapId:a,basemapTheme:i}}function d(e){return i(e.name,u(e))}function h(e){return s(e.includedTags,e.excludedTags,u(e))}function f(o){if(!o)return;const t={...o};return t.tags=[...t.tags],t.colors&&(t.colors=t.colors.map((o=>new e(o)))),t.outline&&(t.outline={color:t.outline.color&&new e(t.outline.color),width:t.outline.width}),t}function g(e,n,a){const r=t[e];if(!r)return;return y({name:r.name,tags:r.tags,colors:r[a]||o(r.stops,a),opacity:n.fillOpacity,outline:n.outline})}function y(o){return{name:o.name,tags:[...o.tags],colors:o.colors.map((o=>new e(o))),outline:{color:new e(o.outline.color),width:o.outline.width},opacity:o.opacity}}const b=Object.freeze({__proto__:null,getThemes:p,getSchemes:u,getSchemeByName:d,getSchemesByTag:h,cloneScheme:f});export{p as a,d as b,f as c,b as d,h as e,u as g};
