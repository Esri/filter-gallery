/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{ShaderOutput as e}from"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutputOptions.js";import{Slice as r}from"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js";import{Transform as i}from"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js";import{VertexColor as o}from"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexColor.glsl.js";import{OutputDepth as t}from"../views/3d/webgl-engine/core/shaderLibrary/output/OutputDepth.glsl.js";import{OutputHighlight as l}from"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js";import{ReadLinearDepth as a}from"../views/3d/webgl-engine/core/shaderLibrary/output/ReadLinearDepth.glsl.js";import{multipassTerrainTest as s}from"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js";import{symbolAlphaCutoff as n}from"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaDiscard.glsl.js";import{ColorConversion as d}from"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js";import{glsl as p}from"../views/3d/webgl-engine/core/shaderModules/interfaces.js";import{ShaderBuilder as g}from"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js";import{VertexAttribute as u}from"../views/3d/webgl-engine/lib/VertexAttribute.js";function m(m){const h=new g,v=m.output===e.Depth;return h.include(i,{linearDepth:v}),h.include(o,m),h.vertex.uniforms.add("proj","mat4").add("view","mat4"),h.attributes.add(u.POSITION,"vec3"),h.varyings.add("vpos","vec3"),m.multipassTerrainEnabled&&h.varyings.add("depth","float"),v&&(h.include(t,m),h.vertex.uniforms.add("nearFar","vec2"),h.varyings.add("linearDepth","float")),h.vertex.code.add(p`
    void main(void) {
      vpos = position;
      forwardNormalizedVertexColor();
      ${m.multipassTerrainEnabled?"depth = (view * vec4(vpos, 1.0)).z;":""}
      gl_Position = ${v?p`transformPositionWithDepth(proj, view, vpos, nearFar, linearDepth);`:p`transformPosition(proj, view, vpos);`}
    }
  `),h.include(r,m),h.fragment.include(d),m.multipassTerrainEnabled&&(h.fragment.include(a),h.include(s,m)),h.fragment.uniforms.add("eColor","vec4"),m.output===e.Highlight&&h.include(l),h.fragment.code.add(p`
  void main() {
    discardBySlice(vpos);
    ${m.multipassTerrainEnabled?"terrainDepthTest(gl_FragCoord, depth);":""}
    vec4 fColor = ${m.attributeColor?"vColor * eColor;":"eColor;"}

    if (fColor.a < ${p.float(n)}) {
      discard;
    }

    ${m.output===e.Alpha?p`gl_FragColor = vec4(fColor.a);`:""}

    ${m.output===e.Color?p`gl_FragColor = highlightSlice(fColor, vpos); ${m.oitEnabled?"gl_FragColor = premultiplyAlpha(gl_FragColor);":""}`:""}
    ${m.output===e.Highlight?p`outputHighlight();`:""};
    ${m.output===e.Depth?p`outputDepth(linearDepth);`:""};
  }
  `),h}const h=Object.freeze({__proto__:null,build:m});export{h as C,m as b};
