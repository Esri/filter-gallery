/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{G as e}from"./geometryEngineBase.js";import{jsonAdapter as n}from"../geometry/geometryAdapters/json.js";function r(n){return e.extendedSpatialReferenceInfo(n)}function t(r,t,i){return e.clip(n,r,t,i)}function i(r,t,i){return e.cut(n,r,t,i)}function s(r,t,i){return e.contains(n,r,t,i)}function u(r,t,i){return e.crosses(n,r,t,i)}function o(r,t,i,s){return e.distance(n,r,t,i,s)}function a(r,t,i){return e.equals(n,r,t,i)}function c(r,t,i){return e.intersects(n,r,t,i)}function f(r,t,i){return e.touches(n,r,t,i)}function l(r,t,i){return e.within(n,r,t,i)}function p(r,t,i){return e.disjoint(n,r,t,i)}function g(r,t,i){return e.overlaps(n,r,t,i)}function d(r,t,i,s){return e.relate(n,r,t,i,s)}function m(r,t){return e.isSimple(n,r,t)}function h(r,t){return e.simplify(n,r,t)}function y(r,t,i=!1){return e.convexHull(n,r,t,i)}function x(r,t,i){return e.difference(n,r,t,i)}function w(r,t,i){return e.symmetricDifference(n,r,t,i)}function A(r,t,i){return e.intersect(n,r,t,i)}function E(r,t,i=null){return e.union(n,r,t,i)}function j(r,t,i,s,u,o,a){return e.offset(n,r,t,i,s,u,o,a)}function z(r,t,i,s,u=!1){return e.buffer(n,r,t,i,s,u)}function I(r,t,i,s,u,o,a){return e.geodesicBuffer(n,r,t,i,s,u,o,a)}function V(r,t,i,s=!0){return e.nearestCoordinate(n,r,t,i,s)}function v(r,t,i){return e.nearestVertex(n,r,t,i)}function D(r,t,i,s,u){return e.nearestVertices(n,r,t,i,s,u)}function H(n,r,t,i){if(null==r||null==i)throw new Error("Illegal Argument Exception");const s=e.rotate(r,t,i);return s.spatialReference=n,s}function R(n,r,t){if(null==r||null==t)throw new Error("Illegal Argument Exception");const i=e.flipHorizontal(r,t);return i.spatialReference=n,i}function b(n,r,t){if(null==r||null==t)throw new Error("Illegal Argument Exception");const i=e.flipVertical(r,t);return i.spatialReference=n,i}function B(r,t,i,s,u){return e.generalize(n,r,t,i,s,u)}function L(r,t,i,s){return e.densify(n,r,t,i,s)}function S(r,t,i,s,u=0){return e.geodesicDensify(n,r,t,i,s,u)}function _(r,t,i){return e.planarArea(n,r,t,i)}function q(r,t,i){return e.planarLength(n,r,t,i)}function C(r,t,i,s){return e.geodesicArea(n,r,t,i,s)}function G(r,t,i,s){return e.geodesicLength(n,r,t,i,s)}const k=Object.freeze({__proto__:null,extendedSpatialReferenceInfo:r,clip:t,cut:i,contains:s,crosses:u,distance:o,equals:a,intersects:c,touches:f,within:l,disjoint:p,overlaps:g,relate:d,isSimple:m,simplify:h,convexHull:y,difference:x,symmetricDifference:w,intersect:A,union:E,offset:j,buffer:z,geodesicBuffer:I,nearestCoordinate:V,nearestVertex:v,nearestVertices:D,rotate:H,flipHorizontal:R,flipVertical:b,generalize:B,densify:L,geodesicDensify:S,planarArea:_,planarLength:q,geodesicArea:C,geodesicLength:G});export{D as A,H as B,R as C,b as D,B as E,L as F,S as G,_ as H,q as I,C as J,G as K,i as a,s as b,t as c,u as d,r as e,o as f,k as g,a as h,c as i,p as j,m as k,y as l,x as m,w as n,g as o,A as p,j as q,d as r,h as s,f as t,E as u,z as v,l as w,I as x,V as y,v as z};
