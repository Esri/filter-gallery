/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{ScreenSpacePass as r}from"../views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.js";import{glsl as e}from"../views/3d/webgl-engine/core/shaderModules/interfaces.js";import{ShaderBuilder as a}from"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js";var t;function o(o){const n=new a;return n.include(r),n.fragment.uniforms.add("tex","sampler2D"),o.function===t.Standard&&(o.hasOpacityFactor?(n.fragment.uniforms.add("opacity","float"),n.fragment.code.add(e`void main() {
gl_FragColor = texture2D(tex, uv) * opacity;
}`)):n.fragment.code.add(e`void main() {
gl_FragColor = texture2D(tex, uv);
}`)),o.function===t.OverlayWithTransparency&&(n.fragment.uniforms.add("overlayIdx","int"),o.hasOpacityFactor&&n.fragment.uniforms.add("opacity","float"),n.fragment.code.add(e`
      void main() {
        vec2 overlayUV = overlayIdx == 0 ? vec2(uv.x * 0.5, uv.y) : vec2(uv.x * 0.5 + 0.5, uv.y);
        gl_FragColor = texture2D(tex, overlayUV) ${o.hasOpacityFactor?"* opacity":""};
      }`)),o.function===t.TransparentToHUDVisibility&&n.fragment.code.add(e`void main() {
gl_FragColor = vec4(1.0 - texture2D(tex, uv).a);
}`),o.function===t.Transparency&&(n.fragment.uniforms.add("colorTexture","sampler2D"),n.fragment.uniforms.add("alphaTexture","sampler2D"),n.fragment.uniforms.add("frontFaceTexture","sampler2D"),n.fragment.code.add(e`void main() {
vec4 srcColor = texture2D(colorTexture, uv);
float srcAlpha = texture2D(alphaTexture, uv).r;
vec4 frontFace = texture2D(frontFaceTexture, uv);
if(srcColor.a <= 1e-5){
discard;
}
gl_FragColor = vec4(mix(srcColor.rgb/srcColor.a, frontFace.rgb, frontFace.a), 1.0 - srcAlpha);
}`)),n}!function(r){r[r.Standard=0]="Standard",r[r.TransparentToHUDVisibility=1]="TransparentToHUDVisibility",r[r.Transparency=2]="Transparency",r[r.OverlayWithTransparency=3]="OverlayWithTransparency",r[r.COUNT=4]="COUNT"}(t||(t={}));const n=Object.freeze({__proto__:null,get CompositingFunction(){return t},build:o});export{t as C,n as a,o as b};
