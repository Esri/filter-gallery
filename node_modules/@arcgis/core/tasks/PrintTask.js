/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as t}from"../chunks/tslib.es6.js";import{JSONMap as e}from"../core/jsonMap.js";import{property as r}from"../core/accessorSupport/decorators/property.js";import"../core/arrayUtils.js";import"../core/has.js";import"../core/accessorSupport/ensureType.js";import{subclass as s}from"../core/accessorSupport/decorators/subclass.js";import{execute as o,getGpServerUrl as a,printCacheMap as p,getGpPrintParams as c}from"../rest/print.js";import i from"./Task.js";const n=new e({esriExecutionTypeSynchronous:"sync",esriExecutionTypeAsynchronous:"async"});let u=class extends i{constructor(...t){super(...t),this._gpMetadata=null,this.updateDelay=1e3}get mode(){return this._gpMetadata&&this._gpMetadata.executionType?n.fromJSON(this._gpMetadata.executionType):"sync"}execute(t,e){return t&&(t.updateDelay=this.updateDelay),o(this.url,t,{...this.requestOptions,...e})}async _getGpPrintParams(t){const e=a(this.url),r=p.get(e);return c(t,r)}};t([r()],u.prototype,"_gpMetadata",void 0),t([r({readOnly:!0})],u.prototype,"mode",null),t([r()],u.prototype,"updateDelay",void 0),u=t([s("esri.tasks.PrintTask")],u);const y=u;export{y as default};
