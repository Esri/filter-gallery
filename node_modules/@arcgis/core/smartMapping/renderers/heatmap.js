/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import e from"../../Color.js";import"../../renderers/ClassBreaksRenderer.js";import"../../renderers/DictionaryRenderer.js";import"../../renderers/DotDensityRenderer.js";import r from"../../renderers/HeatmapRenderer.js";import"../../renderers/Renderer.js";import"../../renderers/SimpleRenderer.js";import"../../renderers/UniqueValueRenderer.js";import"../../renderers/support/jsonUtils.js";import a from"../../core/Error.js";import{isSome as s}from"../../core/maybe.js";import t from"../../renderers/support/HeatmapColorStop.js";import{verifyBasicFieldValidity as i,createColors as n,getBasemapInfo as o}from"./support/utils.js";import m from"../statistics/heatmapStatistics.js";import{getFieldsList as l}from"../support/utils.js";import{LayerType as p,createLayerAdapter as d,getLayerTypeLabels as u}from"../support/adapters/support/layerUtils.js";import{c,g as f}from"../../chunks/heatmap.js";const h=.01;async function b(e){if(!(e&&e.layer&&e.view))throw new a("heatmap-renderer:missing-parameters","'layer' and 'view' parameters are required");const{blurRadius:r,minRatio:t,maxRatio:n,fadeToTransparent:o}=e,m={...e};m.blurRadius=null==r?10:r,m.minRatio=null==t?.01:t,m.maxRatio=null==n?1:n,m.fadeToTransparent=null==o||o;const c=[p.CSVLayer,p.FeatureLayer,p.OGCFeatureLayer,p.GeoJSONLayer,p.WFSLayer],f=d(m.layer,c);if(m.layer=f,!f)throw new a("heatmap-renderer:invalid-parameters","'layer' must be one of these types: "+u(c).join(", "));const h=s(m.signal)?{signal:m.signal}:null;await f.load(h);const b=await l({field:m.field}),w=i(f,b,"heatmap-renderer:invalid-parameters");if(w)throw w;return m}async function w(e){let r=e.scheme,a=null,t=null;const i=await o(e.basemap,e.view);if(a=s(i.basemapId)?i.basemapId:null,t=s(i.basemapTheme)?i.basemapTheme:null,r)return{scheme:c(r),basemapId:a,basemapTheme:t};const n=f({basemap:a,basemapTheme:t});return n&&(r=n.primaryScheme,a=n.basemapId,t=n.basemapTheme),{scheme:r,basemapId:a,basemapTheme:t}}async function y(a,s){const{fieldOffset:i}=a,{field:o,basemap:m,blurRadius:l,minRatio:p,maxRatio:d,fadeToTransparent:u,heatmapScheme:f,view:b}=s,{scheme:y,basemapId:j,basemapTheme:R}=await w({basemap:m,scheme:f,view:b}),T=y.colors,g=T.length,v=!a.count,I=v?[0,100]:[a.min,a.max],S=(d-p)/(g-1),x=T[0],O=[new t({ratio:0,color:new e([x.r,x.g,x.b,0])}),new t({ratio:h,color:new e([x.r,x.g,x.b,0])}),new t({ratio:u?p:h,color:x})];n(T,g).forEach(((e,r)=>{O.push(new t({ratio:p+S*r,color:e}))}));const C=new r({blurRadius:l,colorStops:O,field:o,minPixelIntensity:I[0],maxPixelIntensity:I[1]});return null!=i&&(C.fieldOffset=i),{renderer:C,statistics:a,defaultValuesUsed:v,scheme:c(y),basemapId:j,basemapTheme:R}}async function j(e){const r=await b(e);return y(r.statistics?r.statistics:await m({layer:r.layer,field:r.field,fieldOffset:r.fieldOffset,blurRadius:r.blurRadius,view:r.view,signal:r.signal}),r)}export{j as createRenderer};
