/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import t from"../../core/Error.js";import{isSome as a}from"../../core/maybe.js";import{numericTypes as r}from"../../layers/support/fieldUtils.js";import{verifyBasicFieldValidity as e,verifyFieldType as s}from"./support/utils.js";import{getFieldsList as i}from"../support/utils.js";import{LayerType as o,createLayerAdapter as l,getLayerTypeLabels as p}from"../support/adapters/support/layerUtils.js";const n=r;async function m(r){if(!(r&&r.layer&&r.view))throw new t("heatmap-statistics:missing-parameters","'layer' and 'view' parameters are required");const m=[o.CSVLayer,o.FeatureLayer,o.OGCFeatureLayer,o.GeoJSONLayer,o.WFSLayer],{layer:u,...f}=r,c=l(u,m),d={layerAdapter:c,...f};if(d.blurRadius=null==d.blurRadius?10:d.blurRadius,!c)throw new t("heatmap-statistics:invalid-parameters","'layer' must be one of these types: "+p(m).join(", "));const y=a(d.signal)?{signal:d.signal}:null;await c.load(y);const w=d.field,h=w?c.getField(w):null,j=await i({field:w}),b=e(c,j,"heatmap-statistics:invalid-parameters");if(b)throw b;if(h){const t=s(c,h,"heatmap-statistics:invalid-parameters",n);if(t)throw t}return d}async function u(t){const{layerAdapter:a,...r}=await m(t);return a.heatmapStatistics(r)}export{u as default};
