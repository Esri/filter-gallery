/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import e from"../../../core/Error.js";import{isSome as t}from"../../../core/maybe.js";import n from"../../../geometry/SpatialReference.js";import{isNumericField as i,numericTypes as o}from"../../../layers/support/fieldUtils.js";import{getNormalizedValue as r}from"../../../statistics/utils.js";import{loadArcade as l}from"../../../support/arcadeOnDemand.js";let s=null;async function a(e,t){if(!t)return[];const i=e.field,o=e.valueExpression,a=e.normalizationType,f=e.normalizationField,c=e.normalizationTotal,u=[],d=e.viewInfoParams;let p=null,m=null;if(o){if(!s){const{arcadeUtils:e}=await l();s=e}p=s.createFunction(o),m=d&&s.getViewInfo({viewingMode:d.viewingMode,scale:d.scale,spatialReference:new n(d.spatialReference)})}return t.forEach((e=>{const t=e.attributes;let n;if(o){const t=s.createExecContext(e,m);n=s.executeFunction(p,t)}else t&&(n=t[i]);if(a&&isFinite(n)){const e=t&&parseFloat(t[f]);n=r(n,a,e,c)}u.push(n)})),u}function f(e){const t=e.field,n=e.normalizationType,i=e.normalizationField;let o;return"field"===n?o="(NOT "+i+" = 0)":"log"!==n&&"natural-log"!==n&&"square-root"!==n||(o=`(${t} > 0)`),o}function c(t,n){return new e(t,n)}function u(e,t,n){const i=null!=t?e+" >= "+t:"",o=null!=n?e+" <= "+n:"";let r="";return r=i&&o?m(i,o):i||o,r?"("+r+")":""}function d(e,t,n,i){let o=null;return t?t.name!==e.objectIdField&&-1!==i.indexOf(t.type)||(o=c(n,"'field' should be one of these types: "+i.join(","))):o=c(n,"'field' is not defined in the layer schema"),o}function p(e,t,n){let r;return t?t.name!==e.objectIdField&&i(t)||(r=c(n,"'field' should be one of these numeric types: "+o.join(","))):r=c(n,"'field' is not defined in the layer schema"),r}function m(e,n){let i=t(e)?e:"";return t(n)&&n&&(i=i?"("+i+") AND ("+n+")":n),i}function y(e,t,n){const i=h({layer:e,fields:t});if(i.length)return c(n,"Unknown fields: "+i.join(", ")+". You can only use fields defined in the layer schema");const o=g({layer:e,fields:t});return o.length?c(n,"Unsupported fields: "+o.join(", ")+". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true"):void 0}function h(e){const t=e.layer;return e.fields.filter((e=>!t.getField(e)))}function g(e){const t=e.layer;return e.fields.filter((e=>{const n=t.getFieldUsageInfo(e);return!n||!n.supportsStatistics}))}export{c as createError,a as getDataValues,u as getRangeExpr,f as getSQLFilterForNormalization,m as mergeWhereClauses,y as verifyBasicFieldValidity,d as verifyFieldType,p as verifyNumericField};
