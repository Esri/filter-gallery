/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import e from"../../core/Error.js";import{isSome as s}from"../../core/maybe.js";import{verifyBasicFieldValidity as r}from"./support/utils.js";import{getFieldsList as t}from"../support/utils.js";import{LayerType as i,createLayerAdapter as a,getLayerTypeLabels as n}from"../support/adapters/support/layerUtils.js";async function u(u){if(!(u&&u.layer&&u.attributes))throw new e("summary-statistics-for-attributes:missing-parameters","'layer' and 'attributes' parameters are required");if(u.attributes.some((e=>!!e.valueExpression))&&!u.view)throw new e("summary-statistics-for-attributes:missing-parameters","View is required when 'valueExpression' is specified in attributes");const o=[i.CSVLayer,i.FeatureLayer,i.OGCFeatureLayer,i.GeoJSONLayer,i.WFSLayer],{layer:l,...p}=u,m=a(l,o),f={layerAdapter:m,...p};if(f.includeZeros=null==f.includeZeros||f.includeZeros,f.includeNegatives=null==f.includeNegatives||f.includeNegatives,!m)throw new e("summary-statistics-for-attributes:invalid-parameters","'layer' must be one of these types: "+n(o).join(", "));const c=f.view,d=s(f.signal)?{signal:f.signal}:null;await Promise.all([c&&c.when(),m.load(d)]);const y=[];for(const e of f.attributes){const s=await t({field:e.field,valueExpression:e.valueExpression});Array.prototype.push.apply(y,s)}const $=r(m,y,"summary-statistics-for-attributes:invalid-parameters");if($)throw $;return f}function o(e,s,r){const t=[],i=[],a=[],n=[],u=[];e.forEach(((e,s)=>{const o=e.field?"field":"expression",l=e.field||e.valueExpression;e.field?(u.push(l),i.push(`var ${o}${s} = Number($feature["${l}"]);`)):(t.push(`function getValueForExpr${s}() {\n  ${l} \n}`),i.push(`var ${o}${s} = Number(getValueForExpr${s}());`)),r||a.push(`${o}${s} = IIf(${o}${s} < 0, 0, ${o}${s});`),n.push(`${o}${s}`)}));let o="return sum;";const l=t.length?null:u.reduce(((e,s)=>`${e} + ${s}`));let p=null;s||r?s?r||(o="return IIf(sum >= 0, sum, null);",l&&(p=`(( ${l} ) >= 0)`)):(o="return IIf(sum != 0, sum, null);",l&&(p=`(( ${l} ) <> 0)`)):(o="return IIf(sum > 0, sum, null);",l&&(p=`(( ${l} ) > 0)`));return{valueExpression:[t.length?t.join("\n"):"",i.join("\n"),a.join("\n"),`var sum = ${n.join(" + ")};`,o].filter(Boolean).join("\n\n"),sqlExpression:l,sqlWhere:p}}async function l(e){const{layerAdapter:s,...r}=await u(e),t=o(r.attributes,r.includeZeros,r.includeNegatives);return s.summaryStatistics({valueExpression:t.valueExpression,sqlExpression:t.sqlExpression,sqlWhere:t.sqlWhere,view:r.view,signal:r.signal})}export{l as default};
