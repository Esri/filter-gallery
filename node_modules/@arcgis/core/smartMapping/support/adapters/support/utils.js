/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{throwIfAborted as t}from"../../../../core/promiseUtils.js";import{createKernel as n,createValueFunction as o}from"../../../../renderers/support/heatmapUtils.js";import{noDominantCategoryField as e}from"../../../statistics/support/predominanceUtils.js";import{isIntegerField as a,castIntegerFieldToFloat as r,getDateDiffSQL as i}from"../../utils.js";import{getEqualIntervalBins as l}from"../../../../statistics/utils.js";const u=/_value$/i,s=Math.LOG10E;function c(t){return t.map((t=>t.toJSON()))}async function m(t,n,o){const e=[];if(n)for(const a of n){const n=t.getField(a);"availableFields"in o&&-1===o.availableFields.indexOf(n.name)&&e.push(n.name)}return e}function f(t,n){const o=t&&t.features,e=o&&o[0]&&o[0].attributes,a={};for(const r in e)a[r.replace(u,"").toLowerCase()]=e[r];return null!=a.totalcount&&a.totalcount>=a.count&&(a.nullcount=a.totalcount-a.count),delete a.totalcount,a.min===a.max&&null!=a.min&&null==a.stddev&&(a.stddev=a.variance=0),n&&(["min","max","avg","stddev","sum","variance"].forEach((t=>{null!=a[t]&&(a[t]=Math.ceil(a[t]))})),a.min===a.max&&null!=a.min&&(a.avg=a.min,a.stddev=a.variance=0)),a}function d(t,e=10,a,r,i,l){const u=new Float64Array(i*l),s=n(e),c=Math.round(3*e);let m=Number.POSITIVE_INFINITY,f=Number.NEGATIVE_INFINITY,d=0,p=0,v=0,x=0;const h=o(r,a);for(const{geometry:n,attributes:o}of t){const t=n.x-c,e=n.y-c,a=Math.max(0,t),r=Math.max(0,e),y=Math.min(l,n.y+c),g=Math.min(i,n.x+c),w=+h(o);for(let n=r;n<y;n++){const o=s[n-e];for(let e=a;e<g;e++){const a=s[e-t],r=n*i+e,l=u[r];d=u[r]+=o*a*w;const c=d-l;p+=c,v+=c*c,d<m&&(m=d),d>f&&(f=d),x++}}}if(!x)return{mean:0,stddev:0,min:0,max:0,mid:0,count:0};const y=(f-m)/2;return{mean:p/x,stdDev:Math.sqrt((v-p*p/x)/x),min:m,max:f,mid:y,count:x}}function p(t){const n=[],o=t.classBreaks,e=o[0].minValue,a=o[o.length-1].maxValue;o.forEach((t=>{n.push([t.minValue,t.maxValue])}));const r={field:t.field,normalizationType:t.normalizationType,normalizationField:t.normalizationField,normalizationTotal:t.normalizationTotal,layer:t.layer};return{min:e,max:a,intervals:n,sqlExpr:v(r),excludeZerosExpr:t.where,normTotal:t.normalizationTotal}}function v(t){const{field:n,normalizationType:o,normalizationField:e,normalizationTotal:i,layer:l}=t,u=a(l,n);let c=n;return"percent-of-total"===o?c=`((${u?r(n):n} / ${i}) * 100)`:"log"===o?c=`(log(${n}) * ${s})`:"field"===o?c=`(${u?r(n):n} / ${e})`:"natural-log"===o?c=`(log(${u?r(n):n}))`:"square-root"===o&&(c=`(power(${u?r(n):n}, 0.5))`),c}function x(t,n){let o;if(n=n.toLowerCase(),t)for(const e in t)if(e.toLowerCase()!==n){o=t[e];break}return o}function h(t,n){let o;if(n=n.toLowerCase(),t)for(const e in t)if(e.toLowerCase()===n){o=t[e];break}return o}function y(t,n,o,e,a){const r={},i="countOFExpr";t&&t.features&&t.features.forEach((t=>{const n=t.attributes,o=x(n,i),e=h(n,i);0!==o&&(r[o]=e)}));const u=[];return l(n,o,e).forEach(((t,n)=>{const o=(n+1).toString();u.push({minValue:t[0],maxValue:t[1],count:r.hasOwnProperty(o)?r[o]:0})})),{bins:u,minValue:n,maxValue:o,normalizationTotal:a}}function g(n,o,e,a,r,i){const l=n&&n.features,u="countOF"+(e||"Expr"),s={};let c=!1;if(l.forEach((t=>{const n=t.attributes,o=h(n,u);let a=e?h(n,e):x(n,u);null===a&&0===o&&(c=!0),(null==a||"string"==typeof a&&""===a.trim())&&(a=null),null==s[a]?s[a]={count:o,data:a}:s[a].count=s[a].count+o})),e&&c){const n=e+" is NULL";return o.queryFeatureCount({whereClause:n,view:a,signal:i}).then((t=>(t=t||0,s.null.count=s.null.count+t,w(s,r)))).catch((()=>(t(i),w(s,r))))}return Promise.resolve(w(s,r))}function w(t,n){if(n)for(const o in t)t[o].label=n[o];return{count:t}}function E(t,n){return i(t,new Date(0),n,"milliseconds").sqlExpression}function T(t){var n;return{viewingMode:"2d"===t.type?"map":t.viewingMode,scale:t.scale,spatialReference:null==(n=t.spatialReference)?void 0:n.toJSON()}}function b(t,n){const o=t.map((t=>t.value)),a=n.filter((t=>-1===o.indexOf(t)));for(const e of a)t.push({value:e,count:0});t.sort(((t,o)=>n.indexOf(t.value)-n.indexOf(o.value)));for(const r of t)r.value===e&&(r.value=null);return{predominantCategoryInfos:t}}export{d as calculateHeatmapStats,c as ensureFeaturesJSON,p as generateBinParams,v as getFieldExpr,y as getHistogramFromFeatureSet,m as getMissingFields,b as getPredominantCategoriesFromUVInfos,f as getSummaryStatisticsFromFeatureSet,g as getUniqueValuesFromFeatureSet,T as getViewInfoParams,E as msSinceUnixEpochSQL};
