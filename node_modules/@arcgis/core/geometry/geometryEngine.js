/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{G as n}from"../chunks/geometryEngineBase.js";import{hydratedAdapter as e}from"./geometryAdapters/hydrated.js";function r(n){return Array.isArray(n)?n[0].spatialReference:n&&n.spatialReference}function t(e){return n.extendedSpatialReferenceInfo(e)}function u(t,u){return n.clip(e,r(t),t,u)}function i(t,u){return n.cut(e,r(t),t,u)}function o(t,u){return n.contains(e,r(t),t,u)}function c(t,u){return n.crosses(e,r(t),t,u)}function f(t,u,i){return n.distance(e,r(t),t,u,i)}function l(t,u){return n.equals(e,r(t),t,u)}function a(t,u){return n.intersects(e,r(t),t,u)}function s(t,u){return n.touches(e,r(t),t,u)}function p(t,u){return n.within(e,r(t),t,u)}function g(t,u){return n.disjoint(e,r(t),t,u)}function m(t,u){return n.overlaps(e,r(t),t,u)}function d(t,u,i){return n.relate(e,r(t),t,u,i)}function x(t){return n.isSimple(e,r(t),t)}function w(t){return n.simplify(e,r(t),t)}function E(t,u=!1){return n.convexHull(e,r(t),t,u)}function h(t,u){return n.difference(e,r(t),t,u)}function A(t,u){return n.symmetricDifference(e,r(t),t,u)}function y(t,u){return n.intersect(e,r(t),t,u)}function R(t,u=null){return n.union(e,r(t),t,u)}function I(t,u,i,o,c,f){return n.offset(e,r(t),t,u,i,o,c,f)}function v(t,u,i,o=!1){return n.buffer(e,r(t),t,u,i,o)}function S(t,u,i,o,c,f){return n.geodesicBuffer(e,r(t),t,u,i,o,c,f)}function j(t,u,i=!0){return n.nearestCoordinate(e,r(t),t,u,i)}function J(t,u){return n.nearestVertex(e,r(t),t,u)}function N(t,u,i,o){return n.nearestVertices(e,r(t),t,u,i,o)}function O(n){return"xmin"in n?"center"in n?n.center:null:"x"in n?n:"extent"in n?n.extent.center:null}function V(e,r,t){var u;if(null==e)throw new Error("Illegal Argument Exception");const i=e.spatialReference;if(null==(t=null!=(u=t)?u:O(e)))throw new Error("Illegal Argument Exception");const o=e.constructor.fromJSON(n.rotate(e,r,t));return o.spatialReference=i,o}function z(e,r){var t;if(null==e)throw new Error("Illegal Argument Exception");const u=e.spatialReference;if(null==(r=null!=(t=r)?t:O(e)))throw new Error("Illegal Argument Exception");const i=e.constructor.fromJSON(n.flipHorizontal(e,r));return i.spatialReference=u,i}function B(e,r){var t;if(null==e)throw new Error("Illegal Argument Exception");const u=e.spatialReference;if(null==(r=null!=(t=r)?t:O(e)))throw new Error("Illegal Argument Exception");const i=e.constructor.fromJSON(n.flipVertical(e,r));return i.spatialReference=u,i}function D(t,u,i,o){return n.generalize(e,r(t),t,u,i,o)}function H(t,u,i){return n.densify(e,r(t),t,u,i)}function L(t,u,i,o=0){return n.geodesicDensify(e,r(t),t,u,i,o)}function b(t,u){return n.planarArea(e,r(t),t,u)}function k(t,u){return n.planarLength(e,r(t),t,u)}function q(t,u,i){return n.geodesicArea(e,r(t),t,u,i)}function C(t,u,i){return n.geodesicLength(e,r(t),t,u,i)}export{v as buffer,u as clip,o as contains,E as convexHull,c as crosses,i as cut,H as densify,h as difference,g as disjoint,f as distance,l as equals,t as extendedSpatialReferenceInfo,z as flipHorizontal,B as flipVertical,D as generalize,q as geodesicArea,S as geodesicBuffer,L as geodesicDensify,C as geodesicLength,y as intersect,a as intersects,x as isSimple,j as nearestCoordinate,J as nearestVertex,N as nearestVertices,I as offset,m as overlaps,b as planarArea,k as planarLength,d as relate,V as rotate,w as simplify,A as symmetricDifference,s as touches,R as union,p as within};
