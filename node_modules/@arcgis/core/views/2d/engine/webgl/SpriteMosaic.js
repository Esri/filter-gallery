/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import t from"../../../../core/Error.js";import{isSome as e}from"../../../../core/maybe.js";import{SPRITE_PADDING as i}from"./definitions.js";import{log2 as s}from"./GeometryUtils.js";import a from"./Rect.js";import r from"./RectangleBinPack.js";import{PixelFormat as o,PixelType as h,TextureSamplingMode as c,TextureWrapMode as n}from"../../../webgl/enums.js";import{Texture as g}from"../../../webgl/Texture.js";function m(t){return t&&"static"===t.type}class p{constructor(t,e,i,s=0){this._mosaicPages=[],this._maxItemSize=0,this._currentPage=0,this._pageWidth=0,this._pageHeight=0,this._mosaicRects=new Map,this._spriteCopyQueue=[],this.pixelRatio=1,(e<=0||i<=0)&&console.error("Sprites mosaic defaultWidth and defaultHeight must be greater than zero!"),this._pageWidth=e,this._pageHeight=i,this._requestRender=t,s>0&&(this._maxItemSize=s),this.pixelRatio=window.devicePixelRatio||1,this._binPack=new r(this._pageWidth,this._pageHeight);const a=Math.floor(this._pageWidth),o=Math.floor(this._pageHeight);this._mosaicPages.push({mosaicsData:{type:"static",data:new Uint32Array(a*o)},size:[this._pageWidth,this._pageHeight],dirty:!0,texture:void 0})}getWidth(t){return t>=this._mosaicPages.length?-1:this._mosaicPages[t].size[0]}getHeight(t){return t>=this._mosaicPages.length?-1:this._mosaicPages[t].size[1]}getPageTexture(t){return t<this._mosaicPages.length?this._mosaicPages[t].texture:null}has(t){return this._mosaicRects.has(t)}get itemCount(){return this._mosaicRects.size}getSpriteItem(t){return this._mosaicRects.get(t)}addSpriteItem(t,e,i,s,r,o){if(this._mosaicRects.has(t))return this._mosaicRects.get(t);let h,c,n;if(m(i))[h,c,n]=this._allocateImage(e[0],e[1]);else{h=new a(0,0,e[0],e[1]),c=this._mosaicPages.length;const t=void 0;this._mosaicPages.push({mosaicsData:i,size:e,dirty:!0,texture:t})}if(h.width<=0||h.height<=0)return null;const g={rect:h,width:e[0],height:e[1],sdf:r,simplePattern:o,pixelRatio:1,page:c};return this._mosaicRects.set(t,g),m(i)&&this._copy({rect:h,spriteSize:e,spriteData:i.data,page:c,pageSize:n,repeat:s,sdf:r}),g}hasItemsToProcess(){return 0!==this._spriteCopyQueue.length}processNextItem(){const t=this._spriteCopyQueue.pop();t&&this._copy(t)}getSpriteItems(t){const e={};for(const i of t)e[i]=this.getSpriteItem(i);return e}getMosaicItemPosition(t){const e=this.getSpriteItem(t),s=e&&e.rect;if(!s)return null;s.width=e.width,s.height=e.height;const a=e.width,r=e.height,o=i,h=this._mosaicPages[e.page];return{size:[e.width,e.height],tl:[(s.x+o)/h[0],(s.y+o)/h[1]],br:[(s.x+o+a)/h[0],(s.y+o+r)/h[1]],page:e.page}}bind(t,i,s=0,a=0){const r=this._mosaicPages[s],o=r.mosaicsData;let h=r.texture;if(h||(h=_(t,o,r.size),r.texture=h),h.setSamplingMode(i),m(o))t.bindTexture(h,a),r.dirty&&(h.setData(new Uint8Array(o.data.buffer)),h.generateMipmap());else{const i=o.data,s=i.bindFrame(t,h,a);e(this._requestRender)&&s&&i.frameCount>0&&this._requestRender.requestRender(),i.bindFrame(t,h,a)}r.dirty=!1}static _copyBits(t,e,i,s,a,r,o,h,c,n,g){let m=s*e+i,p=h*r+o;if(g){p-=r;for(let o=-1;o<=n;o++,m=((o+n)%n+s)*e+i,p+=r)for(let e=-1;e<=c;e++)a[p+e]=t[m+(e+c)%c]}else for(let _=0;_<n;_++){for(let e=0;e<c;e++)a[p+e]=t[m+e];m+=e,p+=r}}_copy(e){if(e.page>=this._mosaicPages.length)return;const s=this._mosaicPages[e.page],a=s.mosaicsData;if(!m(s.mosaicsData))throw new t("mapview-invalid-resource","unsuitable data type!");const r=e.spriteData,o=a.data;o&&r||console.error("Source or target images are uninitialized!"),p._copyBits(r,e.spriteSize[0],0,0,o,e.pageSize[0],e.rect.x+i,e.rect.y+i,e.spriteSize[0],e.spriteSize[1],e.repeat),s.dirty=!0}_allocateImage(t,e){t+=2*i,e+=2*i;const o=Math.max(t,e);if(this._maxItemSize&&this._maxItemSize<o){const i=2**Math.ceil(s(t)),r=2**Math.ceil(s(e)),o=new a(0,0,t,e);return this._mosaicPages.push({mosaicsData:{type:"static",data:new Uint32Array(i*r)},size:[i,r],dirty:!0,texture:void 0}),[o,this._mosaicPages.length-1,[i,r]]}const h=this._binPack.allocate(t,e);if(h.width<=0){const i=this._mosaicPages[this._currentPage];return!i.dirty&&m(i.mosaicsData)&&(i.mosaicsData.data=null),this._currentPage=this._mosaicPages.length,this._mosaicPages.push({mosaicsData:{type:"static",data:new Uint32Array(this._pageWidth*this._pageHeight)},size:[this._pageWidth,this._pageHeight],dirty:!0,texture:void 0}),this._binPack=new r(this._pageWidth,this._pageHeight),this._allocateImage(t,e)}return[h,this._currentPage,[this._pageWidth,this._pageHeight]]}dispose(){this._binPack=null;for(const t of this._mosaicPages){const e=t.texture;e&&e.dispose();const i=t.mosaicsData;if(!m(i)){i.data.pause()}}this._mosaicPages=null,this._mosaicRects.clear()}}function _(t,e,i){return m(e)?new g(t,{pixelFormat:o.RGBA,dataType:h.UNSIGNED_BYTE,width:i[0],height:i[1]},new Uint8Array(e.data.buffer)):new g(t,{pixelFormat:o.RGBA,dataType:h.UNSIGNED_BYTE,samplingMode:c.LINEAR,wrapMode:n.CLAMP_TO_EDGE,width:i[0],height:i[1]},null)}export{p as default};
