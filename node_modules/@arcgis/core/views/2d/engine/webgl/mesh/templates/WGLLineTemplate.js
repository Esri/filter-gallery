/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import e from"../../../../../../core/Logger.js";import{pt2px as t}from"../../../../../../core/screenUtils.js";import{CapType as i}from"../../../../../../symbols/cim/enums.js";import{premultiplyAlphaRGBAArray as r,premultiplyAlphaRGBA as s}from"../../color.js";import{MIN_MAX_ZOOM_PRECISION_FACTOR as o,SPRITE_PADDING as l,BITSET_TYPE_FILL_OUTLINE as n,BITSET_GENERIC_LOCK_COLOR as a,BITSET_LINE_SCALE_DASH as m}from"../../definitions.js";import{i1616to32 as c}from"../../number.js";import{getCapType as h,getJoinType as f}from"../../Utils.js";import{LineMaterialKey as u}from"../../materialKey/MaterialKey.js";import{getLimitCosine as p,getMinMaxZoom as d,DEFAULT_MIN_ZOOM as L,DEFAULT_MAX_ZOOM as y}from"./util.js";import S from"./WGLBaseLineTemplate.js";import _ from"./WGLMeshTemplate.js";const j=e.getLogger("esri.views.2d.engine.webgl.WGLLineTemplate");class g extends(S(_)){constructor(e,t,i,r,s,l,h,f,d,L,y,S,_,j,g,w,P,K,x){super();const b=u.load(e);t&&(b.sdf=t.sdf,b.pattern=!0,b.textureBinding=t.textureBinding),this._capType=r,this._joinType=s,this._miterLimitCosine=p(l),this.tessellationProperties._fillColor=h,this.tessellationProperties._tl=f,this.tessellationProperties._br=d,this._hasPattern=L,this._isDashed=y,this._zOrder=w,this._effects=P,this._minMaxZoom=c(Math.round(K*o),Math.round(x*o)),this._materialKey=b.data;const T=(_?a:0)|(j?n:0)|(S?m:0);this.tessellationProperties._bitset=T,this.tessellationProperties._halfWidth=.5*i,this.tessellationProperties._halfReferenceWidth=.5*g,this.tessellationProperties.offset=0,this._initializeTessellator(!1)}static fromCIMLine(e,r,o){const n=e.color,a=e.scaleFactor||1,m=!!e.dashTemplate;let h=e.cap;m&&h===i.ROUND&&(h=i.SQUARE);const f=e.join,u=t(e.width)*a,p=t(e.referenceWidth),L=t(e.miterLimit),y=n&&s(n)||0,[S,_]=d(e.scaleInfo,o),j=!1;if(!r)return new g(e.materialKey,r,u,h,f,L,y,0,0,!1,m,e.scaleDash,e.colorLocked,j,p,e.zOrder,e.effects,S,_);const{rect:w,width:P,height:K}=r,x=w.x+l,b=w.y+l,T=x+P,M=b+K,O=c(x,b),W=c(T,M),z=!1;return new g(e.materialKey,r,u,h,f,L,y,O,W,!0,m,e.scaleDash,e.colorLocked,z,p,e.zOrder,e.effects,S,_)}static fromFillOutline(e){var t;return e.isOutlinedFill&&e.outline&&"esriSLSSolid"===(null==(t=e.outline)?void 0:t.style)?g.fromSimpleLine({hash:"",materialKey:e.materialKey,...e.outline},null,!0):null}static fromSimpleLine(e,i,s=!1){const{color:o}=e,n="esriSLSSolid"!==e.style&&"esriSLSNull"!==e.style,a=h(e.cap||"round"),m=f(e.join||"round");let u=o&&"esriSLSNull"!==e.style&&r(o)||0;"esriSLSNull"===e.style&&(u=0);const p=t(e.width),d=e.miterLimit;if(!i)return new g(e.materialKey,i,p,a,m,d,u,0,0,!1,n,!0,!1,s,p,0,null,L,y);const{rect:S,width:_,height:j}=i,w=S.x+l,P=S.y+l,K=w+_,x=P+j,b=c(w,P),T=c(K,x);return new g(e.materialKey,i,p,a,m,d,u,b,T,!0,n,!0,!1,s,p,0,null,L,y)}static fromPictureLineSymbol(e,t,i,r){return j.error("PictureLineSymbol support does not exist!"),null}}export{g as default};
