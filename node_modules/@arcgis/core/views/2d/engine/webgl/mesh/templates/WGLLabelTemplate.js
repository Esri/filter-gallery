/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import e from"../../../../../../core/Error.js";import t from"../../../../../../core/Logger.js";import{clamp as i}from"../../../../../../core/mathUtils.js";import{unwrap as o,isNone as n}from"../../../../../../core/maybe.js";import{pt2px as s}from"../../../../../../core/screenUtils.js";import{Alignment as r}from"../../../../../../symbols/cim/enums.js";import{isMapAligned as a,getAlignmentFromPlacement as l,getXDirection as h,getYDirection as c}from"../../alignmentUtils.js";import{premultiplyAlphaRGBAArray as m}from"../../color.js";import{TEXT_PLACEMENT_PADDING as f}from"../../definitions.js";import{WGLGeometryType as _}from"../../enums.js";import{i8888to32 as p}from"../../number.js";import{LabelMaterialKey as g}from"../../materialKey/MaterialKey.js";import{smoothPaths as u,pathDivide as d}from"./segmentUtils.js";import x from"./WGLTextTemplate.js";const y=t.getLogger("esri.views.2d.engine.webgl.WGLLabelTemplate"),b=(t,i="mapview-labeling")=>y.error(new e(i,t)),L=1,P=0,S=4;function v(e,t){const o=!!e.minScale&&t.scaleToZoom(e.minScale)||0;return i(o,0,25.5)}function w(e,t){const o=!!e.maxScale&&t.scaleToZoom(e.maxScale)||255;return i(o,0,25.5)}function M(e){const t=new Map;return i=>(t.has(i)||t.set(i,e(i)),t.get(i))}const Z=M((e=>{let t=0;if(0===e)return 1/0;for(;!(e%2);)t++,e/=2;return t})),A=e=>Math.floor(127*e+127),O=e=>Math.floor(10*e),z=e=>Math.round(e*(254/360));class I extends x{constructor(e,t,i,o){var n,h,c;super(e,i.font.size,i.haloSize||0,i.font.size,i.color&&m(i.color)||0,i.haloColor&&m(i.haloColor)||0,i.horizontalAlignment,i.verticalAlignment,a(t.labelPlacement)?r.MAP:r.SCREEN,i.font.decoration,!1,i.angle||0,i.xoffset,i.yoffset,i.lineWidth,i.lineHeight,null,null,null,null,null),this._outLineLabelAngle=0,this._refPlacementPadding=0,this._refPlacementDirX=0,this._refPlacementDirY=0,this._refOffsetX=0,this._refOffsetY=0,this._zoomLevel=0,this.geometryType=_.LABEL,this._allowOverrun=null!=(n=t.allowOverrun)&&n,this._repeatLabel=null==(h=t.repeatLabel)||h,this._labelPosition=null!=(c=t.labelPosition)?c:"curved";const p=v(t,o),u=w(t,o),d=t.labelPlacement,[x,y]=l(d);this._xAlignD=x,this._yAlignD=y,this._minZoom=p,this._maxZoom=u,this._refPlacementPadding=s(i.haloSize)+f,this._repeatLabelDistance=t.repeatLabelDistance?s(t.repeatLabelDistance):128;const b=g.load(e);b.sdf=!0,this._materialKey=b.data}static fromLabelClass(e,t){if("esriServerLinePlacementCenterAlong"===e.labelPlacement){const t=e.symbol;t.xoffset=0,t.yoffset=0,t.angle=0,t.font.decoration="none"}return new I(e.materialKey,e,e.symbol,t)}get _shapedBox(){return o(this._shapingInfo).bounds}setZoomLevel(e){this._zoomLevel=e}bindReferenceTemplate(e){let t=h(this._xAlignD),i=c(this._yAlignD);if(this._refOffsetX=0,this._refOffsetY=0,n(e))return void(this._refSymbolAndPlacementOffset=p(0,0,A(t),A(i)));if("circle"===e.boundsType&&(t||i)){const e=Math.sqrt(t*t+i*i);t/=e,i/=e}const o=Math.max(e.height,e.width),s=this._refPlacementPadding*S;this._refSymbolAndPlacementOffset=p(s,o,A(t),A(i)),this._referenceSize=o,this._refPlacementDirX=t,this._refPlacementDirY=i,this._refOffsetX=e.xOffset,this._refOffsetY=e.yOffset}_write(e,t){if(n(this._shapingInfo))return;const i=this._shapingInfo,o=t.getDisplayId(),s="esriGeometryPolygon"===t.geometryType?t.readLegacyCentroid():t.readLegacyGeometry();if(s)switch(this.current={out:e,inId:o,inShaping:i,zoomLevel:this._zoomLevel},t.geometryType){case"esriGeometryPolyline":this._placeLineLabels(s);break;case"esriGeometryPoint":case"esriGeometryPolygon":this._placePointLabels(s);break;default:b("mapview-labeling",`Geometry of type ${t.geometryType} is not supported`)}}_isVisible(e,t){const i=O(this.current.zoomLevel);return O(e)<=i&&i<=O(t)}_placePointLabels(e){const{out:t,inId:i,inShaping:o}=this.current;this._writeGlyphs(t,i,e,o)}_placeLineLabels(e){const t=u(e.paths,this.current.inShaping.bounds.width),i=this._placeSubdivGlyphs.bind(this),o=(this._shapedBox.width+this._repeatLabelDistance)/(1<<L);for(const n of t)d(n,o,i,this._repeatLabel)}_placeSubdivGlyphs(e,t,i,o){const n=Z(t),s=this._shapedBox.width/(1<<L),r=Math.sqrt(this._repeatLabelDistance)/(1<<L),a=Math.min(i,o-i),l=Math.log2(a/(r+s/2)),h=0===t?l:Math.min(n,l),c=Math.max(this._minZoom,this.current.zoomLevel+L-h),m=this.current.zoomLevel-c,f=this._shapedBox.width/2*2**m;this.current.inShaping.isMultiline?0===t&&this._placeStraight(e,c):this._allowOverrun&&m<0?this._placeStraightAlong(e,this._minZoom):"parallel"===this._labelPosition?this._placeStraightAlong(e,c):"curved"===this._labelPosition&&this._placeCurved(e,c,f)}_placeStraight(e,t){const{out:i,inId:o,inShaping:n}=this.current;this._writeGlyphs(i,o,e,n,t)}_placeCurved(e,t,i){const{out:o,inId:n}=this.current;o.metricStart(n,t,e.x,e.y,0,0,0,0);const s=e.clone(),r=e.angle*(180/Math.PI)%360,a=(e.angle*(180/Math.PI)+180)%360;this._outLineLabelAngle=z(r),this._placeFirst(s,t,1),this._placeBack(e,s,t,i,1),this._placeForward(e,s,t,i,1),this._outLineLabelAngle=z(a),this._placeFirst(s,t,0),this._placeBack(e,s,t,i,0),this._placeForward(e,s,t,i,0),o.metricEnd()}_placeStraightAlong(e,t){const{out:i,inId:o}=this.current;i.metricStart(o,t,e.x,e.y,0,0,0,0);const n=e.clone(),s=e.angle*(180/Math.PI)%360,r=(e.angle*(180/Math.PI)+180)%360;this._outLineLabelAngle=z(s),this._placeFirst(n,t,1,!0),this._outLineLabelAngle=z(r),this._placeFirst(n,t,0,!0),i.metricEnd()}_placeBack(e,t,i,o,n){const s=e.clone();let r=e.backwardLength+P;for(;s.prev()&&!(r>=o);)this._placeOnSegment(s,t,r,i,-1,n),r+=s.length+P}_placeForward(e,t,i,o,n){const s=e.clone();let r=e.remainingLength+P;for(;s.next()&&!(r>=o);)this._placeOnSegment(s,t,r,i,1,n),r+=s.length+P}_placeFirst(e,t,i,o=!1){const n=e,s=this.current.inShaping,r=s.glyphs,a=this.current.zoomLevel,{out:l,inId:h}=this.current;for(const c of r){const r=c.x>s.bounds.x?i:1-i,m=r*e.remainingLength+(1-r)*e.backwardLength,f=Math.abs(c.x+c.width/2-s.bounds.x),_=Math.max(0,a+Math.log2(f/(m+P))),p=Math.max(t,o?0:_);if(c.maxZoom=25,c.angle=e.angle+(1-i)*Math.PI,c.minZoom=p,this._writeGlyph(l,h,n.x,n.y,c),i&&this._isVisible(c.minZoom,c.maxZoom)){const e=c.bounds;l.metricBoxWrite(e.center[0],e.center[1],e.width,e.height)}}}_placeOnSegment(e,t,i,o,n,s){const r=this.current.inShaping.glyphs,{out:a,inId:l}=this.current,h=this.current.inShaping,c=this.current.zoomLevel,m=e.dx/e.length,f=e.dy/e.length,_={x:e.x+i*-n*m,y:e.y+i*-n*f};for(const p of r){const r=p.x>h.bounds.x?s:1-s;if(!(r&&1===n||!r&&-1===n))continue;const m=Math.abs(p.x+p.width/2-h.bounds.x),f=Math.max(0,c+Math.log2(m/i)-.1),g=Math.max(o,c+Math.log2(m/(i+e.length+P)));if(0!==f&&(p.angle=e.angle+(1-s)*Math.PI,p.minZoom=g,p.maxZoom=f,this._writeGlyph(a,l,_.x,_.y,p),s&&this._isVisible(p.minZoom,p.maxZoom))){const i=p.bounds,o=e.x-t.x,n=e.y-t.y;a.metricBoxWrite(i.center[0]+o,i.center[1]+n,i.width,i.height)}}}_writeGlyphs(e,t,i,o,n=this._minZoom){if(i.x<0||i.x>=512||i.y<0||i.y>=512)return;const s=i.x+this._refOffsetX,r=i.y-this._refOffsetY;for(const c of o.glyphs)c.minZoom=n,c.maxZoom=this._maxZoom,this._writeGlyph(e,t,s,r,c);const a=this._refPlacementDirX,l=this._refPlacementDirY,h=o.boundsT;e.metricStart(t,n,s,r,a,l,this._referenceSize,this._materialKey),e.metricBoxWrite(h.center[0],h.center[1],h.width,h.height),e.metricEnd()}_writeVertexCommon(e,t,i,o){const n=this._color,s=this._haloColor,r=p(0,0,this._size,this._haloSize),a=Math.max(o.minZoom,this._minZoom),l=Math.min(o.maxZoom,this._maxZoom),h=p(O(a),O(l),this._outLineLabelAngle,0);e.vertexWrite(i),e.vertexWrite(t),e.vertexWrite(n),e.vertexWrite(s),e.vertexWrite(r),e.vertexWrite(this._refSymbolAndPlacementOffset),e.vertexWrite(h)}}export{I as default};
