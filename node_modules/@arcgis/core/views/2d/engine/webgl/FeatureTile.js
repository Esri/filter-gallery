/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import e from"../../../../core/CircularArray.js";import"../../../../core/has.js";import{isSome as t,unwrapOr as r,isNone as s}from"../../../../core/maybe.js";import{a as i,m as a}from"../../../../chunks/mat2d.js";import{c as n}from"../../../../chunks/mat2df32.js";import{t as h}from"../../../../chunks/vec2.js";import{c}from"../../../../chunks/vec2f32.js";import{WGLGeometryType as o}from"./enums.js";import{forEachGeometryType as d}from"./Utils.js";import{WGLTile as _}from"./WGLTile.js";import{MetricReader as u}from"./collisions/MetricReader.js";import{Geometry as m}from"./cpuMapped/Geometry.js";const p=50,l=4,f=8,S=100;let y=0;class w extends _{constructor(t,r,s,i,a){super(t,r,s),this.instanceId=y++,this.patchCount=0,this._renderState={current:{geometry:new Map,metrics:null},next:null,swap:!1,swapFrames:0,locked:!1},this._patches=new e(S),this._bufferPatches=new e(S),this._lastCommitTime=0,this._lastMessageWasClear=!1,this.transforms.labelMat2d=n(),this._store=i,this._requestLabelUpdate=a}destroy(){super.destroy(),this._renderState.current.geometry.forEach((e=>e.destroy()))}get labelMetrics(){return this._renderState.current.metrics}get hasData(){return!!this._renderState.current.geometry.size}getGeometry(e){return this._renderState.current.geometry.get(e)}setTransform(e,t){super.setTransform(e,t);const r=this.transforms.labelMat2d,s=e.getScreenTransform(r,t),n=c();h(n,[this.x,this.y],s),i(r,n),a(r,e.viewMat2d,r)}patch(e,t){if(this.patchCount++,e.clear&&this._lastMessageWasClear)return;this._lastMessageWasClear=e.clear,e.clear&&this._patches.size>=p&&this._dropPatches();const r=e,s=r.addOrUpdate&&this.key.id!==r.addOrUpdate.tileKeyOrigin;t&&s?this._bufferPatches.enqueue(r):(r.sort=r.sort&&!t,this._patches.enqueue(r)),this.requestRender()}commit(e){if(this._lastCommitTime!==e.time){this._lastCommitTime=e.time;for(let e=0;e<l;e++)this._updateMesh(),this.isReady&&this._updateBufferMesh();this._renderState.swap&&(this._swapRenderStates(),this.requestRender())}}lock(){this._renderState.locked=!0}unlock(){this._renderState.locked=!1,this._flushUpdates(),this._swap()}_swapRenderStates(){if(this._renderState.next){if(this._renderState.locked)return this._renderState.swap=!0,void this.requestRender();if(this._renderState.swap=!0,0===this._renderState.swapFrames)return this._renderState.swapFrames=f,void this.requestRender();1==this._renderState.swapFrames--?this._swap():this.requestRender()}}_swap(){this._renderState.swap&&(this._renderState.swap=!1,t(this._renderState.next)&&(this._renderState.current.geometry.forEach((e=>e.destroy())),this._renderState.current=this._renderState.next,this._renderState.next=null,this._requestLabelUpdate()))}_flushUpdates(){let e=this._patches.maxSize;for(;this._patches.size&&e--;)this._updateMesh(),this._swap()}_updateBufferMesh(){const e=this._bufferPatches.peek();if(!t(e)||!e.clear||null===this._renderState.next)for(;this._bufferPatches.size;){const e=this._bufferPatches.dequeue();t(e)&&this._patchBuffer(e)}}_updateMesh(){const e=this._patches.peek();if(t(e)&&e.clear&&null!==this._renderState.next)return;const r=this._patches.dequeue();if(t(r)){if(!0===r.clear){if(!this.isReady)return;return this._renderState.next,void(this._renderState.next={geometry:new Map,metrics:null})}this.requestRender(),this._patch(r),r.end&&(this.ready(),this._swapRenderStates())}}_patch(e){d((t=>{this._remove(t,e.remove),this._insert(t,e,!1)}))}_patchBuffer(e){d((t=>{this._insert(t,e,!0)}))}_insert(e,t,i){try{var a;const n=r(this._renderState.next,this._renderState.current),h=null==(a=t.addOrUpdate)?void 0:a.data[e],c=n.geometry;if(s(h))return;c.has(e)||c.set(e,new m(e,this.stage)),c.get(e).insert(h,t.sort,i),e===o.LABEL&&this._insertLabelMetrics(t.type,h.metrics,t.clear)}catch(n){}}_insertLabelMetrics(e,t,i){const a=r(this._renderState.next,this._renderState.current);if(s(t))return;const n=u.from(t);if(s(a.metrics))a.metrics=n;else{if("update"===e){const e=n.getCursor();for(;e.next();)a.metrics.delete(e.id)}a.metrics.link(n)}}_remove(e,t){const s=r(this._renderState.next,this._renderState.current).geometry.get(e);t&&t.length&&s&&(s.remove(t),this._removeLabelMetrics(t))}_removeLabelMetrics(e){const{metrics:t}=r(this._renderState.next,this._renderState.current);if(!s(t)&&e.length)for(const r of e)for(;t.delete(r););}_dropPatches(){const e=new Array;let t=!1;for(;this._patches.size;){const r=this._patches.dequeue();if(s(r))break;if(r.clear){if(t)break;t=!0}e.push(r)}this._patches.clear(),e.forEach((e=>this._patches.enqueue(e)))}}export{w as FeatureTile};
