/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import e from"../../../../Color.js";import{unwrapOr as t,unwrap as i,isSome as s,isNone as a}from"../../../../core/maybe.js";import{pt2px as o}from"../../../../core/screenUtils.js";import{getMetersPerUnitForSR as l}from"../../../../core/unitUtils.js";import{meterIn as r}from"../../../../renderers/support/lengthUtils.js";import{DOT_DENSITY_MAX_FIELDS as n}from"./definitions.js";import{isDefined as v,isNumber as d}from"./Utils.js";import{getWebGL1Capabilities as u}from"../../../webgl/capabilities.js";function c(e,t){const i=t.length;if(e<t[0].value||1===i)return t[0].size;for(let s=1;s<i;s++)if(e<t[s].value){const i=(e-t[s-1].value)/(t[s].value-t[s-1].value);return t[s-1].size+i*(t[s].size-t[s-1].size)}return t[i-1].size}function p(e,t,i=0){if(a(t))return e[i+0]=0,e[i+1]=0,e[i+2]=0,void(e[i+3]=0);const{r:s,g:o,b:l,a:r}=t;e[i+0]=s*r/255,e[i+1]=o*r/255,e[i+2]=l*r/255,e[i+3]=r}class h{constructor(){this.symbolLevels=[],this.vvColorValues=new Float32Array(8),this.vvColors=new Float32Array(32),this.vvOpacityValues=new Float32Array(8),this.vvOpacities=new Float32Array(8),this.vvSizeMinMaxValue=new Float32Array(4),this.ddColors=new Float32Array(32),this.ddBackgroundColor=new Float32Array(4),this.ddActiveDots=new Float32Array(8),this._vvMaterialParameters={vvSizeEnabled:!1,vvColorEnabled:!1,vvRotationEnabled:!1,vvRotationType:"geographic",vvOpacityEnabled:!1}}getSizeVVFieldStops(e){const s=this._vvSizeFieldStops;switch(s.type){case"static":return s;case"level-dependent":return t(s.levels[e],(()=>{let t=1/0,a=0;for(const i in s.levels){const s=parseFloat(i),o=Math.abs(e-s);o<t&&(t=o,a=s)}if(t===1/0)return{sizes:new Float32Array([0,0,0,0,0,0]),values:new Float32Array([0,0,0,0,0,0])};const o=2**((e-a)/2),l=i(s.levels[a]),r=new Float32Array(l.values);return r[2]*=o,r[3]*=o,{sizes:i(l.sizes),values:r}}))}}get vvMaterialParameters(){return this._vvMaterialParameters}update(e){s(this._vvInfo)&&this._updateVisualVariables(this._vvInfo.vvRanges,e)}setInfo(e,t,i){if(this._updateEffects(i),this._vvInfo=t,"dot-density"===e.type)this._updateDotDensityInfo(e)}getVariation(){return{ddDotBlending:this.ddDotBlending,outsideLabelsVisible:this.outsideLabelsVisible,oesTextureFloat:u().supportsTextureFloat}}getVariationHash(){return(this.ddDotBlending?1:0)|(this.outsideLabelsVisible?1:0)<<1}_updateEffects(e){s(e)?this.outsideLabelsVisible=e.excludedLabelsVisible:this.outsideLabelsVisible=!1}_updateVisualVariables(e,t){const i=this._vvMaterialParameters;if(i.vvOpacityEnabled=!1,i.vvSizeEnabled=!1,i.vvColorEnabled=!1,i.vvRotationEnabled=!1,!e)return;const s=e.size;if(s){if(i.vvSizeEnabled=!0,s.minMaxValue){const e=s.minMaxValue;let i,a;if(v(e.minSize)&&v(e.maxSize))if(d(e.minSize)&&d(e.maxSize))i=o(e.minSize),a=o(e.maxSize);else{const s=t.scale;i=o(c(s,e.minSize.stops)),a=o(c(s,e.maxSize.stops))}this.vvSizeMinMaxValue.set([e.minDataValue,e.maxDataValue,i,a])}if(s.scaleStops&&(this.vvSizeScaleStopsValue=o(c(t.scale,s.scaleStops.stops))),s.unitValue){const e=l(t.spatialReference)/r[s.unitValue.unit];this.vvSizeUnitValueToPixelsRatio=e/t.resolution}s.fieldStops&&(this._vvSizeFieldStops=s.fieldStops)}const a=e.color;a&&(i.vvColorEnabled=!0,this.vvColorValues.set(a.values),this.vvColors.set(a.colors));const n=e.opacity;n&&(i.vvOpacityEnabled=!0,this.vvOpacityValues.set(n.values),this.vvOpacities.set(n.opacities));const u=e.rotation;u&&(i.vvRotationEnabled=!0,i.vvRotationType=u.type)}_updateDotDensityInfo(t){const i=t.attributes;this.ddDotValue=t.dotValue,this.ddDotScale=t.referenceScale,this.ddDotSize=t.dotSize,this.ddDotBlending=t.dotBlendingEnabled,this.ddSeed=t.seed;for(let s=0;s<n;s++){const t=s>=i.length?new e([0,0,0,0]):i[s].color;p(this.ddColors,t,4*s)}for(let e=0;e<8;e++)this.ddActiveDots[e]=e<t.attributes.length?1:0;p(this.ddBackgroundColor,t.backgroundColor)}}export{h as WGLRendererInfo};
