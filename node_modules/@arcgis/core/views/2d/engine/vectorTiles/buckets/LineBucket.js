/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{BucketType as e}from"../enums.js";import t from"./BaseBucket.js";import{LineTessellation as i}from"../../webgl/TurboLine.js";const n=65535;class s extends t{constructor(t,n,s,a,o){super(t,n,s),this.type=e.LINE,this._tessellationOptions={pixelCoordRatio:8,halfWidth:0,offset:0},this._patternMap=new Map,this.tessellationProperties={_lineVertexBuffer:null,_lineIndexBuffer:null,_ddValues:null},this.tessellationProperties._lineVertexBuffer=a,this.tessellationProperties._lineIndexBuffer=o,this._lineTessellator=new i(l(this.tessellationProperties),r(this.tessellationProperties),t.canUseThinTessellation)}get lineIndexStart(){return this._lineIndexStart}get lineIndexCount(){return this._lineIndexCount}getResources(e,t,i){const n=this.layer,s=this.zoom,l=n.hasDataDrivenLine,r=n.getPaintProperty("line-pattern"),a=n.getPaintProperty("line-dasharray"),o=n.getLayoutProperty("line-cap");if(!r&&!a)return;const u=(null==o?void 0:o.getValue(s))||0,f=null==o?void 0:o.isDataDriven;if(l){const e=null==r?void 0:r.isDataDriven,i=null==a?void 0:a.isDataDriven;if(!e&&!i)return;for(const l of this._features)t(e?r.getValue(s,l):this._getDashArrayKey(l,s,n,a,f,o,u))}else if(r)t(r.getValue(s));else if(a){const e=a.getValue(s);t(n.getDashKey(e,u))}}processFeatures(e){var t,i,n,s,l,r;this._lineIndexStart=3*this.tessellationProperties._lineIndexBuffer.index,this._lineIndexCount=0;const a=this.layer,o=this.zoom,u=this._features,f=this._tessellationOptions,{hasDataDrivenLine:h,lineMaterial:p}=a;e&&e.setExtent(this.layerExtent);const d=a.getPaintProperty("line-pattern"),g=a.getPaintProperty("line-dasharray"),y=null==d?void 0:d.isDataDriven,c=null==g?void 0:g.isDataDriven;let _;_=a.getLayoutProperty("line-cap");const x=null!=(t=_)&&t.isDataDriven?_:null,D=x?null:a.getLayoutValue("line-cap",o),m=D||0,V=!!x;_=a.getLayoutProperty("line-join");const P=null!=(i=_)&&i.isDataDriven?_:null,I=P?null:a.getLayoutValue("line-join",o);_=a.getLayoutProperty("line-miter-limit");const L=null!=(n=_)&&n.isDataDriven?_:null,v=L?null:a.getLayoutValue("line-miter-limit",o);_=a.getLayoutProperty("line-round-limit");const B=null!=(s=_)&&s.isDataDriven?_:null,T=B?null:a.getLayoutValue("line-round-limit",o);_=a.getPaintProperty("line-width");const j=null!=(l=_)&&l.isDataDriven?_:null,A=j?null:a.getPaintValue("line-width",o);_=a.getPaintProperty("line-offset");const b=null!=(r=_)&&r.isDataDriven?_:null,w=b?null:a.getPaintValue("line-offset",o);if(y||c){const t=[];for(const i of u){const n=y?d.getValue(o,i):this._getDashArrayKey(i,o,a,g,V,x,m),s=this._spriteInfo[n];if(!s||!s.rect)continue;const l=p.encodeAttributes(i,o,a,s),r=i.getGeometry(e);t.push({ddAttributes:l,page:s.page,cap:x?x.getValue(o,i):D,join:P?P.getValue(o,i):I,miterLimit:L?L.getValue(o,i):v,roundLimit:B?B.getValue(o,i):T,halfWidth:.5*(j?j.getValue(o,i):A),offset:b?b.getValue(o,i):w,geometry:r})}t.sort(((e,t)=>e.page-t.page)),f.textured=!0;for(const{ddAttributes:e,page:i,cap:n,join:s,miterLimit:l,roundLimit:r,halfWidth:a,offset:o,geometry:u}of t)f.capType=n,f.joinType=s,f.miterLimit=l,f.roundLimit=r,f.halfWidth=a,f.offset=o,this._processFeature(u,e,i)}else{f.textured=!(!d&&!g),f.capType=D,f.joinType=I,f.miterLimit=v,f.roundLimit=T,f.halfWidth=.5*A,f.offset=w;for(const t of u){const i=h?p.encodeAttributes(t,o,a):null;x&&(f.capType=x.getValue(o,t)),P&&(f.joinType=P.getValue(o,t)),L&&(f.miterLimit=L.getValue(o,t)),B&&(f.roundLimit=B.getValue(o,t)),j&&(f.halfWidth=.5*j.getValue(o,t)),b&&(f.offset=b.getValue(o,t));const n=t.getGeometry(e);this._processFeature(n,i)}}}serialize(){let e=6;e+=this.layerUIDs.length,e+=this.tessellationProperties._lineVertexBuffer.array.length,e+=this.tessellationProperties._lineIndexBuffer.array.length,e+=3*this._patternMap.size+1;const t=new Uint32Array(e),i=new Int32Array(t.buffer);let n=0;t[n++]=this.type,t[n++]=this.layerUIDs.length;for(let r=0;r<this.layerUIDs.length;r++)t[n++]=this.layerUIDs[r];t[n++]=this._lineIndexStart,t[n++]=this._lineIndexCount;const s=this._patternMap,l=s.size;if(t[n++]=l,l>0)for(const[r,[a,o]]of s)t[n++]=r,t[n++]=a,t[n++]=o;t[n++]=this.tessellationProperties._lineVertexBuffer.array.length;for(let r=0;r<this.tessellationProperties._lineVertexBuffer.array.length;r++)i[n++]=this.tessellationProperties._lineVertexBuffer.array[r];t[n++]=this.tessellationProperties._lineIndexBuffer.array.length;for(let r=0;r<this.tessellationProperties._lineIndexBuffer.array.length;r++)t[n++]=this.tessellationProperties._lineIndexBuffer.array[r];return t.buffer}_processFeature(e,t,i){if(!e)return;const n=e.length;for(let s=0;s<n;s++)this._processGeometry(e[s],t,i)}_processGeometry(e,t,i){if(e.length<2)return;const s=.001;let l,r,a=e[0],o=1;for(;o<e.length;)l=e[o].x-a.x,r=e[o].y-a.y,l*l+r*r<s*s?e.splice(o,1):(a=e[o],++o);if(e.length<2)return;const u=this.tessellationProperties._lineIndexBuffer,f=3*u.index;this._tessellationOptions.initialDistance=0,this._tessellationOptions.wrapDistance=n,this.tessellationProperties._ddValues=t,this._lineTessellator.tessellate(e,this._tessellationOptions);const h=3*u.index-f;if(void 0!==i){const e=this._patternMap,t=e.get(i);t?t[1]+=h:e.set(i,[f+this._lineIndexCount,h])}this._lineIndexCount+=h}_getDashArrayKey(e,t,i,n,s,l,r){const a=s?l.getValue(t,e):r,o=n.getValue(t,e);return i.getDashKey(o,a)}}const l=e=>(t,i,n,s,l,r,a,o,u,f,h)=>(e._lineVertexBuffer.add(t,i,a,o,n,s,l,r,u,f,h,e._ddValues),e._lineVertexBuffer.index-1),r=e=>(t,i,n)=>{e._lineIndexBuffer.add(t,i,n)};export{s as default};
