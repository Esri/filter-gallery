/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{clone as t}from"../../../../../core/lang.js";import{urlToObject as e,isAbsolute as i,join as l,addQueryParameters as r}from"../../../../../core/urlUtils.js";import s from"../../../../../geometry/Extent.js";import{readServiceTileInfo as o}from"../../../../../layers/support/serviceTileInfoProperty.js";import{TilemapCache as n}from"../../../../../layers/support/TilemapCache.js";import a from"../TilemapIndex.js";import p from"../TilemapRequest.js";import{request as u}from"./VectorTilesRequestManager.js";class h{constructor(u,h,m){this.tilemap=null,this.tileInfo=null,this.capabilities=null,this.fullExtent=null,this.name=u,this.sourceUrl=h;const f=e(this.sourceUrl),c=t(m),d=c.tiles;if(f)for(let t=0;t<d.length;t++){const s=e(d[t]);s&&(i(s.path)||(s.path=l(f.path,s.path)),d[t]=r(s.path,{...f.query,...s.query}))}this.tileServers=d;const x=m.capabilities&&m.capabilities.split(",").map((t=>t.toLowerCase().trim())),y=!0===(null==m?void 0:m.exportTilesAllowed),v=!0===(null==x?void 0:x.includes("tilemap")),T=y&&m.hasOwnProperty("maxExportTilesCount")?m.maxExportTilesCount:0;this.capabilities={operations:{supportsExportTiles:y,supportsTileMap:v},exportTiles:y?{maxExportTilesCount:+T}:null},this.tileInfo=o(c.tileInfo,c,null,{ignoreMinMaxLOD:!0});const g=m.tileMap?r(l(f.path,m.tileMap),f.query):null;v?(this.type="vector-tile",this.tilemap=new p(new n({layer:{parsedUrl:f,tileInfo:this.tileInfo,type:"vector-tile",tileServers:this.tileServers}}),g)):g&&(this.tilemap=new a(g)),this.fullExtent=s.fromJSON(m.fullExtent)}destroy(){}async getRefKey(t,e){var i,l;return null!=(i=null==(l=this.tilemap)?void 0:l.dataKey(t,e))?i:t}requestTile(t,e,i,l){const r=this.tileServers[e%this.tileServers.length];return u(r,t,e,i,l)}isCompatibleWith(t){const e=this.tileInfo,i=t.tileInfo;if(!e.spatialReference.equals(i.spatialReference))return!1;if(!e.origin.equals(i.origin))return!1;if(Math.round(e.dpi)!==Math.round(i.dpi))return!1;const l=e.lods,r=i.lods,s=Math.min(l.length,r.length);for(let o=0;o<s;o++){const t=l[o],e=r[o];if(t.level!==e.level||Math.round(t.scale)!==Math.round(e.scale))return!1}return!0}}export{h as default};
