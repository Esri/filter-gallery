/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import e from"../../../../../core/CircularArray.js";import{isSome as t,isNone as s,unwrap as r}from"../../../../../core/maybe.js";import{FeatureSetReaderJSON as d}from"../support/FeatureSetReaderJSON.js";import{UpdateToken as i}from"../support/UpdateToken.js";class a{constructor(t){this.requests={done:new Array,stream:new e(10)},this._edits=null,this._abortController=new AbortController,this._done=!1,this.didSend=!1,this.tile=t}get signal(){return this._abortController.signal}get options(){return{signal:this._abortController.signal}}get empty(){return!this.requests.done.length}get edits(){return this._edits}get done(){return this._done}end(){this._done=!0}clear(){this.requests.done=[]}applyUpdate(e){this.requests.done.forEach((t=>t.message.status.unset(e))),t(this._edits)&&this._edits.status.unset(e)}add(e){var s;e.message.status=null!=(s=e.message.status)?s:i.empty(),e.message.end&&this.requests.done.forEach((e=>{t(e.message)&&e.message.end&&(e.message.end=!1)})),this.requests.done.push(e)}edit(e,t){const a=e.getQuantizationTransform(),o=e.fullSchema(),n=Array.from(e.features()),h=[...t,...n.map((e=>e.objectId))];if(this.removeIds(h),this._invalidate(),s(this._edits))return void(this._edits={type:"append",addOrUpdate:d.fromOptimizedFeatures(n,o,r(a)),id:this.tile.id,status:i.empty(),end:!0});this.requests.done.forEach((e=>e.message.end=!1));r(this._edits.addOrUpdate).append(e.features())}*readers(){for(const{message:e}of this.requests.done)t(e.addOrUpdate)&&(yield e.addOrUpdate);t(this._edits)&&t(this._edits.addOrUpdate)&&(yield this._edits.addOrUpdate)}_invalidate(){for(const e of this.requests.done)e.message.status=i.empty();t(this._edits)&&(this._edits.status=i.empty())}removeIds(e){this._invalidate();for(const{message:s}of this.requests.done){const r=s.addOrUpdate;t(r)&&(r.removeIds(e),r.isEmpty&&(s.addOrUpdate=null))}t(this._edits)&&t(this._edits.addOrUpdate)&&this._edits.addOrUpdate.removeIds(e),this.requests.done=this.requests.done.filter((e=>e.message.addOrUpdate||e.message.end))}abort(){this._abortController.abort()}}export{a as DataTileSubscription};
