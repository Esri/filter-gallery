/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import e from"../../../../core/Error.js";import t from"../../../../core/has.js";import{clone as i}from"../../../../core/lang.js";import r from"../../../../core/Logger.js";import{isSome as l,unwrap as n,isNone as s,unwrapOr as o}from"../../../../core/maybe.js";import{pt2px as a}from"../../../../core/screenUtils.js";import{getVVType as u}from"../../engine/webgl/Utils.js";import{getVVFlags as d}from"../../engine/webgl/util/vvFlagUtils.js";import{createSymbolSchema as f}from"./createSymbolSchema.js";export{createSymbolSchema}from"./createSymbolSchema.js";import{getPtMaxVVSize as c}from"./support/pixelBuffering.js";import{simplifyVisualVariables as p}from"./support/rendererUtils.js";import{createClusterRenderer as m}from"../support/clusterUtils.js";import{toJSONGeometryType as y}from"../support/util.js";const g=r.getLogger("esri.views.2d.layers.features.schemaUtils"),b="ValidationError",x={esriGeometryPoint:["above-right","above-center","above-left","center-center","center-left","center-right","below-center","below-left","below-right"],esriGeometryPolygon:["always-horizontal"],esriGeometryPolyline:["center-along"],esriGeometryMultipoint:null};function v(e){return e}function h(e){let t=0,i=0,r=!1,n=!0,s=!0;if(l(e)){if(i=c(e),"visualVariables"in e&&(t=d(e.visualVariables||[]),r="dot-density"===e.type),"dictionary"===e.type)return{maxVVSize:i,supportsOutlineFills:!1,vvFlags:t,stride:{fill:"default"}};if(!r){const t=e.getSymbols();"backgroundFillSymbol"in e&&e.backgroundFillSymbol&&t.push(e.backgroundFillSymbol);for(const e of t)if("cim"===e.type&&(n=!1),"simple-fill"===e.type||"picture-fill"===e.type){const t=e.outline;t&&"none"!==t.style&&"solid"!==t.style&&(s=!1);const i=t&&"none"!==t.style&&"solid"!==t.style,r="simple-fill"===e.type&&"none"!==e.style&&"solid"!==e.style;("picture-fill"===e.type||r||i)&&(n=!1)}}}return r&&(s=!1),{vvFlags:t,maxVVSize:i,supportsOutlineFills:s,stride:{fill:r?"dot-density":n?"simple":"default"}}}function w(t,i){const r=t.labelPlacement,l=x[i];if(!t.symbol)return g.warn("No ILabelClass symbol specified."),!0;if(!l)return g.error(new e("mapview-labeling:unsupported-geometry-type",`Unable to create labels for Feature Layer, ${i} is not supported`)),!0;if(!l.some((e=>e===r))){const e=l[0];r&&g.warn(`Found invalid label placement type ${r} for ${i}. Defaulting to ${e}`),t.labelPlacement=e}return!1}function F(e,t){const r=i(e);return r.some((e=>w(e,t)))?[]:r}function I(e){return t("esri-2d-update-debug")&&console.debug("Created new schema",E(e,!0)),E(e)}function E(e,t=!1){try{var i,r;const l=O(e,t),n={};l.map((t=>S(n,e,t)));return{source:{definitionExpression:e.definitionExpression,fields:e.fields.map((e=>e.toJSON())),gdbVersion:e.gdbVersion,historicMoment:null==(i=e.historicMoment)?void 0:i.getTime(),outFields:e.availableFields,pixelBuffer:e.pixelBuffer,spatialReference:e.spatialReference.toJSON(),timeExtent:null==(r=e.timeExtent)?void 0:r.toJSON(),customParameters:e.customParameters},attributes:{fields:{},indexCount:0},processors:l,targets:n}}catch(l){if(l.fieldName===b)return g.error(l),null;throw l}}function S(t,i,r){switch(r.target){case"feature":return void V(t,T(i),r);case"aggregate":{if(!("featureReduction"in i))return;const l=i.featureReduction;if("selection"===l.type)throw new e(b,"Mapview does not support `selection` reduction type",l);return V(t,T(i),r),void N(t,l,r)}}}function z(e,t){for(const i in t){const r=t[i];if(r.target!==e.name)continue;const l=e.attributes[i];l?(l.context.mesh=l.context.mesh||r.context.mesh,l.context.storage=l.context.storage||r.context.storage):e.attributes[i]=r}return e}function T(e){var t,i,r,l,s;return[null!=(t=null==(i=n(e.filter))?void 0:i.toJSON())?t:null,null!=(r=null==(l=n(null==(s=n(e.featureEffect))?void 0:s.filter))?void 0:l.toJSON())?r:null]}function V(e,t,i){return e.feature||(e.feature={name:"feature",input:"source",filters:t,attributes:{}}),z(e.feature,i.attributes.fields),e}function N(e,t,i){return e.aggregate||(e.aggregate={name:"aggregate",input:"feature",filters:null,attributes:{},params:{clusterRadius:a(t.clusterRadius/2),clusterPixelBuffer:64*Math.ceil(a(t.clusterMaxSize)/64),fields:i.aggregateFields}}),z(e.aggregate,i.attributes.fields),e}function j(e,t){return t.field?M(e,{...t,type:"field",field:t.field}):t.valueExpression?M(e,{...t,type:"expression",valueExpression:t.valueExpression}):{field:null,fieldIndex:null}}function M(e,t){switch(t.type){case"expression":{const i=v(t.valueExpression);if(!e.fields[i]){const r=e.indexCount++;e.fields[i]={...t,name:i,fieldIndex:r}}return{fieldIndex:e.fields[i].fieldIndex}}case"label-expression":{const i=v(JSON.stringify(t.label));if(!e.fields[i]){const r=e.indexCount++;e.fields[i]={...t,name:i,fieldIndex:r}}return{fieldIndex:e.fields[i].fieldIndex}}case"field":{const i=t.field;return"aggregate"===t.target&&e.fields[i]||(e.fields[i]={...t,name:i}),{field:i}}case"statistic":return e.fields[t.name]={...t},{field:t.name}}}function O(e,t=!1){const i=new Array;let r=0;return i.push(B(e,r++,t)),i}function R(e,t,i,r,l,n=!1){const s=M(t,{type:"label-expression",target:r,context:{mesh:!0},resultType:"string",label:{labelExpression:i.labelExpression,labelExpressionInfo:i.labelExpressionInfo?{expression:i.labelExpressionInfo.expression}:null,symbol:!!i.symbol,where:i.where}}),{fieldIndex:o}=s,a=h(e);return{...f(i,a,n),fieldIndex:o,target:r,index:l}}function B(t,i,r=!1){const n={indexCount:0,fields:{}},s="featureReduction"in t&&t.featureReduction,o=s?"aggregate":"feature";if("sublayers"in t){const i={type:"subtype",subtypeField:t.subtypeField,renderers:{},stride:{fill:"default"}},s={type:"subtype",mapping:{},target:"feature"},a={type:"subtype",classes:{}},u={type:"symbol",target:"feature",aggregateFields:[],attributes:n,storage:s,mesh:{matcher:i,aggregateMatcher:null,labels:a,sortKey:null}},d=new Set;let f=0;for(const{renderer:c,subtypeCode:p,labelingInfo:m,labelsVisible:y}of t.sublayers){const t=L(n,o,c,r),u=C(n,o,c),g=y&&m;if("visualVariables"in c&&c.visualVariables&&c.visualVariables.length)throw new e(b,"Visual variables are currently not supported for subtype layers");if("dictionary"===t.type)throw new e(b,"Dictionary renderer is not supported in subtype layers");if("subtype"===t.type)throw new e(b,"Nested subtype renderers is not supported");if(l(u)&&"subtype"===u.type)throw new e(b,"Nested subtype storage is not supported");if(l(u)&&"dot-density"===u.type)throw new e(b,"Dot density attributes are not supported in subtype layers");if(d.has(p))throw new e(b,"Subtype codes for sublayers must be unique");d.add(p),i.renderers[p]=t,s.mapping[p]=u,g&&(a.classes[p]=g.map((e=>R(c,n,e,"feature",f++,r))))}return u}if("heatmap"===t.renderer.type){const{blurRadius:e,fieldOffset:i,field:r}=t.renderer;return{type:"heatmap",aggregateFields:[],attributes:n,target:o,storage:null,mesh:{blurRadius:e,fieldOffset:i,field:j(n,{target:o,field:r,resultType:"numeric"}).field}}}{const i=[],l="aggregate"===o?m(i,t.renderer,s,null):t.renderer;P(n,i);const a=L(n,o,l,r);let u=null;const d=C(n,o,l),c=y(t.geometryType);let p=t.labelsVisible&&t.labelingInfo||[],g=[];if(s){if("selection"===s.type)throw new e(b,"Mapview does not support `selection` reduction type",s);if(s.symbol){const e=h(l);u={type:"simple",symbol:f(s.symbol,e,r),stride:e.stride}}g=s&&s.labelsVisible&&s.labelingInfo||[]}p=F(p,c),g=F(g,c);let x=0;const v=[...p.map((e=>R(l,n,e,"feature",x++,r))),...g.map((e=>R(l,n,e,"aggregate",x++,r)))],w=k(n,t.orderBy);return{type:"symbol",target:o,attributes:n,aggregateFields:i,storage:d,mesh:{matcher:a,labels:{type:"simple",classes:v},aggregateMatcher:u,sortKey:w}}}}function k(t,i){if(s(i)||!i.length)return null;i.length>1&&g.warn(`Layer rendering currently only supports ordering by 1 orderByInfo, but found ${i.length}. All but the first will be discarded`);const r=i[0],l="ascending"===r.order?"asc":"desc";if(r.field)return{field:r.field,order:l};if(r.valueExpression){return{fieldIndex:M(t,{type:"expression",target:"feature",valueExpression:r.valueExpression,resultType:"numeric"}).fieldIndex,order:l}}return g.error(new e(b,"Expected to find a field or valueExpression for OrderByInfo",r)),null}function P(e,t){const i={mesh:!0,storage:!0};for(const r of t){const{name:t,outStatistic:l}=r,{statisticType:n,onStatisticField:s}=l;let o=null,a=null,u=null;const d="numeric",f="feature";if("onStatisticValueExpression"in l){a=M(e,{type:"expression",target:f,valueExpression:l.onStatisticValueExpression,resultType:d}).fieldIndex}else if("onStatisticNormalizationField"in l){o=M(e,{type:"field",target:f,field:s,resultType:d}).field,u=l.onStatisticNormalizationField}else{o=M(e,{type:"field",target:f,field:s,resultType:d}).field}M(e,{type:"statistic",target:"aggregate",name:t,context:i,inField:o,inNormalizationField:u,inFieldIndex:a,statisticType:n})}}function C(e,t,i){switch(i.type){case"dot-density":return U(e,t,i.attributes);case"simple":case"class-breaks":case"unique-value":case"dictionary":return J(e,t,i.visualVariables);case"heatmap":return null}}function U(e,t,i){if(!i||!i.length)return{type:"dot-density",mapping:[],target:t};return{type:"dot-density",mapping:i.map(((i,r)=>{const{field:l,fieldIndex:n}=j(e,{valueExpression:i.valueExpression,field:i.field,resultType:"numeric",target:t});return{binding:r,field:l,fieldIndex:n}})),target:t}}function J(e,t,i){if(!i||!i.length)return{type:"visual-variable",mapping:[],target:t};const r={storage:!0},l="numeric";return{type:"visual-variable",mapping:p(i).map((i=>{var n;const s=u(i.type),{field:o,fieldIndex:a}=j(e,{target:t,valueExpression:i.valueExpression,field:i.field,context:r,resultType:l});switch(i.type){case"size":return"$view.scale"===i.valueExpression?null:{type:"size",binding:s,field:o,fieldIndex:a,normalizationField:j(e,{target:t,field:i.normalizationField,context:r,resultType:l}).field,valueRepresentation:null!=(n=i.valueRepresentation)?n:null};case"color":return{type:"color",binding:s,field:o,fieldIndex:a,normalizationField:j(e,{target:t,field:i.normalizationField,context:r,resultType:l}).field};case"opacity":return{type:"opacity",binding:s,field:o,fieldIndex:a,normalizationField:j(e,{target:t,field:i.normalizationField,context:r,resultType:l}).field};case"rotation":return{type:"rotation",binding:s,field:o,fieldIndex:a}}})).filter((e=>e)),target:t}}function L(e,t,i,r=!1){const l=o(e,{indexCount:0,fields:{}});switch(i.type){case"simple":case"dot-density":return $(l,i,r);case"class-breaks":return D(l,t,i,r);case"unique-value":return q(l,t,i,r);case"dictionary":return G(l,i,r)}}function $(e,t,i=!1){const r=t.getSymbols(),l=r.length?r[0]:null,n=h(t);return{type:"simple",symbol:f(l,n,i),stride:n.stride}}function D(e,t,i,r=!1){const l={mesh:!0,use:"renderer.field"},n=i.backgroundFillSymbol,{field:s,fieldIndex:o}=j(e,{target:t,field:i.field,valueExpression:i.valueExpression,resultType:"numeric",context:l}),a=i.normalizationType,u="log"===a?"esriNormalizeByLog":"percent-of-total"===a?"esriNormalizeByPercentOfTotal":"field"===a?"esriNormalizeByField":null,d=h(i),c=i.classBreakInfos.map((e=>({symbol:f(e.symbol,d,r),min:e.minValue,max:e.maxValue}))).sort(((e,t)=>e.min-t.min));return{type:"interval",attributes:e.fields,field:s,fieldIndex:o,backgroundFillSymbol:f(n,d,r),defaultSymbol:f(i.defaultSymbol,d,r),intervals:c,normalizationField:i.normalizationField,normalizationTotal:i.normalizationTotal,normalizationType:u,isMaxInclusive:i.isMaxInclusive,stride:d.stride}}function q(t,i,r,l=!1){const n=[],s=r.backgroundFillSymbol,o={target:i,context:{mesh:!0},resultType:"string"};if(r.field&&"string"!=typeof r.field)throw new e(b,"Expected renderer.field to be a string",r);const{field:a,fieldIndex:u}=j(t,{...o,field:r.field,valueExpression:r.valueExpression}),d=h(r);for(const e of r.uniqueValueInfos)n.push({value:""+e.value,symbol:f(e.symbol,d,l)});return{type:"map",attributes:t.fields,field:a,fieldIndex:u,field2:j(t,{...o,field:r.field2}).field,field3:j(t,{...o,field:r.field3}).field,fieldDelimiter:r.fieldDelimiter,backgroundFillSymbol:f(s,d),defaultSymbol:f(r.defaultSymbol,d),map:n,stride:d.stride}}function G(e,t,i=!1){const r=h(t);return{type:"dictionary",config:t.config,fieldMap:t.fieldMap,scaleExpression:t.scaleExpression,url:t.url,symbolOptions:r,stride:r.stride}}export{P as addAggregateFields,L as createMatcherSchema,I as createSchema,h as createSymbolSchemaOptions};
