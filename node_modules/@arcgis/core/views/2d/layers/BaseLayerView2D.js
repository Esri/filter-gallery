/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import{property as t}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as s}from"../../../core/accessorSupport/decorators/subclass.js";import{create as o}from"../../../geometry/support/aaBoundingRect.js";import{equals as r}from"../../../geometry/support/spatialReferenceUtils.js";import"../tiling/PagedTileQueue.js";import i from"../tiling/TileInfoView.js";import"../tiling/TileKey.js";import"../tiling/TileQueue.js";import"../tiling/TileStrategy.js";import{LayerView2DMixin as l}from"./LayerView2D.js";import{Display as n}from"./support/Display.js";import a from"../../layers/LayerView.js";import{RefreshableLayerView as p}from"../../layers/RefreshableLayerView.js";const c=new Set,h=[],u=[];class d{constructor(e,t,s,r,i,l,n,a=[0,0],p=o()){this.id=e,this.level=t,this.row=s,this.col=r,this.world=i,this.resolution=l,this.scale=n,this.coords=a,this.bounds=p}}let m=class extends(p(l(a))){constructor(e){super(e),this._tileMap=new Map,this.container=new n(this),this.layer=null,this.tiles=[]}get _tileInfoView(){const e=this.layer&&this.layer.tileInfo;return e?new i(e):null}attach(){}detach(){}requestRender(){this.container.requestRender()}tilesChanged(e,t){}supportsSpatialReference(e){var t;const s=null==(t=this.layer)?void 0:t.tileInfo;return!s||r(s.spatialReference,e)}async doRefresh(){}isUpdating(){return!1}update(e){const t=this._tileInfoView,s=this.tiles;if(t){const o=t.getTileCoverage(e.state,0),{spans:r,lodInfo:i}=o,{level:l}=i;if(r.length)for(const{row:e,colFrom:t,colTo:n}of r)for(let o=t;o<=n;o++){const t=i.normalizeCol(o),r=i.getWorldForColumn(o),n=`${l}/${e}/${t}/${r}`;if(!this._tileMap.has(n)){const o=new d(n,l,e,t,r,i.resolution,i.scale);i.getTileCoords(o.coords,o,!1),i.getTileBounds(o.bounds,o,!0),this._tileMap.set(n,o),s.push(o),h.push(o)}c.add(n)}}for(let o=s.length-1;o>=0;o--){const e=s[o];c.has(e.id)||(s.splice(o,1),u.push(e),this._tileMap.delete(e.id))}(h.length||u.length)&&(this.tilesChanged(h,u),h.length=u.length=0),c.clear(),this.requestRender()}moveStart(){}viewChange(){this.requestUpdate()}moveEnd(){}};e([t()],m.prototype,"_tileInfoView",null),e([t()],m.prototype,"layer",void 0),m=e([s("esri.views.2d.layers.BaseLayerView2D")],m);const f=m;export{f as default};
