/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import s from"../../../Graphic.js";import i from"../../../core/Collection.js";import{isSome as t,unwrap as r}from"../../../core/maybe.js";import{watch as h,initial as o}from"../../../core/reactiveUtils.js";import"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import"../../../core/accessorSupport/set.js";import{subclass as a}from"../../../core/accessorSupport/decorators/subclass.js";import{LayerView2DMixin as n}from"./LayerView2D.js";import c from"./graphics/GraphicContainer.js";import p from"./graphics/GraphicsView2D.js";import l from"../../layers/LayerView.js";const g=["routeInfo","directionLines","directionPoints","polygonBarriers","polylineBarriers","pointBarriers","stops"],d=Object.freeze({remove(){},pause(){},resume(){}});let m=class extends(n(l)){constructor(){super(...arguments),this._graphicsViews=new Map,this._highlightIds=new Map}attach(){for(const e of g)this.handles.add(h((()=>t(this.layer[e])?"routeInfo"===e?[r(this.layer[e])]:r(this.layer[e]).toArray():null),(s=>this._createGraphicsView(e,s)),o),e)}detach(){this._destroyGraphicsViews()}highlight(e){let t;return"number"==typeof e?t=[e]:e instanceof s?t=[e.uid]:Array.isArray(e)&&e.length>0?t="number"==typeof e[0]?e:e.map((e=>e&&e.uid)):i.isCollection(e)&&(t=e.map((e=>e&&e.uid)).toArray()),t=t.filter((e=>null!=e)),t.length?(this._addHighlight(t),{remove:()=>this._removeHighlight(t)}):d}async hitTest(e,s){if(this.suspended||!this._graphicsViews.size)return Promise.resolve(null);const i=Array.from(this._graphicsViews.values()).reverse().map((s=>s.hitTest(e))).flat().filter((e=>!!e));for(const t of i)t.layer=this.layer,t.sourceLayer=this.layer;return i}moveStart(){}moveEnd(){}update(e){for(const s of this._graphicsViews.values())s.processUpdate(e)}viewChange(){for(const e of this._graphicsViews.values())e.viewChange()}isUpdating(){for(const e of this._graphicsViews.values())if(e.updating)return!0;return!1}_createGraphicsView(e,r){this._destroyGraphicsView(e);const a=this.view,n=()=>this.requestUpdate(),l=new i(t(r)?r.map((e=>{const{attributes:i,geometry:t,symbol:r,popupInfo:h}=e.toPortalJSON();return s.fromJSON({attributes:i,geometry:t,symbol:r,popupTemplate:h})})):[]),d=new c(a.featuresTilingScheme),m=new p({container:d,graphics:l,requestUpdateCallback:n,view:a});this._graphicsViews.set(e,m),this.container.addChildAt(d,g.indexOf(e)),this._updateHighlight(),this.handles.add([h((()=>m.updating),(()=>this.notifyChange("updating")),o)],`updating-${e}`)}_destroyGraphicsView(e){if(!this._graphicsViews.has(e))return;const s=this._graphicsViews.get(e);this.container.removeChild(s.container),s.destroy(),this.handles.remove(`updating-${e}`),this._graphicsViews.delete(e)}_destroyGraphicsViews(){this.container.removeAllChildren();for(const[e,s]of this._graphicsViews.entries())this.handles.remove(e),s.destroy();this._graphicsViews.clear()}_addHighlight(e){for(const s of e)if(this._highlightIds.has(s)){const e=this._highlightIds.get(s);this._highlightIds.set(s,e+1)}else this._highlightIds.set(s,1);this._updateHighlight()}_removeHighlight(e){for(const s of e)if(this._highlightIds.has(s)){const e=this._highlightIds.get(s)-1;0===e?this._highlightIds.delete(s):this._highlightIds.set(s,e)}this._updateHighlight()}_updateHighlight(){const e=Array.from(this._highlightIds.keys());for(const s of this._graphicsViews.values())s.setHighlight(e)}};m=e([a("esri.views.2d.layers.RouteLayerView2D")],m);const u=m;export{u as default};
