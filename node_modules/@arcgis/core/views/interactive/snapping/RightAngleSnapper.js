/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{unwrap as e}from"../../../core/maybe.js";import{f as t,k as r,u as i,v as o}from"../../../chunks/vec2.js";import{a as s,f as n}from"../../../chunks/vec2f64.js";import{SnappingAlgorithm as p}from"./SnappingAlgorithm.js";import{RayConstraint as g}from"./SnappingConstraint.js";import{anyMapPointToScreenPoint as h,squareDistance as a}from"./snappingUtils.js";import{RightAngleSnappingCandidate as d,OtherVertexType as c}from"./candidates/RightAngleSnappingCandidate.js";class f extends p{constructor(){super(...arguments),this._tmp=s()}snapNewVertex(e,t){const r=t.editGeometryOperations.data.components[0],i=r.vertices.length,o=[];if(i<2)return o;const s=h(e,t.coordinateHelper,t.elevationInfo,this.view),n=r.vertices[i-1];this._checkForSnappingCandidate(o,n.leftEdge,n.pos,e,n.leftEdge.leftVertex.pos,n.pos,t,e,s);const p=r.vertices[0];return this._checkForSnappingCandidate(o,p.rightEdge,p.pos,e,p.rightEdge.rightVertex.pos,p.pos,t,e,s),o}snapExistingVertex(t,r){const i=[],o=e(r.vertexHandle),s=o.component,n=s.vertices.length;if(n<3)return i;const p=h(t,r.coordinateHelper,r.elevationInfo,this.view),g=o.leftEdge,a=o.rightEdge,d=s.vertices[0],c=s.vertices[n-1];if(!g)return this._checkForSnappingCandidate(i,d.rightEdge.rightVertex.rightEdge,d.rightEdge.rightVertex.pos,t,d.rightEdge.rightVertex.rightEdge.rightVertex.pos,d.rightEdge.rightVertex.pos,r,t,p),i;if(!a)return this._checkForSnappingCandidate(i,c.leftEdge.leftVertex.leftEdge,c.leftEdge.leftVertex.pos,t,c.leftEdge.leftVertex.leftEdge.leftVertex.pos,c.leftEdge.leftVertex.pos,r,t,p),i;if(g&&g.leftVertex.leftEdge){const e=g.leftVertex.leftEdge;this._checkForSnappingCandidate(i,e,g.leftVertex.pos,t,e.leftVertex.pos,g.leftVertex.pos,r,t,p)}if(a&&a.rightVertex.rightEdge){const e=a.rightVertex.rightEdge;this._checkForSnappingCandidate(i,e,a.rightVertex.pos,t,e.rightVertex.pos,a.rightVertex.pos,r,t,p)}return i}_checkForSnappingCandidate(e,p,f,l,x,V,m,E,v){if(!this.edgeExceedsShortLineThreshold(p,m))return;t(this._tmp,p.rightVertex.pos,p.leftVertex.pos);const u=n(this._tmp[1],-this._tmp[0]),_=r(u,t(this._tmp,l,f))/i(u),S=m.coordinateHelper,k=S.fromXYZ(o(s(),V,u,_),S.getZ(E,0));a(v,h(k,S,m.elevationInfo,this.view))<this.squaredProximityTreshold(m.pointer)&&e.push(new d({coordinateHelper:S,targetPoint:k,constraint:new g(S,V,o(S.createVector(),V,u,Math.sign(_))),previousVertex:x,otherVertex:V,otherVertexType:c.CENTER}))}}export{f as RightAngleSnapper};
