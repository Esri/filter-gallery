/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{f as e,m as t}from"../../../../chunks/vec2.js";import{LineConstraint as r}from"../SnappingConstraint.js";import{LineSegmentHintType as n}from"../snappingUtils.js";import{SnappingCandidate as i}from"./SnappingCandidate.js";import{LineSnappingHint as s}from"../hints/LineSnappingHint.js";import{ParallelSnappingHint as a}from"../hints/ParallelSnappingHint.js";class f extends i{constructor({coordinateHelper:n,referenceLine:i,lineStart:s,targetPoint:a}){const f=n.clone(s);e(f,t(f,f,i.rightVertex.pos),i.leftVertex.pos),super(n,a,new r(n,s,f)),this._referenceLines=[{edge:i,fadeLeft:!0,fadeRight:!0}]}get hints(){return[new s(n.TARGET,this.constraint.start,this.targetPoint),new a(this.constraint.start,this.targetPoint),...this._referenceLines.map((e=>new s(n.REFERENCE,e.edge.leftVertex.pos,e.edge.rightVertex.pos,e.fadeLeft,e.fadeRight)))]}addReferenceLine(e){const t={edge:e,fadeLeft:!0,fadeRight:!0};this._referenceLines.forEach((r=>{e.rightVertex.rightEdge===r.edge&&(r.fadeLeft=!1,t.fadeRight=!1),e.leftVertex.leftEdge===r.edge&&(r.fadeRight=!1,t.fadeLeft=!1)})),this._referenceLines.push(t)}}export{f as ParallelLineSnappingCandidate};
