/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{unwrap as e}from"../../../core/maybe.js";import{a as t}from"../../../chunks/vec2f64.js";import{SnappingAlgorithm as o}from"./SnappingAlgorithm.js";import{anyMapPointToScreenPoint as r,squareDistance as s}from"./snappingUtils.js";import{LineSnappingCandidate as i}from"./candidates/LineSnappingCandidate.js";import{projectPointToLine as n}from"../../support/geometry2dUtils.js";class d extends o{snapNewVertex(e,t){const o=t.editGeometryOperations.data.components[0],s=o.edges.length,i=[];if(s<1)return i;const n=t.coordinateHelper,d=r(e,n,t.elevationInfo,this.view),p=o.edges[s-1];let a=p;do{this.edgeExceedsShortLineThreshold(a,t)&&this._processCandidateProposal(a.leftVertex.pos,a.rightVertex.pos,e,d,t,i),a=a.leftVertex.leftEdge}while(a&&a!==p);return i}snapExistingVertex(t,o){const s=[],i=e(o.vertexHandle),n=i.component;if(n.edges.length<2)return s;const d=o.coordinateHelper,p=r(t,d,o.elevationInfo,this.view),a=i.leftEdge,h=i.rightEdge;a&&h&&this.edgeExceedsShortLineThreshold(a,o)&&this.edgeExceedsShortLineThreshold(h,o)&&this._processCandidateProposal(a.leftVertex.pos,h.rightVertex.pos,t,p,o,s);const l=n.edges[0];let g=l;do{g!==i.leftEdge&&g!==i.rightEdge&&this.edgeExceedsShortLineThreshold(g,o)&&this._processCandidateProposal(g.leftVertex.pos,g.rightVertex.pos,t,p,o,s),g=g.rightVertex.rightEdge}while(g&&g!==l);return s}_processCandidateProposal(e,o,d,p,a,h){const l=n(t(),d,e,o),g=a.coordinateHelper,c=g.fromXYZ(l,g.getZ(d,0));s(p,r(c,g,a.elevationInfo,this.view))<this.squaredProximityTreshold(a.pointer)&&h.push(new i({coordinateHelper:a.coordinateHelper,lineStart:e,lineEnd:o,targetPoint:c}))}}export{d as LineSnapper};
