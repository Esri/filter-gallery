/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../core/Accessor.js";import r from"../../../core/Handles.js";import{destroyMaybe as s,removeMaybe as a}from"../../../core/maybe.js";import{addFrameTask as o}from"../../../core/scheduling.js";import{secondsFromMilliseconds as i}from"../../../core/time.js";import{property as h}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as n}from"../../../core/accessorSupport/decorators/subclass.js";import{maxDownloadSlots as l,downloadSlotsPerClient as m}from"./index.js";import{newMemoryController as u}from"./MemoryController.js";import{StreamDataLoader as d}from"./StreamDataLoader.js";import{ImmediateTask as c,State as _,newScheduler as p,TaskPriority as y}from"../../support/Scheduler.js";let g=class extends t{constructor(){super(...arguments),this.updating=!1}};function C(e,t=(()=>performance.now())){return new w.ResourceController({view:e,now:t})}var w;e([h({readOnly:!0})],g.prototype,"updating",void 0),g=e([n("esri.views.3d.support.ResourceController")],g),function(t){let C=class extends g{constructor(){super(...arguments),this._scheduler=null,this._memoryController=null,this._streamDataLoader=null,this._cameraChangeTime=0,this._handles=new r,this._frameTask=null,this._scheduleTask=c,this._state=_.IDLE}initialize(){this._cameraChangeTime=this.now(),this._scheduler=p(this.now),this._memoryController=u(this.view),this._streamDataLoader=new d,this._streamDataLoader.setup(l,m,this._scheduler),this._handles.add([this.view.watch("state.camera",((e,t)=>this._cameraChangedHandler(e,t)),!0),this.view.watch("stationary",(()=>this._stationaryChangedHandler())),this._memoryController.events.on("updating-changed",(()=>this.notifyChange("updating")))]),this._frameTask=o({update:e=>this._frame(e)}),this._scheduleTask=this._scheduler.registerTask(y.RESOURCE_CONTROLLER)}destroy(){this._handles=s(this._handles),this._scheduleTask.remove(),this._frameTask=a(this._frameTask),this._streamDataLoader=s(this._streamDataLoader),this._memoryController=s(this._memoryController),this._scheduler=s(this._scheduler)}get updating(){var e,t;return!!(null!=(e=this._memoryController)&&e.updating||null!=(t=this._streamDataLoader)&&t.updating)}get scheduler(){return this._scheduler}get memoryController(){return this._memoryController}schedule(e,t,r){return this._scheduleTask.schedule(e,t,r)}createStreamDataRequester(e){const t=this._streamDataLoader;return{request:(r,s,a)=>t.request(r,s,e,a),get busy(){return!t.hasDownloadSlots(e)}}}_frame(e){this.view.suspended||this.view.stateManager&&(this.view.stateManager.step(i(e.deltaTime)),!this._scheduler)||(this._updateState(),this._scheduler.state=this._state,this._scheduler.updateBudget(e)?(this._memoryController.update(),this._scheduler.frame()):this._memoryController.updating&&this._memoryController.update())}_cameraChangedHandler(e,t){e&&t&&e.almostEquals(t)||(this._cameraChangeTime=this._scheduler.now,this._updateState(),this._scheduler.state=this._state)}_stationaryChangedHandler(){this.memoryController.resetStableQuality()}_updateState(){this.view.animation?this._state=_.ANIMATING:this.view.interacting?this._state=_.INTERACTING:(this._state===_.ANIMATING&&(this._cameraChangeTime=0),this._scheduler.now-this._cameraChangeTime<=w?this._state=_.INTERACTING:this._state=_.IDLE)}get test(){return{getQueueStats:e=>this._streamDataLoader.test.loadQueue.getStatsForType(e),state:this._state}}};e([h({constructOnly:!0})],C.prototype,"view",void 0),e([h({constructOnly:!0})],C.prototype,"now",void 0),e([h()],C.prototype,"_scheduler",void 0),e([h()],C.prototype,"_memoryController",void 0),e([h()],C.prototype,"_streamDataLoader",void 0),e([h({readOnly:!0})],C.prototype,"updating",null),C=e([n("esri.views.3d.support.ResourceController")],C),t.ResourceController=C;const w=300}(w||(w={}));export{g as ResourceControllerMain,C as newResourceController};
