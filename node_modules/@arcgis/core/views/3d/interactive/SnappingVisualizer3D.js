/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import e from"../../../Color.js";import"../../../core/has.js";import{destroyHandle as n}from"../../../core/handleUtils.js";import{e as t}from"../../../chunks/vec3.js";import{c as i}from"../../../chunks/vec3f64.js";import{ExtendedLineVisualElement as o,ExtensionType as r}from"./visualElements/ExtendedLineVisualElement.js";import{ParallelLineVisualElement as a}from"./visualElements/ParallelLineVisualElement.js";import{PointVisualElement as l}from"./visualElements/PointVisualElement.js";import{RightAngleQuadVisualElement as s}from"./visualElements/RightAngleQuadVisualElement.js";import{RenderOccludedFlag as c}from"../webgl-engine/lib/Material.js";import{defaults as d}from"../../interactive/snapping/Settings.js";import{anyMapPointToRender as p,anyMapPointsToRenderWithEqualZ as m,LineSegmentHintType as u}from"../../interactive/snapping/snappingUtils.js";import{SnappingVisualizer as v}from"../../interactive/snapping/SnappingVisualizer.js";class g extends v{visualizeIntersectionPoint(t,i){const{coordinateHelper:o,elevationInfo:r,view:a}=i;return n(new l({view:a,primitive:"circle",geometry:o.vectorToPoint(t.intersectionPoint),elevationInfo:r,size:20,outlineSize:2,color:[0,0,0,0],outlineColor:e.toUnitRGBA(d.orange),pixelSnappingEnabled:!1}))}visualizePoint(t,i){const{coordinateHelper:o,elevationInfo:r,view:a}=i;return n(new l({view:a,primitive:"circle",geometry:o.vectorToPoint(t.point),elevationInfo:r,size:20,outlineSize:2,color:[0,0,0,0],outlineColor:e.toUnitRGBA(d.orange),pixelSnappingEnabled:!1}))}visualizeLine(e,t){const{coordinateHelper:i,elevationInfo:o,view:r}=t;return n(this._createLineSegmentHintFromMap(e.type,e.lineStart,e.lineEnd,i,o,r,e.fadeLeft,e.fadeRight))}visualizeParallelSign(i,o){const{coordinateHelper:r,elevationInfo:l,view:s}=o,m=p(i.lineStart,r,l,o.view),u=p(i.lineEnd,r,l,o.view),v=t(u,m,u,.5),g=new a({view:s,attached:!1,offset:d.parallelLineHintOffset,length:d.parallelLineHintLength,width:d.parallelLineHintWidth,color:e.toUnitRGBA(d.orange),location:v,renderOccluded:c.Opaque});return g.setDirectionFromPoints(m,v),g.attached=!0,n(g)}visualizeRightAngleQuad(t,i){const{coordinateHelper:o,elevationInfo:r,view:a}=i;return n(new s({view:a,attached:!0,color:e.toUnitRGBA(d.orange),renderOccluded:c.Transparent,outlineRenderOccluded:c.Opaque,outlineColor:e.toUnitRGBA(d.orange),outlineSize:d.rightAngleHintOutlineSize,size:d.rightAngleHintSize,geometry:{previous:p(t.previousVertex,o,r,a),center:p(t.centerVertex,o,r,a),next:p(t.nextVertex,o,r,a)}}))}_createLineSegmentHintFromMap(e,n,t,o,r,a,l=!0,s=!0){const c=i(),d=i();return m(n,t,o,r,a,c,d),this._createLineSegmentHint(e,a,c,d,l,s)}_createLineSegmentHint(n,t,i,a,l=!0,s=!0){const p=new o({view:t,extensionType:r.FADED,start:i,end:a,color:e.toUnitRGBA(d.orange),renderOccluded:c.Opaque});switch(n){case u.TARGET:p.width=d.lineHintWidthTarget,p.fadedExtensions={start:0,end:d.lineHintFadedExtensions};break;case u.REFERENCE_EXTENSION:p.width=d.lineHintWidthReference,p.fadedExtensions={start:0,end:0};break;case u.REFERENCE:p.width=d.lineHintWidthReference,p.fadedExtensions={start:l?d.lineHintFadedExtensions:0,end:s?d.lineHintFadedExtensions:0}}return p.attached=!0,p}}export{g as SnappingVisualizer3D};
