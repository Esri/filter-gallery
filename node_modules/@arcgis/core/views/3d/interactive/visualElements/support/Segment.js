/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{e,f as t,n as s,g as r,b as i}from"../../../../../chunks/vec3.js";import{c as n}from"../../../../../chunks/vec3f64.js";import{canProjectWithoutEngine as c,projectVectorToVector as o}from"../../../../../geometry/projection.js";import{getSphericalPCPF as p}from"../../../../../geometry/projectionEllipsoid.js";import{sv3d as a}from"../../../../../geometry/support/vectorStacks.js";import{slerpTangent as h,slerp as d}from"../../../support/mathUtils.js";class _{constructor(e=n(),t=n()){this.startRenderSpace=e,this.endRenderSpace=t,this.type="euclidean"}eval(r,i,n){return e(i,this.startRenderSpace,this.endRenderSpace,r),n&&(t(n,this.endRenderSpace,this.startRenderSpace),s(n,n)),i}createRenderGeometry(e,s){const r=[],i=[],n=(s,n)=>{const c=u;t(c,s,e),r.push([c[0],c[1],c[2]]),i.push([n[0],n[1],n[2]])},c=s.worldUpAtPosition(this.eval(.5,m),a.get());return n(this.startRenderSpace,c),n(this.endRenderSpace,c),{points:r,normals:i}}}class f{constructor(e,t,s){this.startRenderSpace=e,this.endRenderSpace=t,this.renderSpatialReference=s,this.type="geodesic",this._start=n(),this._end=n(),this._pcpf=p(s),this._project=c(s,this._pcpf),this._projectIn(e,this._start),this._projectIn(t,this._end)}_projectIn(e,t){this._project?o(e,this.renderSpatialReference,t,this._pcpf):r(t,e)}eval(r,n,c){if(this._project)if(c){const e=u;h(this._start,this._end,r,n,e),i(R,n,e),o(n,this._pcpf,n,this.renderSpatialReference),o(R,this._pcpf,R,this.renderSpatialReference),t(c,R,n),s(c,c)}else d(this._start,this._end,r,n),o(n,this._pcpf,n,this.renderSpatialReference);else e(n,this._start,this._end,r),c&&(t(c,this._end,this._start),s(c,c));return n}createRenderGeometry(e,s){const r=[],i=[],n=(s,n)=>{const c=R;t(c,s,e),r.push([c[0],c[1],c[2]]),i.push([n[0],n[1],n[2]])},c=128+1&-2;for(let t=0;t<c;++t){const e=t/(c-1),r=m,i=u;this.eval(e,r),s.worldUpAtPosition(r,i),n(r,i)}return{points:r,normals:i}}}function l(e,t,s,r){switch(e){case"euclidean":return new _(t,s);case"geodesic":return new f(t,s,r)}}const m=n(),u=n(),R=n();export{_ as EuclideanSegment,f as GeodesicSegment,l as createSegment};
