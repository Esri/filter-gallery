/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../chunks/tslib.es6.js";import t from"../../../../../core/Handles.js";import{destroyMaybe as i,isNone as s,unwrap as a}from"../../../../../core/maybe.js";import{watch as o,syncAndInitial as r}from"../../../../../core/reactiveUtils.js";import{property as n}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/arrayUtils.js";import"../../../../../core/has.js";import"../../../../../core/accessorSupport/ensureType.js";import{subclass as l}from"../../../../../core/accessorSupport/decorators/subclass.js";import{clonePoint as m}from"../../../../../layers/graphics/hydratedFeatures.js";import{isPrimaryPointerAction as h}from"../../../analysis/support/measurementUtils.js";import{hideManipulatorWhileDragging as p}from"../../editingTools/dragEventPipeline3D.js";import u from"./AreaMeasurement3DView.js";import{createManipulatorDragEventPipeline as d}from"../../../../interactive/dragEventPipeline.js";import{InteractiveToolBase as c}from"../../../../interactive/InteractiveToolBase.js";import{createScreenPointFromEvent as y}from"../../../../support/screenUtils.js";let w=class extends c{constructor(e){super(e),this._handles=new t,this._tempPickRequest=new u.PickRequest,this.polygonState="initial",this.analysisView=null}initialize(){this.measurementView=new u({view:this.view,analysis:this.analysis,analysisView:this.analysisView,toolState:this,manipulators:this.manipulators,visible:this.visible}),this._setupManipulators(),this.startToolCreation(),this._handles.add(o((()=>this.state),(e=>{"measured"===e&&this.finishToolCreation()}),r))}destroy(){this.measurementView.destroy(),this._set("measurementView",null),this._handles=i(this._handles)}get state(){return 0===this.analysisView.path.numVertices?"ready":this.analysisView.validMeasurement&&"editing"!==this.polygonState?"measured":"measuring"}get cursor(){return"ready"===this.state||"drawing"===this.polygonState?"crosshair":null}finishMeasurement(){const e=this.analysisView.path;e.numVertices<3?(e.clear(),this.polygonState="initial"):(e.close(),this.polygonState="measured"),this.analysisView.cursorPoint=null}onShow(){this.measurementView.show()}onHide(){this.measurementView.hide()}onInputEvent(e){switch(e.type){case"immediate-double-click":this._handleImmediateDoubleClick(e);break;case"immediate-click":this._handleImmediateClick(e);break;case"pointer-move":this._handlePointerMove(e);break;case"drag":this._handleDrag(e);break;case"key-down":this._handleKeyDown(e)}}_setupManipulators(){const e=e=>`manipulator-${e}`,t=e=>e.events.on("grab-changed",(()=>{if(this.analysisView.validMeasurement){const e=this.manipulators.some((e=>e.manipulator.grabbing));this.polygonState=e?"editing":"measured"}})),i=(i,s)=>{this._handles.add([d(s,((e,t,i)=>{const s=p(e),o=a(this.measurementView.manipulatorToVertex(e));t.next(s).next(this.measurementView.screenToMap3D()).next((t=>{e.location=t.mapEnd,this.analysisView.path.setVertexPosition(o,m(t.mapEnd))}));const r=m(this.analysisView.path.getVertexPositionAsPoint(o));i.next(s).next((()=>{this.analysisView.path.setVertexPosition(o,r),e.location=r}))})),t(s)],e(i))},s=t=>{this._handles.remove(e(t))};this.manipulators.forEach((({id:e,manipulator:t})=>{i(e,t)})),this._handles.add([this.manipulators.on("after-add",(({item:{id:e,manipulator:t}})=>{i(e,t)})),this.manipulators.on("after-remove",(({item:{id:e}})=>{s(e)}))])}_handleImmediateDoubleClick(e){h(e)&&("drawing"===this.polygonState&&this.finishMeasurement(),e.stopPropagation())}_handleDrag(e){"editing"===this.polygonState&&e.stopPropagation()}_handleImmediateClick(e){if(!h(e))return;const t=y(e);if(this.active)switch(this.polygonState){case"initial":if(this._addVertexAt(t))return this.measurementView.cursorPoint=null,this.polygonState="drawing",void e.stopPropagation();break;case"drawing":{const i=this.measurementView.vertexHandleAt(t,e.pointerType);if(s(i)){if(this._addVertexAt(t))return this.measurementView.cursorPoint=null,void e.stopPropagation()}else 0===i.index&&(this.finishMeasurement(),e.stopPropagation());break}}"mouse"===e.pointerType&&this._hoverAt(t)}_handlePointerMove(e){if("mouse"===e.pointerType){const t=y(e);this._hoverAt(t)}}_handleKeyDown(e){"Enter"===e.key&&"drawing"===this.polygonState&&(this.finishMeasurement(),e.stopPropagation())}_hoverAt(e){if(this.measurementView.requiresCursorPoint){const t=this._pick(e);t.mapPoint&&(this.measurementView.cursorPoint=t.mapPoint)}else this.measurementView.cursorPoint=null}_addVertexAt(e){const t=this._pick(e);return!!t.mapPoint&&(this.analysisView.path.add(t.mapPoint),!0)}_pick(e){const t=this._tempPickRequest;return t.screenPoint=e,this.measurementView.pick(t)}};e([n({readOnly:!0})],w.prototype,"state",null),e([n()],w.prototype,"polygonState",void 0),e([n({readOnly:!0})],w.prototype,"cursor",null),e([n()],w.prototype,"measurementView",void 0),e([n({constructOnly:!0})],w.prototype,"view",void 0),e([n()],w.prototype,"analysis",void 0),e([n({constructOnly:!0})],w.prototype,"analysisView",void 0),w=e([l("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DTool")],w);const g=w;export{g as default};
