/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import t from"../../../../../core/Handles.js";import{destroyMaybe as i,isSome as e,isNone as s,unwrap as a}from"../../../../../core/maybe.js";import{whenOnce as n,watch as l,sync as r}from"../../../../../core/reactiveUtils.js";import{screenPointObjectToArray as o}from"../../../../../core/screenUtils.js";import{c as h}from"../../../../../chunks/vec3f64.js";import{MeasurementMode as u}from"../../../analysis/interfaces.js";import{createSphereManipulator as d}from"../../manipulatorUtils.js";import{screenToMap3D as _}from"../../editingTools/dragEventPipeline3D.js";import{copyParameter as c,pointToPointScreenDistance as p,resizeArray as y}from"../support/viewUtils.js";import{LaserlineVisualElement as g}from"../../visualElements/LaserlineVisualElement.js";import m from"../../../webgl-engine/lib/GeometryUtil.js";import{newIntersector as w}from"../../../webgl-engine/lib/Intersector.js";import{StoreResults as V,IntersectorType as v}from"../../../webgl-engine/lib/IntersectorInterfaces.js";import{ManipulatorCollection as L}from"../../../../interactive/ManipulatorCollection.js";const f={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:1,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5,handleRadiusHovered:10,handleRadiusMouse:10,handleRadiusTouch:25,pathLineColor:[1,.5,0,1],pathLineWidth:3,intersectingLineColor:[1,.2,0,1],perimeterLineColor:[1,.5,0,1],perimeterLineWidth:2,projectionLineColor:[1,.5,0,1],projectionLineWidth:2,projectionLineStippleSize:5,areaColor1:[1,.5,0,.5],areaColor2:[1,1,1,.5],fillColor:[1,.5,0,.5],lineSubdivisions:64,labelDistance:25};class b{constructor(t){var i,e,s;this.vertexManipulators=[],this._analysisView=null,this._analysisVisualization=null,this._destroyed=!1,this._mode=u.Auto,this._cursorPoint=null,this._lastDraggedVertex=null,this._laserLine=null,this._cursorManipulator=null,this._listenerHandles=null,this._tempHandlePosition=h(),this._analysis=t.analysis,this._analysisView=t.analysisView,this._toolState=t.toolState,this._manipulators=null!=(i=t.manipulators)?i:new L,this._view=t.view,this._mode=null!=(e=t.mode)?e:u.Auto,this._cursorPoint=null!=(s=t.cursorPoint)?s:null,this._style=c(f,t.style),this._intersector=w(this._view.state.viewingMode),this._intersector.options.store=V.MIN,this._analysisVisualization=this._analysisView.analysisVisualization;const a=d(this._view,this._style.handleColor,this._style.handleOpacity);a.available=!1,a.radius=this._style.handleRadius,a.interactive=!1,this._manipulators.add(a),this._cursorManipulator=a,this._laserLine=new g({view:this._view,attached:!0,style:{glowColor:this._style.laserLineGlowColor,glowWidth:this._style.laserLineGlowWidth,glowFalloff:this._style.laserLineGlowFalloff,innerColor:this._style.laserLineInnerColor,innerWidth:this._style.laserLineInnerWidth,globalAlpha:this._style.laserLineGlobalAlpha}}),this._analysisView.mode=this._mode,this._analysisView.cursorPoint=this._cursorPoint,this._updateVisibility(t.visible||!0)}destroy(){this._listenerHandles=i(this._listenerHandles),this._manipulators=i(this._manipulators),this._laserLine=i(this._laserLine),this._destroyed=!0}async whenMessages(){await n((()=>!this._analysisView.updating))}get destroyed(){return this._destroyed}get analysisVisualization(){return this._analysisVisualization}get analysisView(){return this._analysisView}get requiresCursorPoint(){return("initial"===this._toolState.polygonState||"drawing"===this._toolState.polygonState)&&this._toolState.active}get visible(){return this._analysis.visible}set visible(t){t?this.show():this.hide()}get mode(){return this._mode}set mode(t){this._destroyed||(this._mode=t,this._analysisView.mode=t)}get cursorPoint(){return this._cursorPoint}set cursorPoint(t){this._destroyed||(this._cursorPoint=t,this._analysisView.cursorPoint=t)}get lastDraggedVertex(){return this._lastDraggedVertex}set lastDraggedVertex(t){this._destroyed||(this._lastDraggedVertex=t,this._analysisView.lastDraggedVertex=t)}get testData(){const t=this._laserLine.testData;return{labels:this._analysisVisualization.testData.labels,laserLineRenderer:e(t)?{heightManifoldEnabled:t.heightManifoldEnabled,heightManifoldTarget:t.heightManifoldTarget,pointDistanceEnabled:t.pointDistanceEnabled,pointDistanceOrigin:t.pointDistanceOrigin,pointDistanceTarget:t.pointDistanceTarget,lineVerticalPlaneEnabled:t.lineVerticalPlaneEnabled}:{heightManifoldEnabled:!1,heightManifoldTarget:null,pointDistanceEnabled:!1,pointDistanceOrigin:null,pointDistanceTarget:null,lineVerticalPlaneEnabled:!1}}}show(){this._setVisibility(!0)}hide(){this._setVisibility(!1)}_setVisibility(t){this._destroyed||this._analysis.visible===t||this._updateVisibility(t)}_updateVisibility(t){this._analysis.visible=t,this._laserLine.visible=t,t?(this._initializeListeners(),this._updateAll(this._analysisVisualization.viewData)):(this._destroyListeners(),this.vertexManipulators.forEach((t=>{this._removeVertexManipulator(t.manipulator)})),this.vertexManipulators=[],this._view.cursor=null)}vertexHandleAt(t,i){const s=this._manipulators.intersect(t,i);return e(s)?s.manipulator.metadata:null}manipulatorToVertex(t){return t.metadata}pick(t){const i=this._view.spatialReference,e=o(t.screenPoint);this._view.sceneIntersectionHelper.intersectToolIntersectorScreen(e,this._intersector);const a=this._intersector.results.min,n=h();if(!a.getIntersectionPoint(n))return new b.PickResult;const l=this._view.renderCoordsHelper.fromRenderCoords(n,i);if(s(l))return new b.PickResult;const r=a.intersector===v.TERRAIN?"surface":"feature";return new b.PickResult(r,n,l)}overlappingHandles(t,i){return p(t,i,this._view)<=this._style.handleRadius}screenToMap3D(){return _(this._view)}_updateAll(t){this._analysis.visible&&(this._updateVertexManipulators(t),this._updateLaserLine())}_createVertexManipulator(){const t=d(this._view,this._style.handleColor,this._style.handleOpacity);t.radius=this._style.handleRadius;return{id:this._manipulators.add(t),manipulator:t}}_removeVertexManipulator(t){this._manipulators.remove(t)}_updateVertexManipulators(t){const i=this._analysisView.path?this._analysisView.path.vertices:[],s=this.vertexManipulators;y(s,i.length,(()=>this._createVertexManipulator()),(t=>this._removeVertexManipulator(t.manipulator))),s.forEach(((e,s)=>{e.manipulator.metadata=i[s],e.manipulator.renderLocation=t.positionsRenderCoords[s]})),"drawing"===this._toolState.polygonState&&e(this.cursorPoint)?(this._cursorManipulator.available=!0,this._cursorManipulator.location=this.cursorPoint):this._cursorManipulator.available=!1}_getFocusPoint(){const t=this.lastDraggedVertex;switch(this._toolState.polygonState){case"drawing":return e(this.cursorPoint)?this.cursorPoint:e(t)?this._analysisView.path.getVertexPositionAsPoint(t):a(this._analysisView.path.lastPoint);case"editing":return e(t)?this._analysisView.path.getVertexPositionAsPoint(t):null;default:return this.cursorPoint}}_updateLaserLine(){const t=this._style.laserLineEnabled&&"measured"!==this._toolState.polygonState&&this._toolState.active,i=this._getFocusPoint();if(t&&e(i)){const t=this._tempHandlePosition;this._view.renderCoordsHelper.toRenderCoords(i,t),this._laserLine.heightManifoldTarget=t}else this._laserLine.heightManifoldTarget=null}_initializeListeners(){this._listenerHandles=new t,this._listenerHandles.add([l((()=>this._toolState.polygonState),(()=>this._updateLaserLine())),l((()=>this._analysisVisualization.viewData),(()=>this._updateAll(this._analysisVisualization.viewData)),r),l((()=>({lastDraggedVertex:this._analysisView.lastDraggedVertex,cursorPoint:this._analysisView.cursorPoint})),(()=>this._updateLaserLine())),l((()=>this._toolState.active),(()=>this._updateAll(this._analysisVisualization.viewData)))])}_destroyListeners(){this._listenerHandles=i(this._listenerHandles)}}b._handleGeometry=m.createSphereGeometry(1,32,32),function(t){class i{}t.PickRequest=i;class e{constructor(t=null,i=null,e=null){this.type=t,this.scenePoint=i,this.mapPoint=e}}t.PickResult=e}(b||(b={}));const P=b;export{P as default};
