/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as i}from"../../../../../chunks/tslib.es6.js";import e from"../../../../../core/Accessor.js";import t from"../../../../../core/Handles.js";import{destroyMaybe as s,isSome as n,applySome as a,isNone as o}from"../../../../../core/maybe.js";import{whenOnce as r,watch as l,initial as h}from"../../../../../core/reactiveUtils.js";import{property as d}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/arrayUtils.js";import"../../../../../core/has.js";import"../../../../../core/accessorSupport/ensureType.js";import{subclass as p}from"../../../../../core/accessorSupport/decorators/subclass.js";import{c}from"../../../../../chunks/vec3f64.js";import{fromPoints as u}from"../../../../../geometry/support/lineSegment.js";import{MeasurementMode as g}from"../../../analysis/interfaces.js";import{ViewMode as y}from"../../../analysis/DirectLineMeasurement/interfaces.js";import{createSphereManipulator as m}from"../../manipulatorUtils.js";import{LaserlineVisualElement as _}from"../../visualElements/LaserlineVisualElement.js";const v={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:.75,laserLineGlobalAlpha:.75,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5};var b;!function(i){i.Manipulators="manipulators",i.AnalysisViewDestroyed="analysis-view-destroyed",i.AnalysisView="analysis-view"}(b||(b={}));let w=class extends e{constructor(i){super(i),this.params=v,this.analysisView=null,this.cursorPoint=null,this._visible=!1,this._laserLine=null,this.laserLineEnabled=!0,this._handles=new t,this._lastDraggedHandle=null}initialize(){this._laserLine=new _({view:this.view,attached:!0}),this._updateVisibility(this._visible),this._connectToAnalysisView()}destroy(){this._handles=s(this._handles),this._laserLine=s(this._laserLine)}async whenMessages(){await r((()=>!this.analysisView.updating))}get visible(){return this._visible}set visible(i){i?this.show():this.hide()}get testData(){const i=this._laserLine.testData,e=this.analysisView.testData;return{labels:null==e?void 0:e.labels,stripeLength:null==e?void 0:e.stripeLength,laserLineRenderer:{heightManifoldEnabled:!!n(i)&&i.heightManifoldEnabled,heightManifoldTarget:n(i)?i.heightManifoldTarget:null,pointDistanceEnabled:!!n(i)&&i.pointDistanceEnabled,pointDistanceOrigin:n(i)?i.pointDistanceOrigin:null,pointDistanceTarget:n(i)?i.pointDistanceTarget:null,lineVerticalPlaneEnabled:!!n(i)&&i.lineVerticalPlaneEnabled}}}get _cursorPosition(){const i=c();return a(this.cursorPoint,(e=>this.view.renderCoordsHelper.toRenderCoords(e,i))),i}get _startPosition(){const i=c();return a(this.analysis.startPoint,(e=>this.view.renderCoordsHelper.toRenderCoords(e,i))),i}get _endPosition(){const i=c();return a(this.analysis.endPoint,(e=>this.view.renderCoordsHelper.toRenderCoords(e,i))),i}get _laserLineParams(){const i=this._focusPosition,{active:e,lineState:t}=this.toolState,s=this.analysisView,n=this.laserLineEnabled&&!!i&&"measured"!==t&&e;if(!n||!this.visible||o(s)||s.destroyed)return{heightManifoldTarget:null,pointDistanceLine:null,lineVerticalPlaneSegment:null};const a=s.actualVisualizedMeasurement,r="local"!==this.view.viewingMode&&n&&!!this.analysis.startPoint&&"geodesic"===a,l=n&&s.viewMode===y.Triangle;return{heightManifoldTarget:"euclidean"===a?i:null,pointDistanceLine:r?this._pointDistanceLine:null,lineVerticalPlaneSegment:l?u(this._startPosition,this._endPosition):null}}get _focusPosition(){const{lineState:i}=this.toolState,e=this.analysisView,t=n(e)&&!e.destroyed&&e.measurementMode===g.Euclidean&&e.viewMode===y.Direct;switch(i){case"drawing":return t?this._startPosition:this.analysis.endPoint?this._endPosition:this._startPosition;case"editing":return t?"start"===this._lastDraggedHandle?this._endPosition:this._startPosition:"start"===this._lastDraggedHandle?this._startPosition:this._endPosition;default:return n(this.cursorPoint)?this._cursorPosition:null}}get _pointDistanceLine(){return{origin:"drawing"===this.toolState.lineState||"end"===this._lastDraggedHandle?this._startPosition:this._endPosition,target:this._focusPosition}}createManipulators(){const i=()=>{const i=m(this.view,this.params.handleColor,this.params.handleOpacity);return i.available=!1,i.radius=this.params.handleRadius,i},e=i(),t=i();n(this.analysis.startPoint)&&(e.location=this.analysis.startPoint,e.available=!0),n(this.analysis.endPoint)&&(t.location=this.analysis.endPoint,t.available=!0);const s=()=>{let i=this._lastDraggedHandle;e.grabbing&&!t.grabbing&&(i="start"),t.grabbing&&!e.grabbing&&(i="end"),e.grabbing||t.grabbing||(i=null),this._lastDraggedHandle=i},a=e.events.on("grab-changed",s),o=t.events.on("grab-changed",s);return this._handles.add([a,o],b.Manipulators),{start:e,end:t}}show(){this.destroyed||this._visible||this._updateVisibility(!0)}hide(){!this.destroyed&&this._visible&&this._updateVisibility(!1)}_connectToAnalysisView(){this._handles.remove(b.AnalysisView),this._handles.add([l((()=>a(this.analysisView,(i=>i.destroyed))),(i=>{i&&this._handles.remove(b.AnalysisView)}),h),l((()=>["measured"===this.toolState.lineState,this.analysisView]),(([i,e])=>{n(e)&&!e.destroyed&&(e.allowVisualElementsOrientationChange=!i)}),h),l((()=>this._laserLineParams),(i=>{const e=this._laserLine;e.heightManifoldTarget=i.heightManifoldTarget,e.pointDistanceLine=i.pointDistanceLine,e.lineVerticalPlaneSegment=i.lineVerticalPlaneSegment}),h)],b.AnalysisView)}_updateVisibility(i){this.constructed&&(this._visible=i,this.analysis.visible=i,i?this._laserLine.style={innerColor:this.params.laserLineInnerColor,innerWidth:this.params.laserLineInnerWidth,glowColor:this.params.laserLineGlowColor,glowWidth:this.params.laserLineGlowWidth,glowFalloff:this.params.laserLineGlowFalloff,globalAlpha:this.params.laserLineGlobalAlpha}:this.view.cursor=null,this._laserLine.visible=i)}};i([d()],w.prototype,"view",void 0),i([d()],w.prototype,"params",void 0),i([d()],w.prototype,"analysis",void 0),i([d({constructOnly:!0})],w.prototype,"analysisView",void 0),i([d()],w.prototype,"cursorPoint",void 0),i([d()],w.prototype,"toolState",void 0),i([d()],w.prototype,"visible",null),i([d()],w.prototype,"testData",null),i([d()],w.prototype,"_visible",void 0),i([d()],w.prototype,"_laserLine",void 0),i([d()],w.prototype,"laserLineEnabled",void 0),i([d()],w.prototype,"_cursorPosition",null),i([d()],w.prototype,"_startPosition",null),i([d()],w.prototype,"_endPosition",null),i([d()],w.prototype,"_lastDraggedHandle",void 0),i([d()],w.prototype,"_laserLineParams",null),i([d()],w.prototype,"_focusPosition",null),i([d()],w.prototype,"_pointDistanceLine",null),w=i([p("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DView")],w);export{w as DirectLineMeasurement3DView};
