/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../chunks/tslib.es6.js";import{handlesGroup as t,makeHandle as i}from"../../../../../core/handleUtils.js";import{isSome as s,destroyMaybe as r}from"../../../../../core/maybe.js";import{init as a}from"../../../../../core/watchUtils.js";import{property as n}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/arrayUtils.js";import"../../../../../core/has.js";import"../../../../../core/accessorSupport/ensureType.js";import{subclass as l}from"../../../../../core/accessorSupport/decorators/subclass.js";import{getEffectiveElevationMode as o}from"../../../../../support/elevationInfoUtils.js";import c from"../../../../../symbols/support/ElevationInfo.js";import{SnappingVisualizer3D as h}from"../../SnappingVisualizer3D.js";import{settings as p}from"../settings.js";import{OutlineVisualElement as u}from"../../visualElements/OutlineVisualElement.js";import{VerticesVisualElement as m}from"../../visualElements/VerticesVisualElement.js";import{GraphicState as v}from"../../../layers/graphics/GraphicState.js";import{DrawGraphicTool as d,geometryTypeToDrawOperationGeometryType as f}from"../../../../draw/DrawGraphicTool.js";import{DrawOperation as V}from"../../../../draw/DrawOperation.js";import{SceneDrawSurface as w,ElevationDrawSurface as E}from"../../../../draw/drawSurfaces.js";let y=class extends d{constructor(e){super(e),this._activeVertexVisualElement=null,this._createGraphicState=null,this._outlineVisualElement=null,this._verticesVisualElement=null,this.geometryType=null,this.type="draw-3d"}initialize(){const{mode:e,offset:t}=this.elevationInfo;this.internalGraphicsLayer.elevationInfo=new c({mode:e,offset:t})}normalizeCtorArgs(e){if(!e.elevationInfo){var t;const i=null==(t=e.hasZ)||t;return{...e,elevationInfo:{mode:i?"absolute-height":"on-the-ground",offset:0}}}return e}initializeGraphic(e){return this._createGraphicState=new v({graphic:e}),t([this.view.maskOccludee(e),this.view.trackGraphicState(this._createGraphicState),a(this._createGraphicState,"isDraped",(e=>{s(this._outlineVisualElement)&&(this._outlineVisualElement.isDraped=e)}))])}makeDrawOperation(){return new V({view:this.view,manipulators:this.manipulators,geometryType:f(this.geometryType),drawingMode:this.mode,hasZ:this.hasZ,defaultZ:this.defaultZ,snapToSceneEnabled:this.snapToScene,drawSurface:new w(this.view,this.elevationInfo,[this.internalGraphicsLayer]),elevationDrawSurface:new E(this.elevationInfo,this.defaultZ,this.view,this.internalGraphicsLayer),hasM:!1,elevationInfo:this.elevationInfo,snappingManager:this.snappingManager,snappingVisualizer:new h})}onActiveVertexChanged(e){return s(this._activeVertexVisualElement)?(this._activeVertexVisualElement.vertices=[e],null):(this._activeVertexVisualElement=new m({view:this.view,spatialReference:this.view.spatialReference,vertices:[e],elevationInfo:this.internalGraphicsLayer.elevationInfo,renderOccluded:p.reshapeManipulators.vertex.renderOccluded,attached:!1}),this._activeVertexVisualElement.color=p.colorToVec4(p.reshapeManipulators.selected.color),this._activeVertexVisualElement.attached=!0,i((()=>{this._activeVertexVisualElement=r(this._activeVertexVisualElement)})))}onOutlineChanged(e){if(s(this._outlineVisualElement))return this._outlineVisualElement.geometry=e,null;const t=this.internalGraphicsLayer.elevationInfo;return this._outlineVisualElement=new u({view:this.view,geometry:e,elevationInfo:t,isDraped:s(this._createGraphicState)?this._createGraphicState.isDraped:"on-the-ground"===o(this.hasZ,t),attached:!1}),p.visualElements.lineGraphics.outline.apply(this._outlineVisualElement),p.visualElements.lineGraphics.shadowStyle.apply(this._outlineVisualElement),this._outlineVisualElement.attached=!0,this._outlineVisualElement.laserlineEnabled=!0,i((()=>{this._outlineVisualElement=r(this._outlineVisualElement)}))}onRegularVerticesChanged(e){return s(this._verticesVisualElement)?(this._verticesVisualElement.vertices=e,null):(this._verticesVisualElement=new m({view:this.view,spatialReference:this.view.spatialReference,vertices:e,elevationInfo:this.internalGraphicsLayer.elevationInfo,renderOccluded:p.reshapeManipulators.vertex.renderOccluded,attached:!1}),this._verticesVisualElement.attached=!0,i((()=>{this._verticesVisualElement=r(this._verticesVisualElement)})))}};e([n({constructOnly:!0})],y.prototype,"elevationInfo",void 0),e([n({constructOnly:!0})],y.prototype,"geometryType",void 0),e([n({readOnly:!0})],y.prototype,"type",void 0),e([n({constructOnly:!0,nonNullable:!0})],y.prototype,"view",void 0),y=e([l("esri.views.3d.interactive.editingTools.draw.DrawGraphicTool3D")],y);export{y as DrawGraphicTool3D};
