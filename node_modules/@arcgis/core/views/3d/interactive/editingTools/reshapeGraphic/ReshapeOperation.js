/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../chunks/tslib.es6.js";import"../../../../../core/has.js";import t from"../../../../../core/Evented.js";import{HandleOwner as i}from"../../../../../core/HandleOwner.js";import a from"../../../../../core/Handles.js";import{handlesGroup as n,destroyHandle as r}from"../../../../../core/handleUtils.js";import{destroyMaybe as o,isSome as s,isNone as l,unwrap as p,removeMaybe as h}from"../../../../../core/maybe.js";import{init as d}from"../../../../../core/watchUtils.js";import{property as u}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/arrayUtils.js";import"../../../../../core/accessorSupport/ensureType.js";import{subclass as c}from"../../../../../core/accessorSupport/decorators/subclass.js";import{I as m}from"../../../../../chunks/mat4f64.js";import{l as g,f as _,e as f,s as v,b as M,a as y}from"../../../../../chunks/vec3.js";import{f as x,c as O}from"../../../../../chunks/vec3f64.js";import E from"../../../../../geometry/Polyline.js";import{makeDehydratedPoint as G}from"../../../../../layers/graphics/dehydratedFeatures.js";import{getGraphicEffectiveElevationInfo as b}from"../../../../../support/elevationInfoUtils.js";import{isVolumetricSymbol as S}from"../../../../../symbols/support/utils.js";import{Manipulator3D as I}from"../../Manipulator3D.js";import{createManipulatorMaterial as V,createManipulatorOutlineMaterial as H,placeAtGraphic as w}from"../../manipulatorUtils.js";import{SnappingVisualizer3D as A}from"../../SnappingVisualizer3D.js";import{screenToRenderPlaneFromEvent as P,convertToMapCoordinates as D,screenToMapXYAtLocation as L,screenToMapXYForGraphicAtLocation as N}from"../dragEventPipeline3D.js";import{ManipulatorType as U}from"../ManipulatorType.js";import{canMoveZ as k}from"../manipulatorUtils.js";import{settings as j,colors as T}from"../settings.js";import{createVisualElements as R}from"../visualElementUtils.js";import{DISC_RADIUS_SMALL as F}from"../manipulations/config.js";import{MoveManipulation as C}from"../manipulations/MoveManipulation.js";import{shapeOrientation as z}from"../manipulations/moveUtils.js";import{MoveXYGraphicManipulation as Z}from"../manipulations/MoveXYGraphicManipulation.js";import{createEdgeOffsetIntersectionPlane as X,createEdgeOffsetOperation as Y,edgeOffsetRotationMatrix as q,screenEdgeLengthSquared as W}from"./edgeOffsetUtils.js";import{OutlineVisualElement as K}from"../../visualElements/OutlineVisualElement.js";import{GraphicState as B}from"../../../layers/graphics/GraphicState.js";import J from"../../../webgl-engine/lib/GeometryUtil.js";import{MouseButton as Q}from"../../../../input/IViewEvents.js";import{addMapDelta as $,createManipulatorDragEventPipeline as ee,dragAtLocation as te,addScreenDelta as ie}from"../../../../interactive/dragEventPipeline.js";import{ManipulatorStateFlags as ae,ManipulatorStateCustomFlags as ne}from"../../../../interactive/interfaces.js";import{EditGeometryOperations as re}from"../../../../interactive/editGeometry/EditGeometryOperations.js";import{AccumulationBehaviour as oe}from"../../../../interactive/editGeometry/interfaces.js";import{SnappingContext as se}from"../../../../interactive/snapping/SnappingContext.js";import{SnappingPipeline as le}from"../../../../interactive/snapping/SnappingDragPipelineStep.js";let pe=class extends(t.EventedMixin(i)){constructor(e){super(e),this._vertexManipulatorMaterial=V(j.colorToVec4(j.reshapeManipulators.vertex.color),j.reshapeManipulators.vertex.renderOccluded),this._vertexManipulatorOutlineMaterial=H(j.colorToVec4(j.reshapeManipulators.vertex.outlineColor),j.reshapeManipulators.vertex.renderOccluded),this._vertexManipulatorHoverOutlineMaterial=H(j.colorToVec4(j.reshapeManipulators.vertex.hoverOutlineColor),j.reshapeManipulators.vertex.renderOccluded),this._edgeManipulatorMaterial=V(j.colorToVec4(j.reshapeManipulators.edge.color),j.reshapeManipulators.edge.renderOccluded),this._edgeManipulatorOutlineMaterial=H(j.colorToVec4(j.reshapeManipulators.edge.outlineColor),j.reshapeManipulators.edge.renderOccluded),this._edgeOffsetManipulatorMaterial=V(j.colorToVec4(j.reshapeManipulators.edgeOffset.color),j.reshapeManipulators.edgeOffset.renderOccluded,!1),this._edgeOffsetManipulatorHoverMaterial=V(j.colorToVec4(j.reshapeManipulators.edgeOffset.hoverColor),j.reshapeManipulators.edgeOffset.renderOccluded,!1),this._selectedManipulatorMaterial=V(j.colorToVec4(j.reshapeManipulators.selected.color),j.reshapeManipulators.selected.renderOccluded),this._selectedManipulatorOutlineMaterial=H(j.colorToVec4(j.reshapeManipulators.selected.outlineColor),j.reshapeManipulators.selected.renderOccluded),this._selectedManipulatorHoverOutlineMaterial=H(j.colorToVec4(j.reshapeManipulators.selected.hoverOutlineColor),j.reshapeManipulators.selected.renderOccluded),this._selectedIndex=0,this._vertexManipulatorGeometry=null,this._vertexManipulatorOutlineGeometry=null,this._edgeManipulatorGeometry=null,this._edgeManipulatorOutlineGeometry=null,this._edgeOffsetManipulatorGeometryInside=null,this._edgeOffsetManipulatorGeometryOutside=null,this._manipulatorHandles=new a,this._manipulatorInfos=[],this._editGeometryOperations=null,this._graphicMoveManipulation=null,this._moveManipulation=null,this._numGrabbing=0,this._numDragging=0,this._reshapeEventState=_e.NONE,this._outlineVisualElement=null,this.tool=null,this.outputGeometry=null,this._snappingPipeline=new le,this._snappingPipelineHandle=new le,this._vertexLaserLineVisualElement=null}initialize(){const e=new B({graphic:this.graphic});this._graphicState=e,this.handles.add([e.watch("displaying",(e=>{for(const t of this._manipulatorInfos)t.manipulator.available=e})),this.view.trackGraphicState(e)])}destroy(){this._editGeometryOperations=o(this._editGeometryOperations),this._moveManipulation=o(this._moveManipulation),this._graphicMoveManipulation=o(this._graphicMoveManipulation),this._manipulatorHandles=o(this._manipulatorHandles),this.manipulators.removeAll(),this._manipulatorInfos=[],this._resetGrabbingDragging()}get inputGeometry(){return s(this._editGeometryOperations)?this._editGeometryOperations.data.geometry:null}set inputGeometry(e){this._recreateEditGeometryAndManipulators(e)}get updating(){return this.updatingHandles.updating}get manipulators(){return this.tool.manipulators}get view(){return this.tool.view}get graphic(){return this.tool.graphic}get enableZShape(){return this.tool.enableZShape}get enableZVertex(){return this.tool.enableZVertex}get enableMoveGraphic(){return this.tool.enableMoveGraphic}get enableMidpoints(){return this.tool.enableMidpoints}get enableEdgeOffset(){return this.tool.enableEdgeOffset}removeSelectedVertices(){const e=this._manipulatorInfos.filter((e=>e.manipulator.selected&&"vertex"===e.handle.type));this._removeVertices(e)}manipulatorSelectionChanged(){this.emit("manipulators-changed")}_removeManipulators(){this._moveManipulation=o(this._moveManipulation),this._graphicMoveManipulation=o(this._graphicMoveManipulation),this._manipulatorHandles.removeAll(),this.manipulators.removeAll(),this._manipulatorInfos=[]}_resetGrabbingDragging(){this._numGrabbing=0,this._numDragging=0}_createManipulators(){if(l(this._editGeometryOperations))return;const e=b(this.graphic);for(const t of this._editGeometryOperations.data.components){for(const i of t.vertices)this._createVertexOrEdgeManipulator(i,e);for(const i of t.edges)this._createVertexOrEdgeManipulator(i,e)}this._createGraphicMoveManipulators(e)}get canRedo(){return s(this._editGeometryOperations)&&this._editGeometryOperations.canRedo}get canUndo(){return s(this._editGeometryOperations)&&this._editGeometryOperations.canUndo}redo(){if(l(this._editGeometryOperations))return null;const e=this._editGeometryOperations.redo();return s(e)&&(this.outputGeometry=this._editGeometryOperations.data.geometry,this._recreateManipulators()),e}undo(){if(l(this._editGeometryOperations))return null;this.emit("undo");const e=this._editGeometryOperations.undo();return s(e)&&(this.outputGeometry=this._editGeometryOperations.data.geometry,this._recreateManipulators()),e}_recreateManipulators(){this._removeManipulators(),this._resetGrabbingDragging(),this._createManipulators()}_recreateEditGeometryAndManipulators(e=this.inputGeometry){this._removeManipulators(),this._resetGrabbingDragging(),l(e)||(o(this._editGeometryOperations),this._editGeometryOperations=re.fromGeometry(e,this.view.state.viewingMode),this._createManipulators())}_perGraphicManipulatorDragAction(e,t){if("end"===t.action)return;let i=0;const a=[],n=this._manipulatorInfos.some((e=>"vertex"===e.handle.type&&e.manipulator.selected)),r=e===fe.SELECTED_OR_ALL&&n;for(const o of this._manipulatorInfos)de(o)&&(o.manipulator.grabbing||r&&!o.manipulator.selected||a.push(o),i++);if(0===a.length)return;this._moveVertices(a,t);if(a.length===i){if(this._updateEventState(_e.MOVING),this.destroyed)return;this.emit("move",{type:"move",dx:t.screenDeltaX,dy:t.screenDeltaY,mover:this.graphic})}else{if(this._updateEventState(_e.RESHAPING),this.destroyed)return;this.emit("reshape",{type:"reshape",mover:this.graphic})}}_isMultiVertexSelection(){let e=0;for(const t of this._manipulatorInfos)de(t)&&t.manipulator.selected&&e++;return e>1}_perVertexManipulatorDragAction(e){if(this._updateEventState(_e.RESHAPING),this.destroyed)return;const{mapDeltaX:t,mapDeltaY:i,mapDeltaZ:a}=e;if(!t&&!i&&!a)return;const n=[];for(const r of this._manipulatorInfos)de(r)&&(r.manipulator.selected&&!r.manipulator.grabbing||r===e.info)&&n.push(r);this._moveVertices(n,e,oe.ACCUMULATE_STEPS),this.emit("reshape",{type:"reshape",mover:this.graphic})}_updateEventState(e){if(e===this._reshapeEventState)return!1;switch(e){case _e.NONE:if(0!==this._numGrabbing||0!==this._numDragging)return!1;switch(this._reshapeEventState){case _e.MOVING:this.emit("move",{type:"move-stop",dx:0,dy:0,mover:this.graphic});break;case _e.RESHAPING:this.emit("reshape",{type:"reshape-stop",mover:this.graphic})}break;case _e.MOVING:switch(this._reshapeEventState){case _e.NONE:this.emit("move",{type:"move-start",dx:0,dy:0,mover:this.graphic});break;case _e.RESHAPING:this.emit("reshape",{type:"reshape-stop",mover:this.graphic}),this.destroyed||this.emit("move",{type:"move-start",dx:0,dy:0,mover:this.graphic})}break;case _e.RESHAPING:switch(this._reshapeEventState){case _e.NONE:this.emit("reshape",{type:"reshape-start",mover:this.graphic});break;case _e.MOVING:this.emit("move",{type:"move-stop",dx:0,dy:0,mover:this.graphic}),this.destroyed||this.emit("reshape",{type:"reshape-start",mover:this.graphic})}}if(this.destroyed)return!1;const t=this._reshapeEventState!==e;return this._reshapeEventState=e,t}_createGraphicMoveManipulators(e){if(this._graphicMoveManipulation=new Z({tool:this.tool,view:this.view,graphicState:this._graphicState}),this.enableMoveGraphic){let e=null;this._manipulatorHandles.add(this._graphicMoveManipulation.createDragPipeline(((t,i,a)=>{i.next((e=>this._trackNumDragging(e))).next((t=>("start"===t.action&&(e=p(this._editGeometryOperations).createUndoGroup()),t))).next((t=>{this._perGraphicManipulatorDragAction(fe.ALL,t),"end"===t.action&&(e=h(e))})),a.next(this._cancelDragOperation((()=>e=h(e))))})))}else this._graphicMoveManipulation.forEachManipulator((e=>{e.grabbable=!1,e.cursor=null}));this._graphicMoveManipulation.forEachManipulator((e=>this._manipulatorHandles.add([this._watchAndUpdateGrabState(e,!1),e.events.on("immediate-click",(e=>{this._manipulatorInfos.some((e=>e.manipulator.selected))?this._clearSelection():this.emit("immediate-click",{...e,graphic:this.graphic}),e.stopPropagation()}))]))),this._moveManipulation=new C({tool:this.tool,view:this.view,xyAvailable:!0,xyAxisAvailable:!0,zAvailable:this.enableZShape&&k(this.graphic),snapToScene:!1,radius:C.radiusForSymbol(this.graphic.symbol)}),this._moveManipulation.forEachManipulator((e=>{this.handles.add([this._watchAndUpdateGrabState(e,!1),e.events.on("immediate-click",(t=>{this._moveManipulation.zManipulation.hasManipulator(e)||this._manipulatorInfos.some((e=>e.manipulator.selected))||this.emit("immediate-click",{...t,graphic:this.graphic}),t.stopPropagation()}))])})),this._moveManipulation.elevationInfo={mode:"absolute-height",offset:0};const t=p(this.graphic.geometry).spatialReference;this.handles.add([this._moveManipulation.createDragPipeline(((t,i,a,n,r)=>{const o=a.next((e=>this._trackNumDragging(e))).next((e=>{const t=this._manipulatorInfos.filter((e=>de(e)&&e.manipulator.selected));return e.manipulatorType===U.TRANSLATE_XY&&1===t.length?{...e,info:t[0],snapOrigin:t[0].handle.pos}:{...e,info:null}})).next(this._snappingPipelineHandle.createSnapDragEventPipelineStep({predicate:e=>!!e.info,cancel:n,snappingManager:this.tool.snappingManager,snappingContext:new se({editGeometryOperations:p(this._editGeometryOperations),elevationInfo:e,pointer:r,excludeFeature:this.graphic,visualizer:new A}),updatingHandles:this.updatingHandles}),this._snappingPipelineHandle.next).next($()).next((e=>(this._perGraphicManipulatorDragAction(fe.SELECTED_OR_ALL,e),e)));return n.next(this._cancelDragOperation()),o}),e,t,this.graphic),d(this._graphicState,"displaying",(()=>{this._updateMoveManipulationPosition()})),this._graphicState.on("changed",(()=>this._updateMoveManipulationPosition())),d(this._graphicState,"isDraped",(()=>{const e="align-move-manipulation";this._graphicState.isDraped?this.handles.add(this.view.elevationProvider.on("elevation-change",(()=>this._updateMoveManipulationPosition())),e):this.handles.remove(e)}))]),this._updateMoveManipulationPosition();const i=R({view:this.view,graphic:this.graphic,forEachManipulator:e=>{if(!this.destroyed){s(this._graphicMoveManipulation)&&this._graphicMoveManipulation.forEachManipulator(e);for(const t of this._manipulatorInfos)e(t.manipulator,U.TRANSLATE_XY);this._moveManipulation.forEachManipulator(e)}},onManipulatorsChanged:e=>this.on("manipulators-changed",e)});s(i)&&(this._outlineVisualElement=i.visualElement instanceof K?i.visualElement:null),s(this._outlineVisualElement)&&this._manipulatorHandles.add([this._outlineVisualElement.events.on("attachment-origin-changed",(()=>{this._graphicState.isDraped||this._updateMoveManipulationPosition()})),this._graphicState.watch("isDraped",(()=>this._updateMoveManipulationPosition()))]),this._manipulatorHandles.add(i)}_createEdgeOffsetManipulator(e,t=b(this.graphic)){const i=j.reshapeManipulators.edgeOffset,a=i.size/2,r=a+i.collisionPadding;if(l(this._edgeOffsetManipulatorGeometryInside)||l(this._edgeOffsetManipulatorGeometryOutside)){const e=a/r,t=e*Math.sqrt(3)/2;this._edgeOffsetManipulatorGeometryInside=J.createExtrudedTriangle(t,e/2,e/2,i.height,i.offset),this._edgeOffsetManipulatorGeometryOutside=J.createExtrudedTriangle(-t,e/2,e/2,i.height,-i.offset)}const o=[{geometry:this._edgeOffsetManipulatorGeometryInside,material:this._edgeOffsetManipulatorMaterial,stateMask:ae.Unfocused},{geometry:this._edgeOffsetManipulatorGeometryInside,material:this._edgeOffsetManipulatorHoverMaterial,stateMask:ae.Focused},{geometry:this._edgeOffsetManipulatorGeometryOutside,material:this._edgeOffsetManipulatorMaterial,stateMask:ae.Unfocused},{geometry:this._edgeOffsetManipulatorGeometryOutside,material:this._edgeOffsetManipulatorHoverMaterial,stateMask:ae.Focused}],p=new I({view:this.view,renderObjects:o,elevationInfo:"on-the-ground"!==t.mode||S(this.graphic.symbol)?{mode:"absolute-height",offset:0}:t,worldOriented:!1,focusMultiplier:1,radius:r,available:!(!this.graphic.visible||!this.graphic.layer.visible),collisionType:{type:"disc",direction:x(0,0,1)},collisionPriority:1}),h=new I({view:this.view,renderObjects:[],worldSized:!0,worldOriented:!1,available:!(!this.graphic.visible||!this.graphic.layer.visible),collisionPriority:-10,cursor:this.enableMoveGraphic?"move":"default"}),d={manipulator:p,handle:e,locationUpdateHandle:null,type:"edge",selectedIndex:0,edgeManipulator:h,elevationInfo:t,visibilityHandle:null};this._autoHideEdgeOffsetManipulator(d,i.minSquaredEdgeLength),this._updateEdgeOffsetManipulator(d);const u=this._getManipulatorInfoFromHandle(d.handle.leftVertex).manipulator.events.on("location-update",(()=>this._updateEdgeOffsetManipulator(d))),c=this._getManipulatorInfoFromHandle(d.handle.rightVertex).manipulator.events.on("location-update",(()=>this._updateEdgeOffsetManipulator(d)));d.locationUpdateHandle=n([u,c]),this._manipulatorHandles.add(d.locationUpdateHandle,p),this._manipulatorHandles.add([this._watchAndUpdateGrabState(p,!0),this._watchAndUpdateGrabState(h,!0)],p),this._manipulatorHandles.add(ee(p,this._createEdgeOffsetPipeline(d,t)),p),this._manipulatorHandles.add(ee(h,((e,i,a,n)=>{if("touch"===n){this._createEdgeOffsetPipeline(d,t)(e,i,a)}else if(this.enableMoveGraphic){const n=this.graphic,r=s(n.geometry)?n.geometry.spatialReference:null;i.next((e=>this._trackNumDragging(e))).next(te(this.view,e.elevationAlignedLocation)).next(L(this.view,e.elevationAlignedLocation,t,r,n)).next(ie()).next($()).next((e=>this._perGraphicManipulatorDragAction(fe.ALL,e))),a.next(this._cancelDragOperation())}})),p);const m=e=>{this._manipulatorInfos.some((e=>e.manipulator.selected))?this._clearSelection():this.emit("immediate-click",{...e,graphic:this.graphic}),e.stopPropagation()};return this._manipulatorHandles.add([p.events.on("immediate-click",m),h.events.on("immediate-click",m)],p),this._manipulatorInfos.push(d),this.manipulators.add(p),this.manipulators.add(h),this.emit("manipulators-changed"),d}_autoHideEdgeOffsetManipulator(e,t){const i=e.manipulator,a=e.edgeManipulator,r=()=>{h(e.visibilityHandle);const r=W(this._getManipulatorInfoFromHandle(e.handle.leftVertex).manipulator.renderLocation,this._getManipulatorInfoFromHandle(e.handle.rightVertex).manipulator.renderLocation,this.view.state.camera)<t;(!i.focused&&!a.focused||r)&&(i.grabbable=!r,a.grabbable=!r,e.visibilityHandle=n([i.disableDisplay(),{remove:()=>{i.grabbable=!0,a.grabbable=this.enableMoveGraphic}}]))};this._manipulatorHandles.add([i.events.on("focus-changed",r),a.events.on("focus-changed",r),{remove:()=>{h(e.visibilityHandle),this.manipulators.remove(a)}}],i),r()}_updateEdgeOffsetManipulator(e){this._updateManipulatorPosition(e);const t=p(this._editGeometryOperations).data.coordinateHelper,i=X(this.view,e.manipulator.elevationAlignedLocation,Y(t,e.handle,p(e.manipulator.elevationInfo))),a=this._getManipulatorInfoFromHandle(e.handle.leftVertex).manipulator.renderLocation,n=this._getManipulatorInfoFromHandle(e.handle.rightVertex).manipulator.renderLocation,r=s(i)?q(i,a,n):m;e.manipulator.modelTransform=r,e.edgeManipulator.elevationAlignedLocation=e.manipulator.elevationAlignedLocation,e.edgeManipulator.modelTransform=r;const o=g(_(me,a,n))/2;e.edgeManipulator.collisionType={type:"line",paths:[[[-o,0,0],[o,0,0]]]}}_createEdgeOffsetPipeline(e,t){return(i,a,n)=>{this._clearSelection();const{step:r,cleanup:o}=this._initializeEdgeOffset(e,t);a.next((e=>this._trackNumDragging(e))).next(te(this.view,i.elevationAlignedLocation)).next(r).next(P(this.view)).next(D(this.view,p(this._editGeometryOperations).data.spatialReference)).next($()).next(this._applyEdgeOffsetStep(e)).next((e=>{"end"===e.action&&o()})),n.next((e=>(o(),e))).next(this._cancelDragOperation())}}_initializeEdgeOffset(e,t){const i=p(this._editGeometryOperations),a=Y(i.data.coordinateHelper,e.handle,t),o=i.createUndoGroup(),s=X(this.view,e.manipulator.elevationAlignedLocation,a);a.requiresSplitEdgeLeft&&this._splitEdgeManipulator(this._getManipulatorInfoFromHandle(e.handle.leftVertex.leftEdge),1),a.requiresSplitEdgeRight&&this._splitEdgeManipulator(this._getManipulatorInfoFromHandle(e.handle.rightVertex.rightEdge),0);const d=()=>new E({paths:[[e.handle.leftVertex.pos,e.handle.rightVertex.pos]],spatialReference:p(this._editGeometryOperations).data.spatialReference}),u=new K({view:this.view,isDraped:this._graphicState.isDraped,geometry:d(),elevationInfo:e.elevationInfo,width:j.visualElements.lineGraphics.outline.width,color:j.colorToVec4(T.main),attached:!0});let c;const m=()=>{this._cleanEdgeOffsetCollapsedEdges(e),c=h(c)},g=this.on("undo",m);return c=n([r(u),this._graphicState.watch("isDraped",(e=>u.isDraped=e)),this._graphicState.on("changed",(()=>u.geometry=d())),o,g]),{step:e=>l(a)||l(s)?(m(),null):{...e,operation:a,plane:s},cleanup:m}}_applyEdgeOffsetStep(e){return t=>{if(this.destroyed||l(t.operation))return t;this._updateEventState(_e.RESHAPING);const{mapDeltaX:i,mapDeltaY:a,mapDeltaZ:n}=t;return(i||a||n)&&(this._offsetEdge(e,t),this.emit("reshape",{type:"reshape",mover:this.graphic})),t}}_cleanEdgeOffsetCollapsedEdges(e){var t,i;const a=null==(t=e.handle.leftVertex.leftEdge)?void 0:t.leftVertex,n=e.handle.leftVertex,r=null==(i=e.handle.rightVertex.rightEdge)?void 0:i.rightVertex,o=e.handle.rightVertex,s=p(this._editGeometryOperations).data.coordinateHelper,l=1e-6,h=[];a&&s.distance(a.pos,n.pos)<l&&h.push(this._getManipulatorInfoFromHandle(n)),(s.distance(n.pos,o.pos)<l||r&&s.distance(r.pos,o.pos)<l)&&h.push(this._getManipulatorInfoFromHandle(o)),h.length&&this._removeVertices(h)}_computeVertexManipulatorSizeAndOutline(e){const t=e.size/2,i=t+e.collisionPadding;return{size:t/i,outlineSize:(t+e.outlineSize)/i}}_createVertexOrEdgeManipulator(e,t=b(this.graphic)){if("edge"===e.type){if(this.enableEdgeOffset)return this._createEdgeOffsetManipulator(e,t);if(!this.enableMidpoints)return null}if(l(this._vertexManipulatorGeometry)||l(this._vertexManipulatorOutlineGeometry)){const{size:e,outlineSize:t}=this._computeVertexManipulatorSizeAndOutline(j.reshapeManipulators.vertex);this._vertexManipulatorGeometry=J.createSphereGeometry(e,16,16),this._vertexManipulatorOutlineGeometry=J.createSphereGeometry(t,16,16)}if(l(this._edgeManipulatorGeometry)||l(this._edgeManipulatorOutlineGeometry)){const{size:e,outlineSize:t}=this._computeVertexManipulatorSizeAndOutline(j.reshapeManipulators.edge);this._edgeManipulatorGeometry=J.createSphereGeometry(e,16,16),this._edgeManipulatorOutlineGeometry=J.createSphereGeometry(t,16,16)}const i=s(this.graphic.geometry)&&"point"===this.graphic.geometry.type?[]:[{geometry:this._vertexManipulatorGeometry,material:this._vertexManipulatorMaterial,stateMask:ge.Vertex|ae.Unselected},{geometry:this._vertexManipulatorOutlineGeometry,material:this._vertexManipulatorOutlineMaterial,stateMask:ge.Vertex|ae.Unfocused|ae.Unselected},{geometry:this._vertexManipulatorOutlineGeometry,material:this._vertexManipulatorHoverOutlineMaterial,stateMask:ge.Vertex|ae.Focused|ae.Unselected},{geometry:this._vertexManipulatorGeometry,material:this._selectedManipulatorMaterial,stateMask:ae.Selected},{geometry:this._vertexManipulatorOutlineGeometry,material:this._selectedManipulatorOutlineMaterial,stateMask:ae.Selected|ae.Unfocused},{geometry:this._vertexManipulatorOutlineGeometry,material:this._selectedManipulatorHoverOutlineMaterial,stateMask:ae.Selected|ae.Focused}];this.enableMidpoints&&i.push({geometry:this._edgeManipulatorGeometry,material:this._vertexManipulatorMaterial,stateMask:ge.Edge|ae.Focused|ae.Unselected},{geometry:this._edgeManipulatorOutlineGeometry,material:this._vertexManipulatorHoverOutlineMaterial,stateMask:ge.Edge|ae.Focused|ae.Unselected},{geometry:this._edgeManipulatorGeometry,material:this._edgeManipulatorMaterial,stateMask:ge.Edge|ae.Unfocused|ae.Unselected},{geometry:this._edgeManipulatorOutlineGeometry,material:this._edgeManipulatorOutlineMaterial,stateMask:ge.Edge|ae.Unfocused|ae.Unselected});const a=new I({view:this.view,renderObjects:i,elevationInfo:t,focusMultiplier:1,touchMultiplier:1,available:!(!this.graphic.visible||!this.graphic.layer.visible)});this._setTypeSpecificManipulatorSettings(a,e,t);const r="edge"===e.type?{manipulator:a,handle:e,locationUpdateHandle:null,type:"edge",selectedIndex:0}:{manipulator:a,handle:e,type:"vertex",selectedIndex:0};if(this._manipulatorInfos.push(r),this.manipulators.add(a),this._updateManipulatorPosition(r),"edge"===r.type){const e=this._getManipulatorInfoFromHandle(r.handle.leftVertex).manipulator.events.on("location-update",(()=>this._updateManipulatorPosition(r))),t=this._getManipulatorInfoFromHandle(r.handle.rightVertex).manipulator.events.on("location-update",(()=>this._updateManipulatorPosition(r)));r.locationUpdateHandle=n([e,t]),this._manipulatorHandles.add(r.locationUpdateHandle,a)}this._manipulatorHandles.add(this._watchAndUpdateGrabState(a,!0),a);const o=ee(a,((e,i,a,n)=>{let o=null;i.next((e=>this._trackNumDragging(e))).next((e=>{if("start"===e.action&&(o=p(this._editGeometryOperations).createUndoGroup()),ue(r)){const t=this._splitEdgeManipulator(r);return{...e,info:t,snapOrigin:t.handle.pos}}return{...e,info:r,snapOrigin:r.handle.pos}})).next(te(this.view,e.elevationAlignedLocation)).next(N(this.view,this.graphic,e.elevationAlignedLocation,e.location.spatialReference,this.graphic)).next(this._snappingPipeline.createSnapDragEventPipelineStep({predicate:()=>!this._isMultiVertexSelection(),cancel:a,snappingManager:this.tool.snappingManager,snappingContext:new se({editGeometryOperations:p(this._editGeometryOperations),elevationInfo:t,pointer:n,excludeFeature:this.graphic,visualizer:new A}),updatingHandles:this.updatingHandles}),this._snappingPipeline.next).next($()).next((e=>{this._perVertexManipulatorDragAction(e),"end"===e.action&&(o=h(o))})),a.next(this._cancelDragOperation((()=>o=h(o))))}));return this._manipulatorHandles.add(o,a),this._manipulatorHandles.add([a.events.on("immediate-click",(e=>this._manipulatorClickCallback(e,r))),a.events.on("select-changed",(()=>{r.selectedIndex=++this._selectedIndex,this._updateMoveManipulationPosition()}))],a),this.emit("manipulators-changed"),r}_trackNumDragging(e){switch(e.action){case"start":this._numDragging++;break;case"end":this._numDragging--}return e}_cancelDragOperation(e){return()=>{switch(this._numDragging--,this.undo(),this.outputGeometry=s(this._editGeometryOperations)?this._editGeometryOperations.data.geometry:null,s(this.tool.snappingManager)&&this.tool.snappingManager.doneSnapping(),this._reshapeEventState){case _e.NONE:break;case _e.MOVING:this.emit("move",{type:"move",dx:0,dy:0,mover:this.graphic});break;case _e.RESHAPING:this.emit("reshape",{type:"reshape",mover:this.graphic})}e&&e(),this.destroyed||this._updateEventState(_e.NONE)}}_setTypeSpecificManipulatorSettings(e,t,i){switch(t.type){case"vertex":e.state=ge.Vertex,e.selectable=!0,e.cursor="move",e.collisionPriority=2,e.radius=j.reshapeManipulators.vertex.size/2+j.reshapeManipulators.vertex.collisionPadding,e.elevationInfo=i,e.interactive=s(this.graphic.geometry)&&"point"!==this.graphic.geometry.type;break;case"edge":e.state=ge.Edge,e.selectable=!1,e.cursor="copy",e.collisionPriority=-1,e.radius=j.reshapeManipulators.edge.size/2+j.reshapeManipulators.edge.collisionPadding,e.elevationInfo="on-the-ground"!==i.mode||S(this.graphic.symbol)?{mode:"absolute-height",offset:0}:i}}_watchAndUpdateGrabState(e,t){return e.events.on("grab-changed",(i=>{if("start"===i.action)t&&this._updateSelection(e),this._numGrabbing++;else if(this._numGrabbing--,this._updateEventState(_e.NONE),this.destroyed)return;this._moveManipulation.interactive=!this._numGrabbing,("touch"!==i.pointerType||this.enableEdgeOffset)&&(this._manipulatorInfos.forEach((e=>{e.manipulator.interactive=!this._numGrabbing&&s(this.graphic.geometry)&&"point"!==this.graphic.geometry.type,"edgeManipulator"in e&&(e.edgeManipulator.interactive=!this._numGrabbing)})),p(this._graphicMoveManipulation).forEachManipulator((e=>e.interactive=!this._numGrabbing)))}))}_clearSelection(){for(const e of this._manipulatorInfos)e.manipulator.grabbing||(e.manipulator.selected=!1)}_updateSelection(e){e.grabbing&&!e.selected&&e.selectable&&(this._clearSelection(),e.selected=!0,this.emit("manipulators-changed"))}_removeManipulator(e){e&&(this._manipulatorHandles.remove(e.manipulator),this._manipulatorInfos.splice(this._manipulatorInfos.indexOf(e),1),this.manipulators.remove(e.manipulator),this.emit("manipulators-changed"))}_getManipulatorInfoFromHandle(e){if(e)for(const t of this._manipulatorInfos)if(e===t.handle)return t;return null}_updateManipulatorPosition(e){if(!e)return;const t=p(this._editGeometryOperations);if("vertex"===e.handle.type)e.manipulator.location=t.data.coordinateHelper.vectorToDehydratedPoint(e.handle.pos,ce),e.manipulator.grabbing&&s(this._vertexLaserLineVisualElement)&&(this._vertexLaserLineVisualElement.visualElement.intersectsWorldUpAtLocation=e.manipulator.renderLocation);else if("edge"===e.handle.type){const i=this._getManipulatorInfoFromHandle(e.handle.leftVertex).manipulator,a=this._getManipulatorInfoFromHandle(e.handle.rightVertex).manipulator;if(s(e.manipulator.elevationInfo)&&"on-the-ground"===e.manipulator.elevationInfo.mode){const n=i.location,r=a.location,o=.5,s=n.x+o*(r.x-n.x),l=n.y+o*(r.y-n.y),p=n.hasZ&&r.hasZ?0:void 0;e.manipulator.location=G(s,l,p,t.data.spatialReference)}else f(me,i.renderLocation,a.renderLocation,.5),e.manipulator.renderLocation=me}}_splitEdgeManipulator(e,t=.5){const i=p(this._editGeometryOperations),a=p(i.splitEdge(e.handle,t).createdVertex);e.locationUpdateHandle.remove(),e.locationUpdateHandle=void 0;const n=b(this.graphic);let r;this.enableEdgeOffset?(this._removeManipulator(e),r=this._createVertexOrEdgeManipulator(a)):(r=e,r.handle=a,r.type="vertex",this._setTypeSpecificManipulatorSettings(e.manipulator,e.handle,n)),a.leftEdge&&this._createVertexOrEdgeManipulator(a.leftEdge),a.rightEdge&&this._createVertexOrEdgeManipulator(a.rightEdge),this.outputGeometry=i.data.geometry,this._updateManipulatorPosition(r),this._updateSelection(e.manipulator);const o=this._updateEventState(_e.RESHAPING),s=i.data.coordinateHelper.vectorToArray(r.handle.pos),l=i.data.components.indexOf(a.component);return this.emit("vertex-add",{type:"vertex-add",vertices:[{coordinates:s,componentIndex:l,vertexIndex:p(a.index)}],added:s}),o&&this._updateEventState(_e.NONE),r}_updateMoveManipulationPosition(){const e=v(me,0,0,0);let t=0,i=!1,a=null,n=null;for(const r of this._manipulatorInfos)de(r)&&(r.manipulator.selected?(t++,M(e,e,r.manipulator.renderLocation),l(a)||r.selectedIndex>a.selectedIndex?(n=a,a=r):(l(n)||r.selectedIndex>n.selectedIndex)&&(n=r)):i=!0);if(0!==t){const e=this._graphicState.displaying;this._moveManipulation.xyManipulation.available=e,this._moveManipulation.xyAxisManipulation.available=e,this._moveManipulation.zManipulation.available=e&&this.enableZVertex&&k(this.graphic),this._moveManipulation.xyAxisManipulation.orthogonalAvailable=e&&1!==t}else{const e=this._graphicState.displaying&&this.enableMoveGraphic;this._moveManipulation.xyManipulation.available=e,this._moveManipulation.xyAxisManipulation.available=e,this._moveManipulation.xyAxisManipulation.orthogonalAvailable=e,this._moveManipulation.zManipulation.available=e&&this.enableZShape&&k(this.graphic)}if(0!==t){let e=0;if(s(a)){const t=a.handle.pos,i=s(n)?n.handle.pos:a.handle.leftEdge&&a.handle.leftEdge.leftVertex?a.handle.leftEdge.leftVertex.pos:null,r=!s(n)&&a.handle.rightEdge&&a.handle.rightEdge.rightVertex?a.handle.rightEdge.rightVertex.pos:null;i&&r?this._moveManipulation.xyAxisManipulation.available=!1:i?e=he(i,t):r&&(e=he(t,r))}this._moveManipulation.angle=e,this._moveManipulation.radius=F}else this._moveManipulation.angleDeferred=()=>z(p(this.graphic.geometry)),this._moveManipulation.radius=C.radiusForSymbol(this.graphic.symbol);0!==t&&i?(y(e,e,1/t),ce.spatialReference=p(this._editGeometryOperations).data.spatialReference,ce.hasZ=!0,this.view.renderCoordsHelper.fromRenderCoords(e,ce),this._moveManipulation.elevationAlignedLocation=ce):s(this._outlineVisualElement)&&!this._graphicState.isDraped&&s(this._outlineVisualElement.attachmentOrigin)?this._moveManipulation.elevationAlignedLocation=this._outlineVisualElement.attachmentOrigin:w(this.view,this._moveManipulation,this.graphic)}_removeVertices(e){const t=[],i=p(this._editGeometryOperations);for(const a of e)if("vertex"===a.handle.type&&i.canRemoveVertex()){t.push(a.handle),this._removeManipulator(a),this._removeManipulator(this._getManipulatorInfoFromHandle(a.handle.leftEdge)),this._removeManipulator(this._getManipulatorInfoFromHandle(a.handle.rightEdge));const e=p(i.removeVertices([a.handle]).removedVertices[0].createdEdge);e&&this._createVertexOrEdgeManipulator(e)}if(t.length>0){const e=t.map((e=>{const t=i.data.components.indexOf(e.component);return{coordinates:i.data.coordinateHelper.vectorToArray(e.pos),componentIndex:t,vertexIndex:p(e.index)}}));this.outputGeometry=i.data.geometry;const a=this._updateEventState(_e.RESHAPING);if(this.destroyed)return;if(this.emit("vertex-remove",{type:"vertex-remove",removed:e.map((e=>e.coordinates)),vertices:e}),this.destroyed)return;if(a&&(this._updateEventState(_e.NONE),this.destroyed))return;this._updateMoveManipulationPosition()}}_moveVertices(e,t,i=("start"===t.action?oe.NEW_STEP:oe.ACCUMULATE_STEPS)){const a=p(this._editGeometryOperations);a.moveVertices(e.map((e=>e.handle)),t.mapDeltaX,t.mapDeltaY,t.mapDeltaZ,i),this.outputGeometry=a.data.geometry;for(const n of e)this._updateManipulatorPosition(n)}_offsetEdge(e,t){if(l(t.operation))return;const i=p(this._editGeometryOperations),a=t.operation.clone();a.distance=t.operation.signedDistanceToPoint(t.mapEnd),i.updateVertices([e.handle.leftVertex,e.handle.rightVertex],a),this.outputGeometry=i.data.geometry,this._updateManipulatorPosition(this._getManipulatorInfoFromHandle(e.handle.leftVertex)),this._updateManipulatorPosition(this._getManipulatorInfoFromHandle(e.handle.rightVertex))}_manipulatorClickCallback(e,t){e.shiftKey||this._clearSelection(),"vertex"===t.handle.type&&(t.manipulator.selected=!t.manipulator.selected),"vertex"===t.handle.type&&e.button===Q.Right&&this._removeVertices([t]),ue(t)&&e.button===Q.Left&&this._splitEdgeManipulator(t),e.stopPropagation()}};function he(e,t){return Math.atan2(t[1]-e[1],t[0]-e[0])+Math.PI/2}function de(e){return"vertex"===e.handle.type}function ue(e){return"edge"===e.handle.type}e([u({constructOnly:!0})],pe.prototype,"tool",void 0),e([u()],pe.prototype,"inputGeometry",null),e([u()],pe.prototype,"outputGeometry",void 0),e([u({readOnly:!0})],pe.prototype,"updating",null),pe=e([c("esri.views.3d.interactive.editingTools.reshapeGraphic.ReshapeOperation")],pe);const ce=G(0,0,null,null),me=O();var ge,_e,fe;!function(e){e.Vertex=ne.Custom1,e.Edge=ne.Custom2}(ge||(ge={})),function(e){e[e.NONE=0]="NONE",e[e.MOVING=1]="MOVING",e[e.RESHAPING=2]="RESHAPING"}(_e||(_e={})),function(e){e[e.ALL=0]="ALL",e[e.SELECTED_OR_ALL=1]="SELECTED_OR_ALL"}(fe||(fe={}));export{pe as ReshapeOperation};
