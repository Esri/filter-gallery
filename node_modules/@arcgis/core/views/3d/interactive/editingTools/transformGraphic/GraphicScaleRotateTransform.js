/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import t from"../../../../../core/Evented.js";import e from"../../../../../core/Handles.js";import{clamp as a,rad2deg as i}from"../../../../../core/mathUtils.js";import{isSome as r,destroyMaybe as o}from"../../../../../core/maybe.js";import{addFrameTask as s}from"../../../../../core/scheduling.js";import{createScreenPointArray as n}from"../../../../../core/screenUtils.js";import{init as l}from"../../../../../core/watchUtils.js";import{d as c,u as h,m as g,h as d,e as p}from"../../../../../chunks/mat4.js";import{c as u}from"../../../../../chunks/mat4f64.js";import{s as m,f,l as M,h as D,c as S,b as _}from"../../../../../chunks/vec3.js";import{a as y,f as v}from"../../../../../chunks/vec3f64.js";import{fromPositionAndNormal as R,create as b,normal as k}from"../../../../../geometry/support/plane.js";import{wrap as j,distance2 as A}from"../../../../../geometry/support/ray.js";import{sv3d as I,sm4d as T}from"../../../../../geometry/support/vectorStacks.js";import{getGraphicEffectiveElevationInfo as E}from"../../../../../support/elevationInfoUtils.js";import{Manipulator3D as w}from"../../Manipulator3D.js";import{calculateInputRotationTransform as F}from"../../manipulatorUtils.js";import{screenToRenderPlane as P}from"../dragEventPipeline3D.js";import{ManipulatorType as C}from"../ManipulatorType.js";import{ROTATE_INDICATOR_DIRECTION_BUFFER as O,SCALE_INDICATOR_DIRECTION_BUFFER as U,RING_HEIGHT as L,ROTATE_INDICATOR_ARROW_PLACEMENT_PERCENTAGE as x,ROTATE_INDICATOR_ARROW_TIP_LENGTH as N,ROTATE_INDICATOR_ARROW_TIP_RADIUS as G,RING_THICKNESS as H,HANDLE_COLOR as B,DRAG_THRESHOLD_PX as q,RING_INDICATOR_DELAY_MS as z,RING_RADIUS as J,INNER_INDICATOR_RADIUS as K,INDICATOR_THICKNESS as Q,OUTER_INDICATOR_RADIUS as V,SCALE_INDICATOR_OFFSET1 as W,SCALE_INDICATOR_OFFSET2 as X,RING_RESET_ANIMATION_SPEED_FACTOR as Y,GEOMETRY_SEGMENTS as Z,ROTATE_INDICATOR_ARC_LENGTH as $,SCALE_INDICATOR_ARC_LENGTH as tt}from"../manipulations/config.js";import{cyclicalPI as et}from"../../../support/mathUtils.js";import{CullFaceOptions as at}from"../../../webgl-engine/lib/basicInterfaces.js";import it from"../../../webgl-engine/lib/GeometryUtil.js";import{RenderOccludedFlag as rt}from"../../../webgl-engine/lib/Material.js";import{ColorMaterial as ot}from"../../../webgl-engine/materials/ColorMaterial.js";import{createManipulatorDragEventPipeline as st}from"../../../../interactive/dragEventPipeline.js";import{ManipulatorStateCustomFlags as nt,ManipulatorStateFlags as lt}from"../../../../interactive/interfaces.js";var ct,ht;!function(t){t.ScaleIn=nt.Custom2,t.ScaleOut=nt.Custom3,t.RotateLeft=nt.Custom4,t.RotateRight=nt.Custom5,t.Unlocked=nt.Custom7,t.DelayedFocused=nt.Custom8,t.TouchInput=nt.Custom12}(ct||(ct={}));class gt{constructor(a){this.mode=null,this._handles=new e,this._scaleRotateDragData=null,this._activeAnimation=null,this.events=new t,this.getFocused=()=>this.ringManipulator.focused,this.getScale=()=>r(this._scaleRotateDragData)&&"scale"===this._scaleRotateDragData.mode?this.adapter.scale:1,this.tool=a.tool,this.mode=a.mode,this.adapter=a.adapter,this._createManipulator(),this._updateDragState(),this._updateManipulatorTransform()}get angle(){return this.adapter.angle}get scale(){return this.adapter.scale}set location(t){this.ringManipulator.location=t}set elevationAlignedLocation(t){this.ringManipulator.elevationAlignedLocation=t}get grabbing(){return this.ringManipulator.grabbing}set interactive(t){this.ringManipulator.interactive=t}destroy(){r(this._activeAnimation)&&(this._activeAnimation.frameTask.remove(),this._activeAnimation=null),this._handles=o(this._handles),this.tool.manipulators.remove(this.ringManipulator),this.ringManipulator=null}startAnimation(t){this.cancelActiveAnimation(),t.start();const e=s({update:({deltaTime:e})=>{t.update(e)&&this.cancelActiveAnimation()}});this._activeAnimation={...t,frameTask:e}}cancelActiveAnimation(){r(this._activeAnimation)&&(this._activeAnimation.frameTask.remove(),this._activeAnimation=o(this._activeAnimation))}forEachManipulator(t){t(this.ringManipulator,C.SCALE_ROTATE)}_createManipulator(){this.ringManipulator=this._createRingManipulator(),this.tool.manipulators.add(this.ringManipulator);const t=this.ringManipulator,e=this.tool.graphicState.graphic,o=st(t,((t,o,s)=>{this._scaleRotateDragData=null,this.adapter.restart();const n={mode:"none",origin:y(t.renderLocation),initialAngle:this.adapter.angle,angle:0,angleDir:0,scaleDir:0};this._scaleRotateDragData=n,this._updateDragState();const l=I.get();this.tool.view.renderCoordsHelper.worldUpAtPosition(t.renderLocation,l),o.next(P(this.tool.view,R(t.renderLocation,l,b()))).next((t=>{const o=k(t.plane),s=F(t.renderStart,t.renderEnd,n.origin,o),l=et.shortestSignedDiff(n.angle,s);n.angleDir=a(n.angleDir+l,-O,O),n.angle=s;const c=dt(n,t),h=c-this.adapter.scale;if(n.scaleDir=a(n.scaleDir+h,-U,U),this._onScaleChanged(),"none"===n.mode){const a=this.mode||pt(t,t.plane,n.origin,this.tool.view.state.camera);if(r(a)){switch(a){case"rotate":this.tool.emit("graphic-rotate-start",{graphic:e,angle:0}),this.tool.emit("record-undo",{record:this.adapter.createUndoRecord()});break;case"scale":this.tool.emit("graphic-scale-start",{graphic:e,xScale:1,yScale:1}),this.tool.emit("record-undo",{record:this.adapter.createUndoRecord()})}n.mode=a}}switch(n.mode){case"rotate":this.adapter.angle=n.initialAngle+s;break;case"scale":this.adapter.scale=c,this._onScaleChanged()}switch(this._updateDragState(),this._updateManipulatorTransform(),t.action){case"start":case"update":switch(n.mode){case"rotate":this.tool.emit("graphic-rotate",{graphic:e,angle:i(n.angle)});break;case"scale":this.tool.emit("graphic-scale",{graphic:e,xScale:c,yScale:c})}break;case"end":switch(n.mode){case"rotate":this.tool.emit("graphic-rotate-stop",{graphic:e,angle:i(n.angle)});break;case"scale":this.tool.emit("graphic-scale-stop",{graphic:e,xScale:c,yScale:c})}}"end"===t.action&&(this.startAnimation(mt(this,(()=>this._onScaleChanged()))),this._scaleRotateDragData=null,this._updateDragState())})),s.next((()=>{if(this.adapter.cancel(),r(this._scaleRotateDragData)){switch(this._scaleRotateDragData.mode){case"none":break;case"rotate":this.tool.emit("graphic-rotate-stop",{graphic:e,angle:0});break;case"scale":this.tool.emit("graphic-scale-stop",{graphic:e,xScale:1,yScale:1})}this.startAnimation(mt(this,(()=>this._onScaleChanged()))),this._scaleRotateDragData=null,this._updateDragState()}}))}));this._handles.add(o),this._handles.add([this.ringManipulator.events.on("focus-changed",(t=>{"focus"===t.action?this.startAnimation(ft(this,(()=>this._updateDelayedFocusedState()))):this._updateDelayedFocusedState()})),this.ringManipulator.events.on("immediate-click",(t=>{t.stopPropagation()})),l(this.tool.graphicState,"displaying",(t=>this.ringManipulator.available=t))])}_onScaleChanged(){this.events.emit("scale-changed"),this._updateManipulatorTransform()}_updateDelayedFocusedState(){this.ringManipulator.updateStateEnabled(ct.DelayedFocused,this.getFocused())}_updateDragState(){if(this.ringManipulator.updateStateEnabled(ct.Unlocked,!(r(this._scaleRotateDragData)&&"none"!==this._scaleRotateDragData.mode)),r(this._scaleRotateDragData))switch(this._scaleRotateDragData.mode){case"rotate":this.ringManipulator.updateStateEnabled(ct.ScaleIn|ct.ScaleOut,!1),this.ringManipulator.updateStateEnabled(ct.RotateLeft,this._scaleRotateDragData.angleDir<0),this.ringManipulator.updateStateEnabled(ct.RotateRight,this._scaleRotateDragData.angleDir>=0);break;case"scale":this.ringManipulator.updateStateEnabled(ct.RotateLeft|ct.RotateRight,!1),this.ringManipulator.updateStateEnabled(ct.ScaleIn,this._scaleRotateDragData.scaleDir<0),this.ringManipulator.updateStateEnabled(ct.ScaleOut,this._scaleRotateDragData.scaleDir>=0)}else this.ringManipulator.updateStateEnabled(ct.ScaleIn|ct.ScaleOut|ct.RotateLeft|ct.RotateRight,!1)}_updateManipulatorTransform(){const t=c(T.get(),this.adapter.angle,v(0,0,1)),e=this.getScale(),a=h(T.get(),m(I.get(),e,e,e));this.ringManipulator.modelTransform=g(T.get(),a,t)}_createRingManipulator(){const t=(t,e,a)=>{const i=[],r=Math.ceil(Z*(e-t)/(2*Math.PI));for(let o=0;o<r+1;o++){const s=t+o*(e-t)/r;i.push(v(a*Math.cos(s),a*Math.sin(s),0))}return i},e=e=>t(0,2*Math.PI,e),a=t=>[[-t/2,0],[t/2,0],[t/2,L/2],[-t/2,L/2]],i=(t,e)=>it.createPathExtrusionGeometry(a(e),t,[],[],!1),r=e(J),o=i(r,H),s={left:[],right:[]},n=[];for(let v=0;v<2;v++){const e=v*Math.PI-Math.PI/4,a=Math.PI/2-$,r=e+a,o=e+Math.PI/2-a,l=t(r,o,K),c=i(l,Q);n.push(l),n.push(t(r,o,V-H/2)),s.left.push(c),s.right.push(c);for(let t=0;t<2;t++){const e=0===t,a=u();if(e){d(a,a,[1,-1,1]),p(a,a,-r,[0,0,1]);const t=Math.round(x*(l.length-1));a[12]=l[t][0],a[13]=l[t][1],a[14]=l[t][2]}else{p(a,a,o,[0,0,1]);const t=Math.round((1-x)*(l.length-1));a[12]=l[t][0],a[13]=l[t][1],a[14]=l[t][2]}const i=it.createExtrudedTriangle(N,0,G,L);it.transformInPlace(i,a),(e?s.left:s.right).push(i)}}const l=[];for(let d=0;d<2;d++){const e=d*Math.PI-Math.PI/4,a=Math.PI/2-tt,r=e+a,o=e+Math.PI/2-a,s=t(r,o,V);l.push(i(s,Q))}const c=e(J+W),h=e(J+X),g=i(c,Q),m=i(h,Q),f=e(J-W),M=e(J-X),D=i(f,Q),S=i(M,Q),_=this._createMaterial(),y=this._createMaterial(.66),R=this._createMaterial(.5),b=this._createMaterial(.33);let k=[{geometry:o,material:_,stateMask:ct.DelayedFocused},{geometry:o,material:R,stateMask:lt.None}];this.mode&&"scale"!==this.mode||(k=k.concat([{geometry:l,material:_,stateMask:ct.DelayedFocused|ct.Unlocked},{geometry:g,material:y,stateMask:ct.DelayedFocused|ct.ScaleIn},{geometry:m,material:b,stateMask:ct.DelayedFocused|ct.ScaleIn},{geometry:D,material:y,stateMask:ct.DelayedFocused|ct.ScaleOut},{geometry:S,material:b,stateMask:ct.DelayedFocused|ct.ScaleOut}])),this.mode&&"rotate"!==this.mode||(k=k.concat([{geometry:s.right,material:_,stateMask:ct.DelayedFocused|ct.Unlocked},{geometry:s.left,material:_,stateMask:ct.DelayedFocused|ct.RotateLeft},{geometry:s.right,material:_,stateMask:ct.DelayedFocused|ct.RotateRight}]));const j=[r,...n];return new w({view:this.tool.view,renderObjects:k,autoScaleRenderObjects:!1,worldOriented:!0,radius:H,focusMultiplier:1,touchMultiplier:1.5,elevationInfo:E(this.tool.graphicState.graphic),collisionType:{type:"ribbon",paths:j,direction:v(0,0,1)}})}_createMaterial(t=1){const e=[...B,t];return new ot({color:e,transparent:1!==t,cullFace:at.Back,renderOccluded:rt.Transparent})}get test(){return{ringManipulator:this.ringManipulator}}}function dt(t,e){const a=f(I.get(),e.renderStart,t.origin),i=f(I.get(),e.renderEnd,t.origin),r=M(a),o=M(i);return 0===r?0:o/r}function pt(t,e,a,i){const{renderStart:r,renderEnd:o}=t,s=ut(r,i,I.get()),n=ut(o,i,I.get());if(D(s,n)<q*q)return null;const l=f(I.get(),r,a),c=S(I.get(),l,k(e)),h=r,g=_(I.get(),h,c),d=ut(a,i,I.get()),p=s,u=ut(g,i,I.get()),m=f(I.get(),u,p),M=f(I.get(),s,d),y=j(p,m),v=j(d,M);return A(y,n)<A(v,n)?"rotate":"scale"}function ut(t,e,a){return e.projectToScreen(t,Mt),m(a,Mt[0],Mt[1],0)}function mt(t,e){let a=null,i=1;const r=()=>i;return{start:()=>{i=t.getScale(),a=t.getScale,t.getScale=r,e()},update:t=>(i+=((i+1)/2-i)*Math.min(t*Y,1),e(),Math.abs(i-1)<.01?ht.STOP:ht.CONTINUE),destroy:()=>{t.getScale=a,e()}}}function ft(t,e){let a=0,i=null;const r=()=>!1;return{start:()=>{i=t.getFocused,t.getFocused=r,a=0,e()},update:t=>(a+=t,!i()||a>z?ht.STOP:ht.CONTINUE),destroy:()=>{t.getFocused=i,e()}}}!function(t){t[t.CONTINUE=0]="CONTINUE",t[t.STOP=1]="STOP"}(ht||(ht={}));const Mt=n();export{gt as GraphicScaleRotateTransform};
