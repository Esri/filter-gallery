/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{ViewingMode as o}from"../../../../../ViewingMode.js";import{NormalAttributeType as r,NormalAttribute as a}from"./NormalAttribute.glsl.js";import{VertexPosition as e}from"./VertexPosition.glsl.js";import{glsl as l}from"../../shaderModules/interfaces.js";function m(m,d){d.normalType===r.Attribute||d.normalType===r.CompressedAttribute?(m.include(a,d),m.varyings.add("vNormalWorld","vec3"),m.varyings.add("vNormalView","vec3"),m.vertex.uniforms.add("transformNormalGlobalFromModel","mat3"),m.vertex.uniforms.add("transformNormalViewFromGlobal","mat3"),m.vertex.code.add(l`void forwardNormal() {
vNormalWorld = transformNormalGlobalFromModel * normalModel();
vNormalView = transformNormalViewFromGlobal * vNormalWorld;
}`)):d.normalType===r.Ground?(m.include(e,d),m.varyings.add("vNormalWorld","vec3"),m.vertex.code.add(l`
    void forwardNormal() {
      vNormalWorld = ${d.viewingMode===o.Global?l`normalize(vPositionWorldCameraRelative);`:l`vec3(0.0, 0.0, 1.0);`}
    }
    `)):m.vertex.code.add(l`void forwardNormal() {}`)}function d(o,r){o.setUniformMatrix4fv("viewNormal",r)}export{m as VertexNormal,d as bindVertexNormalUniforms};
