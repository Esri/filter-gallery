/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{c as r}from"../../../../../../chunks/mat3f64.js";import{c as o}from"../../../../../../chunks/mat4f64.js";import{c as e}from"../../../../../../chunks/vec3f64.js";import{PositionAttribute as t}from"./PositionAttribute.glsl.js";import{DoublePrecision as m}from"../util/DoublePrecision.glsl.js";import{glsl as i}from"../../shaderModules/interfaces.js";function a(r,o){r.include(t),r.vertex.include(m,o),r.varyings.add("vPositionWorldCameraRelative","vec3"),r.varyings.add("vPosition_view","vec3"),r.vertex.uniforms.add("transformWorldFromModelRS","mat3"),r.vertex.uniforms.add("transformWorldFromModelTH","vec3"),r.vertex.uniforms.add("transformWorldFromModelTL","vec3"),r.vertex.uniforms.add("transformWorldFromViewTH","vec3"),r.vertex.uniforms.add("transformWorldFromViewTL","vec3"),r.vertex.uniforms.add("transformViewFromCameraRelativeRS","mat3"),r.vertex.uniforms.add("transformProjFromView","mat4"),r.vertex.code.add(i`vec3 positionWorldCameraRelative() {
vec3 rotatedModelPosition = transformWorldFromModelRS * positionModel();
vec3 transform_CameraRelativeFromModel = dpAdd(
transformWorldFromModelTL,
transformWorldFromModelTH,
-transformWorldFromViewTL,
-transformWorldFromViewTH
);
return transform_CameraRelativeFromModel + rotatedModelPosition;
}
vec3 position_view() {
return transformViewFromCameraRelativeRS * positionWorldCameraRelative();
}
void forwardPosition() {
vPositionWorldCameraRelative = positionWorldCameraRelative();
vPosition_view = position_view();
gl_Position = transformProjFromView * vec4(vPosition_view, 1.0);
}
vec3 positionWorld() {
return transformWorldFromViewTL + vPositionWorldCameraRelative;
}`),r.fragment.uniforms.add("transformWorldFromViewTL","vec3"),r.fragment.code.add(i`vec3 positionWorld() {
return transformWorldFromViewTL + vPositionWorldCameraRelative;
}`)}class s{constructor(){this.transformWorldFromModelRS=r(),this.transformWorldFromModelTH=e(),this.transformWorldFromModelTL=e()}}class n{constructor(){this.transformWorldFromViewTH=e(),this.transformWorldFromViewTL=e(),this.transformViewFromCameraRelativeRS=r(),this.transformProjFromView=o()}}function d(r,o){r.setUniformMatrix3fv("transformWorldFromModelRS",o.transformWorldFromModelRS),r.setUniform3fv("transformWorldFromModelTH",o.transformWorldFromModelTH),r.setUniform3fv("transformWorldFromModelTL",o.transformWorldFromModelTL)}function l(r,o){r.setUniform3fv("transformWorldFromViewTH",o.transformWorldFromViewTH),r.setUniform3fv("transformWorldFromViewTL",o.transformWorldFromViewTL),r.setUniformMatrix4fv("transformProjFromView",o.transformProjFromView),r.setUniformMatrix3fv("transformViewFromCameraRelativeRS",o.transformViewFromCameraRelativeRS)}export{a as VertexPosition,s as VertexPositionModelTransform,n as VertexPositionViewProjectionTransform,d as bindModelTransform,l as bindViewProjTransform};
