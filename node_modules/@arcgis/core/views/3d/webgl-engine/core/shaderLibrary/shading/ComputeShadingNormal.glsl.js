/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{neverReached as e}from"../../../../../../core/compilerUtils.js";import{ViewingMode as r}from"../../../../../ViewingMode.js";import{NormalAttributeType as o}from"../attributes/NormalAttribute.glsl.js";import{VertexNormal as d}from"../attributes/VertexNormal.glsl.js";import{VertexPosition as a}from"../attributes/VertexPosition.glsl.js";import{NormalsDoubleSidedMode as i}from"./Normals.glsl.js";import{glsl as n}from"../../shaderModules/interfaces.js";function t(t,l){const s=t.fragment;switch(l.doubleSidedMode){case i.None:s.code.add(n`vec3 _adjustDoublesided(vec3 normal) {
return normal;
}`);break;case i.View:t.include(a,l),s.code.add(n`vec3 _adjustDoublesided(vec3 normal) {
return dot(normal, vPositionWorldCameraRelative) > 0.0 ? -normal : normal;
}`);break;case i.WindingOrder:s.code.add(n`vec3 _adjustDoublesided(vec3 normal) {
return gl_FrontFacing ? normal : -normal;
}`);break;default:e(l.doubleSidedMode);case i.COUNT:}switch(l.normalType){case o.Attribute:case o.CompressedAttribute:t.include(d,l),s.code.add(n`vec3 shadingNormalWorld() {
return _adjustDoublesided(normalize(vNormalWorld));
}
vec3 shadingNormal_view() {
vec3 normal = normalize(vNormalView);
return gl_FrontFacing ? normal : -normal;
}`);break;case o.ScreenDerivative:t.extensions.add("GL_OES_standard_derivatives"),t.include(a,l),s.code.add(n`vec3 shadingNormalWorld() {
return normalize(cross(
dFdx(vPositionWorldCameraRelative),
dFdy(vPositionWorldCameraRelative)
));
}
vec3 shadingNormal_view() {
return normalize(cross(dFdx(vPosition_view),dFdy(vPosition_view)));
}`);break;case o.Ground:l.viewingMode===r.Global?(t.include(a,l),s.code.add(n`vec3 shadingNormalWorld() {
return normalize(positionWorld());
}`)):l.viewingMode===r.Local&&s.code.add(n`vec3 shadingNormalWorld() {
return vec3(0.0, 0.0, 1.0);
}`),t.extensions.add("GL_OES_standard_derivatives"),s.code.add(n`vec3 shadingNormal_view() {
return normalize(cross(dFdx(vPosition_view),dFdy(vPosition_view))).xyz;
}`);break;default:e(l.normalType);case o.COUNT:}}export{t as ComputeShadingNormal};
