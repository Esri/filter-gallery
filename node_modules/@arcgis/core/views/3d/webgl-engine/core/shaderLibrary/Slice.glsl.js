/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{isSome as s}from"../../../../../core/maybe.js";import{j as e}from"../../../../../chunks/mat4.js";import{c as i}from"../../../../../chunks/mat4f64.js";import{g as a,f as o,b as c,m as l}from"../../../../../chunks/vec3.js";import{Z as r,c as t}from"../../../../../chunks/vec3f64.js";import{glsl as n}from"../shaderModules/interfaces.js";function f(s,e){if(e.slicePlaneEnabled){s.extensions.add("GL_OES_standard_derivatives"),e.sliceEnabledForVertexPrograms&&(s.vertex.uniforms.add("slicePlaneOrigin","vec3"),s.vertex.uniforms.add("slicePlaneBasis1","vec3"),s.vertex.uniforms.add("slicePlaneBasis2","vec3")),s.fragment.uniforms.add("slicePlaneOrigin","vec3"),s.fragment.uniforms.add("slicePlaneBasis1","vec3"),s.fragment.uniforms.add("slicePlaneBasis2","vec3");const i=n`struct SliceFactors {
float front;
float side0;
float side1;
float side2;
float side3;
};
SliceFactors calculateSliceFactors(vec3 pos) {
vec3 rel = pos - slicePlaneOrigin;
vec3 slicePlaneNormal = -cross(slicePlaneBasis1, slicePlaneBasis2);
float slicePlaneW = -dot(slicePlaneNormal, slicePlaneOrigin);
float basis1Len2 = dot(slicePlaneBasis1, slicePlaneBasis1);
float basis2Len2 = dot(slicePlaneBasis2, slicePlaneBasis2);
float basis1Dot = dot(slicePlaneBasis1, rel);
float basis2Dot = dot(slicePlaneBasis2, rel);
return SliceFactors(
dot(slicePlaneNormal, pos) + slicePlaneW,
-basis1Dot - basis1Len2,
basis1Dot - basis1Len2,
-basis2Dot - basis2Len2,
basis2Dot - basis2Len2
);
}
bool sliceByFactors(SliceFactors factors) {
return factors.front < 0.0
&& factors.side0 < 0.0
&& factors.side1 < 0.0
&& factors.side2 < 0.0
&& factors.side3 < 0.0;
}
bool sliceEnabled() {
return dot(slicePlaneBasis1, slicePlaneBasis1) != 0.0;
}
bool sliceByPlane(vec3 pos) {
return sliceEnabled() && sliceByFactors(calculateSliceFactors(pos));
}
#define rejectBySlice(_pos_) sliceByPlane(_pos_)
#define discardBySlice(_pos_) { if (sliceByPlane(_pos_)) discard; }`,a=n`vec4 applySliceHighlight(vec4 color, vec3 pos) {
SliceFactors factors = calculateSliceFactors(pos);
const float HIGHLIGHT_WIDTH = 1.0;
const vec4 HIGHLIGHT_COLOR = vec4(0.0, 0.0, 0.0, 0.3);
factors.front /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.front);
factors.side0 /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.side0);
factors.side1 /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.side1);
factors.side2 /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.side2);
factors.side3 /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.side3);
if (sliceByFactors(factors)) {
return color;
}
float highlightFactor = (1.0 - step(0.5, factors.front))
* (1.0 - step(0.5, factors.side0))
* (1.0 - step(0.5, factors.side1))
* (1.0 - step(0.5, factors.side2))
* (1.0 - step(0.5, factors.side3));
return mix(color, vec4(HIGHLIGHT_COLOR.rgb, color.a), highlightFactor * HIGHLIGHT_COLOR.a);
}`,o=e.sliceHighlightDisabled?n`#define highlightSlice(_color_, _pos_) (_color_)`:n`
        ${a}
        #define highlightSlice(_color_, _pos_) (sliceEnabled() ? applySliceHighlight(_color_, _pos_) : (_color_))
      `;e.sliceEnabledForVertexPrograms&&s.vertex.code.add(i),s.fragment.code.add(i),s.fragment.code.add(o)}else{const i=n`#define rejectBySlice(_pos_) false
#define discardBySlice(_pos_) {}
#define highlightSlice(_color_, _pos_) (_color_)`;e.sliceEnabledForVertexPrograms&&s.vertex.code.add(i),s.fragment.code.add(i)}}function d(s,e,i){_(s,e,i.slicePlane,{origin:i.origin})}function _(i,t,n,f){if(t.slicePlaneEnabled)if(s(n)){if(a(g,n.origin),a(m,n.basis1),a(P,n.basis2),s(f)&&s(f.origin)&&o(g,n.origin,f.origin),s(f)&&s(f.view)){const i=s(f.origin)?e(H,f.view,f.origin):f.view;c(m,m,g),c(P,P,g),l(g,g,i),l(m,m,i),l(P,P,i),o(m,m,g),o(P,P,g)}i.setUniform3fv("slicePlaneOrigin",g),i.setUniform3fv("slicePlaneBasis1",m),i.setUniform3fv("slicePlaneBasis2",P)}else i.setUniform3fv("slicePlaneBasis1",r),i.setUniform3fv("slicePlaneBasis2",r),i.setUniform3fv("slicePlaneOrigin",r)}const g=t(),m=t(),P=t(),H=i();export{f as Slice,_ as bindSliceUniforms,d as bindSliceUniformsWithOrigin};
