/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{glsl as e}from"../shaderModules/interfaces.js";function i(i){i.vertex.uniforms.add("cameraPosition","vec3").add("perScreenPixelRatio","float").add("screenSize","float"),i.vertex.code.add(e`float computeRenderPixelSizeAt( vec3 pWorld ){
vec3 viewForward = - vec3(view[0][2], view[1][2], view[2][2]);
float viewDirectionDistance = abs(dot(viewForward, pWorld - cameraPosition));
return viewDirectionDistance*perScreenPixelRatio;
}
vec3 screenSizeScaling(vec3 position, vec3 anchor){
return position * screenSize * computeRenderPixelSizeAt(anchor) + anchor;
}`)}function r(e,i,r){e.setUniform1f("perScreenPixelRatio",r.camera.perScreenPixelRatio),e.setUniform1f("screenSize",i.screenSize)}export{i as ScreenSizeScaling,r as bindScreenSizeScalingUniforms};
