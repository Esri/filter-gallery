/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{newLayout as e}from"../../support/buffer/InterleavedLayout.js";import t from"../lib/GLMaterial.js";import{DefaultMaterialParameters as r,Material as i}from"../lib/Material.js";import{RenderPass as s}from"../lib/RenderPass.js";import{RenderSlot as n}from"../lib/RenderSlot.js";import{VertexAttribute as a}from"../lib/VertexAttribute.js";import{writePosition as u,writeBufferFloat as o}from"./internal/bufferWriterUtils.js";import{HeatmapDensityTechniqueConfiguration as l,HeatmapDensityTechnique as c}from"../shaders/HeatmapDensityTechnique.js";export{RadiusMode}from"../shaders/HeatmapDensityTechnique.js";const f={searchRadius:128,resolutionForScale:0,colorRampData:null,isAttributeDriven:!1,minDensity:0,maxDensity:100,fieldTotal:0,pixelRatio:1,...r};class m extends i{constructor(e){super(e,f),this._techniqueConfig=new l}requiresSlot(e,t){return e===n.DRAPED_MATERIAL&&t===s.MATERIAL}getTechniqueConfig(){return this._techniqueConfig.isAttributeDriven=this.parameters.isAttributeDriven,this._techniqueConfig}createGLMaterial(e){return new p(e)}intersect(){}createBufferWriter(){return new T(this.parameters.isAttributeDriven?d:h)}}class p extends t{constructor(e){super(e)}beginSlot(e){return this.updateParameters(e)}updateParameters(e){return this.ensureTechnique(c,e)}bind(e,t){t.bindPass(this._material.parameters,e)}}class T{constructor(e){this.vertexBufferLayout=e}allocate(e){return this.vertexBufferLayout.createBuffer(e)}elementCount(e){return e.indices.get(a.POSITION).length*A}write(e,t,r,i){u(t.indices.get(a.POSITION),t.vertexAttributes.get(a.POSITION).data,e.transformation,r.position,i,A);const s=t.indices.get(a.POSITION).length,n=r.uv0;let l=i;for(let a=0;a<s;++a)n.setValues(l++,-1,-1),n.setValues(l++,1,-1),n.setValues(l++,1,1),n.setValues(l++,1,1),n.setValues(l++,-1,1),n.setValues(l++,-1,-1);const c="featureAttribute"in r?r.featureAttribute:null;c&&o(t.indices.get(a.FEATUREATTRIBUTE),t.vertexAttributes.get(a.FEATUREATTRIBUTE).data,c,i,A)}}const h=e().vec3f(a.POSITION).vec2f(a.UV0),d=h.clone().f32(a.FEATUREATTRIBUTE),A=6;function b(e){return e instanceof m}export{m as HeatmapDensityMaterial,b as isHeatMapDensityMaterial};
