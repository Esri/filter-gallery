/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import e from"../../../../core/Logger.js";import{clamp as t}from"../../../../core/mathUtils.js";import{isSome as r}from"../../../../core/maybe.js";import{createRenderScreenPointArray3 as i}from"../../../../core/screenUtils.js";import{c as s}from"../../../../chunks/vec2.js";import{s as a,f as n,d as o,a as l,b as c,g as u,l as p,i as h,m}from"../../../../chunks/vec3.js";import{c as f}from"../../../../chunks/vec3f64.js";import{PlaneIndex as T}from"../../../../geometry/support/frustum.js";import{create as d,distance2 as E,fromPoints as A,closestLineSegmentPoint as _}from"../../../../geometry/support/lineSegment.js";import{create as v,fromPoints as R,signedDistance as O,normal as I}from"../../../../geometry/support/plane.js";import{newLayout as S}from"../../support/buffer/InterleavedLayout.js";import{ShaderOutput as g}from"../core/shaderLibrary/ShaderOutputOptions.js";import{computeAttachmentOriginLines as b}from"../lib/geometryDataUtils.js";import C from"../lib/GLMaterial.js";import{outputFromPass as L}from"../lib/GLMaterials.js";import{DefaultMaterialParameters as N,Material as P,RenderOccludedFlag as y}from"../lib/Material.js";import{RenderSlot as D}from"../lib/RenderSlot.js";import{isTranslationMatrix as q}from"../lib/Util.js";import{VertexAttribute as U}from"../lib/VertexAttribute.js";import{VisualVariableDefaultMaterialParameters as j}from"./VisualVariableMaterialParameters.js";import{isInstanceHidden as F}from"./renderers/utils.js";import{C as x,N as M}from"../../../../chunks/RibbonLine.glsl.js";import{ribbonVertexAttributeLocations as w,RibbonLineTechniqueConfiguration as G,RibbonLineTechnique as J}from"../shaders/RibbonLineTechnique.js";const H=e.getLogger("esri.views.3d.webgl-engine.materials.RibbonLineMaterial");var z;!function(e){e[e.LEFT_JOIN_START=-2]="LEFT_JOIN_START",e[e.LEFT_JOIN_END=-1]="LEFT_JOIN_END",e[e.LEFT_CAP_START=-4]="LEFT_CAP_START",e[e.LEFT_CAP_END=-5]="LEFT_CAP_END",e[e.RIGHT_JOIN_START=2]="RIGHT_JOIN_START",e[e.RIGHT_JOIN_END=1]="RIGHT_JOIN_END",e[e.RIGHT_CAP_START=4]="RIGHT_CAP_START",e[e.RIGHT_CAP_END=5]="RIGHT_CAP_END"}(z||(z={}));class B extends P{constructor(e){super(e,V),this._vertexAttributeLocations=w,this.techniqueConfig=new G,this.layout=this.createLayout()}isClosed(e,t){return Y(this.parameters,e,t)}dispose(){}getPassParameters(){return this.parameters}getTechniqueConfig(e,t){this.techniqueConfig.output=e,this.techniqueConfig.draped=t.slot===D.DRAPED_MATERIAL;const i=r(this.parameters.stipplePattern);return this.techniqueConfig.stippleEnabled=i,this.techniqueConfig.stippleOffColorEnabled=i&&r(this.parameters.stippleOffColor),this.techniqueConfig.stippleScaleWithLineWidth=i&&this.parameters.stippleScaleWithLineWidth,this.techniqueConfig.stipplePreferContinuous=i&&this.parameters.stipplePreferContinuous,this.techniqueConfig.slicePlaneEnabled=this.parameters.slicePlaneEnabled,this.techniqueConfig.sceneHasOcludees=this.parameters.sceneHasOcludees,this.techniqueConfig.roundJoins="round"===this.parameters.join,this.techniqueConfig.capType=this.parameters.cap,this.techniqueConfig.transparent=this.parameters.transparent,this.techniqueConfig.polygonOffset=this.parameters.polygonOffset,this.techniqueConfig.writeDepth=this.parameters.writeDepth,this.techniqueConfig.vvColor=this.parameters.vvColorEnabled,this.techniqueConfig.vvOpacity=this.parameters.vvOpacityEnabled,this.techniqueConfig.vvSize=this.parameters.vvSizeEnabled,this.techniqueConfig.innerColorEnabled=this.parameters.innerWidth>0&&r(this.parameters.innerColor),this.techniqueConfig.falloffEnabled=this.parameters.falloff>0,this.techniqueConfig.occluder=this.parameters.renderOccluded===y.OccludeAndTransparentStencil,this.techniqueConfig.transparencyPassType=t.transparencyPassType,this.techniqueConfig.multipassTerrainEnabled=t.multipassTerrainEnabled,this.techniqueConfig.cullAboveGround=t.cullAboveGround,this.techniqueConfig.wireframe=this.parameters.wireframe,this.techniqueConfig}intersect(e,t,i,s,a,n,o,l,c){r(c)?this._intersectDrapedLineGeometry(e,s,c,n,o):this._intersectLineGeometry(e,t,i,s,o)}_intersectDrapedLineGeometry(e,r,i,s,a){if(!r.options.selectionMode)return;const n=e.vertexAttributes.get(U.POSITION).data,o=e.vertexAttributes.get(U.SIZE);let l=this.parameters.width;if(this.parameters.vvSizeEnabled){const r=e.vertexAttributes.get(U.SIZEFEATUREATTRIBUTE).data[0];l*=t(this.parameters.vvSizeOffset[0]+r*this.parameters.vvSizeFactor[0],this.parameters.vvSizeMinSize[0],this.parameters.vvSizeMaxSize[0])}else o&&(l*=o.data[0]);const c=s[0],u=s[1],p=(l/2+4)*e.screenToWorldRatio;let h=Number.MAX_VALUE,m=0;for(let f=0;f<n.length-5;f+=3){const e=n[f],r=n[f+1],i=c-e,s=u-r,a=n[f+3]-e,o=n[f+4]-r,l=t((a*i+o*s)/(a*a+o*o),0,1),p=a*l-i,T=o*l-s,d=p*p+T*T;d<h&&(h=d,m=f/3)}h<p*p&&a(i.dist,i.normal,m,!1)}_intersectLineGeometry(e,r,i,m,f){if(!m.options.selectionMode||F(r))return;if(!q(i))return void H.error("intersection assumes a translation-only matrix");const d=e.vertexAttributes,v=d.get(U.POSITION).data;let S=this.parameters.width;if(this.parameters.vvSizeEnabled){const e=d.get(U.SIZEFEATUREATTRIBUTE).data[0];S*=t(this.parameters.vvSizeOffset[0]+e*this.parameters.vvSizeFactor[0],this.parameters.vvSizeMinSize[0],this.parameters.vvSizeMaxSize[0])}else d.has(U.SIZE)&&(S*=d.get(U.SIZE).data[0]);const g=m.camera,b=te;s(b,m.point);const C=S*g.pixelRatio/2+4*g.pixelRatio;a(pe[0],b[0]-C,b[1]+C,0),a(pe[1],b[0]+C,b[1]+C,0),a(pe[2],b[0]+C,b[1]-C,0),a(pe[3],b[0]-C,b[1]-C,0);for(let t=0;t<4;t++)if(!g.unprojectFromRenderScreen(pe[t],he[t]))return;R(g.eye,he[0],he[1],me),R(g.eye,he[1],he[2],fe),R(g.eye,he[2],he[3],Te),R(g.eye,he[3],he[0],de);let L=Number.MAX_VALUE,N=0;const P=X(this.parameters,d,e.indices)?v.length-2:v.length-5;for(let t=0;t<P;t+=3){Q[0]=v[t]+i[12],Q[1]=v[t+1]+i[13],Q[2]=v[t+2]+i[14];const e=(t+3)%v.length;if(K[0]=v[e]+i[12],K[1]=v[e+1]+i[13],K[2]=v[e+2]+i[14],O(me,Q)<0&&O(me,K)<0||O(fe,Q)<0&&O(fe,K)<0||O(Te,Q)<0&&O(Te,K)<0||O(de,Q)<0&&O(de,K)<0)continue;if(g.projectToRenderScreen(Q,re),g.projectToRenderScreen(K,ie),re[2]<0&&ie[2]>0){n($,Q,K);const e=g.frustum,t=-O(e[T.NEAR],Q)/o($,I(e[T.NEAR]));l($,$,t),c(Q,Q,$),g.projectToRenderScreen(Q,re)}else if(re[2]>0&&ie[2]<0){n($,K,Q);const e=g.frustum,t=-O(e[T.NEAR],K)/o($,I(e[T.NEAR]));l($,$,t),c(K,K,$),g.projectToRenderScreen(K,ie)}else if(re[2]<0&&ie[2]<0)continue;re[2]=0,ie[2]=0;const r=E(A(re,ie,ne),b);r<L&&(L=r,u(se,Q),u(ae,K),N=t/3)}const y=m.rayBegin,D=m.rayEnd;if(L<C*C){let e=Number.MAX_VALUE;if(_(A(se,ae,ne),A(y,D,oe),ee)){n(ee,ee,y);const t=p(ee);l(ee,ee,1/t),e=t/h(y,D)}f(e,ee,N,!1)}}computeAttachmentOrigin(e,t){const r=e.vertexAttributes;if(!r)return null;const i=e.indices,s=r.get(U.POSITION);return b(s,i?i.get(U.POSITION):null,i&&X(this.parameters,r,i),t)}createLayout(){const e=S().vec3f(U.POSITION).f32(U.SUBDIVISIONFACTOR).vec2f(U.UV0).vec3f(U.AUXPOS1).vec3f(U.AUXPOS2);return this.parameters.vvSizeEnabled?e.f32(U.SIZEFEATUREATTRIBUTE):e.f32(U.SIZE),this.parameters.vvColorEnabled?e.f32(U.COLORFEATUREATTRIBUTE):e.vec4f(U.COLOR),this.parameters.vvOpacityEnabled&&e.f32(U.OPACITYFEATUREATTRIBUTE),e}createBufferWriter(){return new Z(this.layout,this.parameters)}requiresSlot(e,t){if(e===D.DRAPED_MATERIAL)return!0;if(this.parameters.renderOccluded===y.OccludeAndTransparentStencil)return e===D.OPAQUE_MATERIAL||e===D.OCCLUDER_MATERIAL||e===D.TRANSPARENT_OCCLUDER_MATERIAL;const r=L(t);if(r===g.Color||r===g.Alpha){return e===(this.parameters.writeDepth?D.TRANSPARENT_MATERIAL:D.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL)}return e===D.OPAQUE_MATERIAL}createGLMaterial(e){return e.output===g.Color||e.output===g.Alpha||e.output===g.Highlight||e.output===g.Depth?new W(e):null}validateParameters(e){"miter"!==e.join&&(e.miterLimit=0),this._requiresTransparent(e)&&(e.transparent=!0)}_requiresTransparent(e){return!!((e.color&&e.color[3])<1||e.innerWidth>0&&this._colorRequiresTransparent(e.innerColor)||e.stipplePattern&&this._colorRequiresTransparent(e.stippleOffColor)||e.falloff>0)}_colorRequiresTransparent(e){return r(e)&&e[3]<1&&e[3]>0}}class W extends C{updateParameters(e){return this.ensureTechnique(J,e)}_updateOccludeeState(e){e.hasOccludees!==this._material.parameters.sceneHasOcludees&&this._material.setParameters({sceneHasOcludees:e.hasOccludees})}beginSlot(e){return this._output!==g.Color&&this._output!==g.Alpha||this._updateOccludeeState(e),this.updateParameters(e)}bind(e,t){t.bindPass(this._material.getPassParameters(),e)}}const V={width:0,color:[1,1,1,1],join:"miter",cap:x.BUTT,miterLimit:5,writeDepth:!0,polygonOffset:!1,stipplePattern:null,stippleOffColor:null,stippleScaleWithLineWidth:!1,stipplePreferContinuous:!0,slicePlaneEnabled:!1,vvFastUpdate:!1,transparent:!1,isClosed:!1,falloff:0,innerWidth:0,innerColor:null,sceneHasOcludees:!1,wireframe:!1,...N,...j};class Z{constructor(e,t){this.parameters=t,this.numJoinSubdivisions=0,this.vertexBufferLayout=e;const r=t.stipplePattern?1:0;switch(this.parameters.join){case"miter":case"bevel":this.numJoinSubdivisions=r;break;case"round":this.numJoinSubdivisions=M+r}}_isClosed(e){return X(this.parameters,e.vertexAttributes,e.indices)}allocate(e){return this.vertexBufferLayout.createBuffer(e)}elementCount(e){const t=2,r=e.indices.get(U.POSITION).length/2+1,i=this._isClosed(e);let s=i?2:2*t;return s+=((i?r:r-1)-(i?0:1))*(2*this.numJoinSubdivisions+4),s+=2,this.parameters.wireframe&&(s=2+4*(s-2)),s}write(e,t,r,i){var s;const n=le,o=ce,l=ue,c=t.vertexAttributes.get(U.POSITION).data,p=t.indices&&t.indices.get(U.POSITION),f=null==(s=t.vertexAttributes.get(U.DISTANCETOSTART))?void 0:s.data;p&&p.length!==2*(c.length/3-1)&&console.warn("RibbonLineMaterial does not support indices");let T=1,d=0;this.parameters.vvSizeEnabled?d=t.vertexAttributes.get(U.SIZEFEATUREATTRIBUTE).data[0]:t.vertexAttributes.has(U.SIZE)&&(T=t.vertexAttributes.get(U.SIZE).data[0]);let E=[1,1,1,1],A=0;this.parameters.vvColorEnabled?A=t.vertexAttributes.get(U.COLORFEATUREATTRIBUTE).data[0]:t.vertexAttributes.has(U.COLOR)&&(E=t.vertexAttributes.get(U.COLOR).data);let _=0;this.parameters.vvOpacityEnabled&&(_=t.vertexAttributes.get(U.OPACITYFEATUREATTRIBUTE).data[0]);const v=c.length/3,R=e.transformation,O=new Float32Array(r.buffer),I=this.vertexBufferLayout.stride/4;let S=i*I;const g=S;let b=0;const C=f?(e,t,r)=>b=f[r]:(e,t,r)=>b+=h(e,t),L=(e,t,r,i,s,a,n)=>{if(O[S++]=t[0],O[S++]=t[1],O[S++]=t[2],O[S++]=i,O[S++]=n,O[S++]=s,O[S++]=e[0],O[S++]=e[1],O[S++]=e[2],O[S++]=r[0],O[S++]=r[1],O[S++]=r[2],this.parameters.vvSizeEnabled?O[S++]=d:O[S++]=T,this.parameters.vvColorEnabled)O[S++]=A;else{const e=Math.min(4*a,E.length-4);O[S++]=E[e+0],O[S++]=E[e+1],O[S++]=E[e+2],O[S++]=E[e+3]}this.parameters.vvOpacityEnabled&&(O[S++]=_)};S+=I,a(o,c[0],c[1],c[2]),R&&m(o,o,R);const N=this._isClosed(t);if(N){const e=c.length-3;a(n,c[e],c[e+1],c[e+2]),R&&m(n,n,R)}else a(l,c[3],c[4],c[5]),R&&m(l,l,R),L(o,o,l,1,z.LEFT_CAP_START,0,0),L(o,o,l,1,z.RIGHT_CAP_START,0,0),u(n,o),u(o,l);const P=N?0:1,y=N?v:v-1;for(let h=P;h<y;h++){const e=(h+1)%v*3;a(l,c[e+0],c[e+1],c[e+2]),R&&m(l,l,R),C(n,o,h),L(n,o,l,0,z.LEFT_JOIN_END,h,b),L(n,o,l,0,z.RIGHT_JOIN_END,h,b);const t=this.numJoinSubdivisions;for(let r=0;r<t;++r){const e=(r+1)/(t+1);L(n,o,l,e,z.LEFT_JOIN_END,h,b),L(n,o,l,e,z.RIGHT_JOIN_END,h,b)}L(n,o,l,1,z.LEFT_JOIN_START,h,b),L(n,o,l,1,z.RIGHT_JOIN_START,h,b),u(n,o),u(o,l)}N?(a(l,c[3],c[4],c[5]),R&&m(l,l,R),b=C(n,o,y),L(n,o,l,0,z.LEFT_JOIN_END,P,b),L(n,o,l,0,z.RIGHT_JOIN_END,P,b)):(b=C(n,o,y),L(n,o,o,0,z.LEFT_CAP_END,y,b),L(n,o,o,0,z.RIGHT_CAP_END,y,b)),k(O,g+I,O,g,I);S=k(O,S-I,O,S,I),this.parameters.wireframe&&this._addWireframeVertices(r,g,S,I)}_addWireframeVertices(e,t,r,i){const s=new Float32Array(e.buffer,r*Float32Array.BYTES_PER_ELEMENT),a=new Float32Array(e.buffer,t*Float32Array.BYTES_PER_ELEMENT,r-t);let n=0;const o=e=>n=k(a,e,s,n,i);for(let l=0;l<a.length-1;l+=2*i)o(l),o(l+2*i),o(l+1*i),o(l+2*i),o(l+1*i),o(l+3*i)}}function k(e,t,r,i,s){for(let a=0;a<s;a++)r[i++]=e[t++];return i}function X(e,t,r){return Y(e,t.get(U.POSITION).data,r?r.get(U.POSITION):null)}function Y(e,t,r){return!!e.isClosed&&(r?r.length>2:t.length>6)}const Q=f(),K=f(),$=f(),ee=f(),te=f(),re=i(),ie=i(),se=f(),ae=f(),ne=d(),oe=d(),le=f(),ce=f(),ue=f(),pe=[i(),i(),i(),i()],he=[f(),f(),f(),f()],me=v(),fe=v(),Te=v(),de=v();export{B as RibbonLineMaterial};
