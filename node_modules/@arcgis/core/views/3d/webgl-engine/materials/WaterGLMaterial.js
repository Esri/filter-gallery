/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{ShaderOutput as e}from"../core/shaderLibrary/ShaderOutputOptions.js";import{ResourceState as t}from"../lib/basicInterfaces.js";import a from"../lib/GLMaterial.js";import{WaterTechnique as r}from"./WaterTechnique.js";class s extends a{updateParameters(e){return this.ensureTechnique(r,e)}setElapsedTimeUniform(e){const t=.001*this._material.animation.time;e.setUniform1f("timeElapsed",t*this._material.parameters.animationSpeed)}_updateShadowState(e){e.shadowMappingEnabled!==this._material.parameters.receiveShadows&&this._material.setParameters({receiveShadows:e.shadowMappingEnabled})}_updateSSRState(e){e.ssrEnabled!==this._material.parameters.ssrEnabled&&this._material.setParameters({ssrEnabled:e.ssrEnabled})}ensureResources(e){const a=this._techniqueRep.constructionContext.waterTextureRepository;return a.ready||a.updating||a.loadTextures(e),a.ready?t.LOADED:t.LOADING}beginSlot(t){return this._output===e.Color&&(this._updateShadowState(t),this._updateSSRState(t)),this.updateParameters(t)}bind(t,a){a.bindPass(this._material.parameters,t),this._output!==e.Normal&&this._output!==e.Color||this.setElapsedTimeUniform(a.program)}}export{s as WaterGLMaterial};
