/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../../chunks/tslib.es6.js";import{getAssetUrl as e}from"../../../../../assets.js";import r from"../../../../../core/Accessor.js";import a from"../../../../../core/Logger.js";import{property as s}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/arrayUtils.js";import"../../../../../core/has.js";import"../../../../../core/accessorSupport/ensureType.js";import{subclass as o}from"../../../../../core/accessorSupport/decorators/subclass.js";import{requestImage as i}from"../../../../../support/requestImageUtils.js";import{ResourceState as p}from"../../lib/basicInterfaces.js";import{TextureType as n,PixelFormat as l,PixelType as m,TextureWrapMode as d,TextureSamplingMode as g}from"../../../../webgl/enums.js";import{Texture as c}from"../../../../webgl/Texture.js";const h=a.getLogger("esri.views.3d.webgl-engine.materials.internal.waterMaterialUtils");let u=class extends r{constructor(){super(...arguments),this._data=new Array,this.loadingState=p.NOT_LOADED}dispose(){this.loadingState=p.NOT_LOADED,this._data.forEach((t=>t.dispose())),this._data.length=0}get updating(){return this.loadingState===p.LOADING}get ready(){return this.loadingState===p.LOADED}loadTextures(t){const r=[e("esri/images/materials/water/normals.jpg"),e("esri/images/materials/water/perturbation.jpg")];this.loadingState=p.LOADING,Promise.all(r.map((t=>i(t)))).then((e=>{e.forEach((e=>this._data.push(new c(t,{target:n.TEXTURE_2D,pixelFormat:l.RGBA,dataType:m.UNSIGNED_BYTE,wrapMode:d.REPEAT,samplingMode:g.LINEAR_MIPMAP_LINEAR,hasMipmap:!0,maxAnisotropy:8,width:e.width,height:e.height},e)))),this.loadingState=p.LOADED})).catch((t=>{h.error("Failed to load textures for water material.",t),this.loadingState=p.NOT_LOADED}))}bind(t){this.ready&&(t.bindTexture(this._data[0],"texWaveNormal"),t.bindTexture(this._data[1],"texWavePerturbation"))}};t([s()],u.prototype,"loadingState",void 0),t([s({type:Boolean,readOnly:!0})],u.prototype,"updating",null),u=t([o("esri.views.3d.webgl-engine.materials.internal.WaterTextureRepository")],u);export{u as WaterTextureRepository};
