/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{unwrap as r}from"../../../../core/maybe.js";import{ShaderOutput as e}from"../core/shaderLibrary/ShaderOutputOptions.js";import{ShaderTechniqueConfiguration as t}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import i from"../lib/GLMaterial.js";import{Material as o,DefaultMaterialParameters as n}from"../lib/Material.js";import{RenderSlot as s}from"../lib/RenderSlot.js";import{DefaultBufferWriter as a,PositionUVLayout as u}from"./internal/DefaultBufferWriter.js";import{intersectTriangleGeometry as l}from"./internal/MaterialUtil.js";import{SlicePlaneMaterialTechnique as c}from"../shaders/SlicePlaneMaterialTechnique.js";class m extends o{constructor(r){super(r,f),this._config=new t}intersect(r,e,t,i,o,n,s){return l(r,e,i,o,n,void 0,s)}createBufferWriter(){return new a(u)}requiresSlot(r){return r===s.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL}createGLMaterial(r){return r.output===e.Color?new h(r):null}getTechniqueConfig(){return this._config}}class h extends i{constructor(r){super(r),this.ensureTechnique(c,null)}updateParameters(){return r(this.technique)}beginSlot(){return r(this.technique)}bind(r,e){e.bindPass(this._material.parameters,r)}}const f={backgroundColor:[1,0,0,.5],gridColor:[0,1,0,.5],gridWidth:4,...n};export{m as SlicePlaneMaterial};
