/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{isSome as t,isNone as o}from"../../../../../core/maybe.js";import{A as s,B as e,t as n}from"../../../../../chunks/vec3.js";import{c as i}from"../../../../../chunks/vec3f64.js";import{create as r}from"../../../../../geometry/support/aaBoundingBox.js";import{BufferViewVec3f as p}from"../../../../../geometry/support/buffer/BufferView.js";import{componentMinimalSizeForIntersectionData as m,ComponentIntersectionData as a}from"./ComponentIntersectionData.js";import{getVisibility as c}from"../../lib/ComponentUtils.js";import{generateDefaultIndexArray as h}from"../../lib/geometryDataUtils.js";import{computeInvDir as f,intersectAabbInvDir as _,intersectTriangles as b}from"../../materials/internal/MaterialUtil.js";class u{constructor(o,s){this._indices=t(o.indices)?o.indices:h(o.positions.length/3),this._positions=new p(o.positions),this._components=s,this._componentIntersectionData=new Array(s.count)}getComponentAabb(o,s){if(t(this._perComponentAabbs)){for(let t=0;t<6;t++)s[t]=this._perComponentAabbs[6*o+t];return s}return this._computePerComponentAabbs(),this.getComponentAabb(o,s)}getComponentPositions(t,o){o.indices=this._indices,o.data=this._positions.typedBuffer,o.stride=this._positions.typedBufferStride,o.startIndex=this._components.offsets[t],o.endIndex=this._components.offsets[t+1]}intersect(s,e,i,r,p,h){const u={data:this._positions.typedBuffer,stride:this._positions.typedBufferStride,size:3},l=this._indices,C=this._components.offsets,y=f(s,e,d);this._components.visibility.forEachComponent((f=>{if(!c(this._components.pickability,f))return!0;const d=this.getComponentAabb(f,A);if(t(p)&&p.applyToAabb(d),!_(d,s,y,i))return!0;const g=C[f]/3,B=C[f+1]/3,j=(t,o,s)=>{h(f,t,n(o,o,r),s)},I=B-g;return o(p)&&I>m?(null==this._componentIntersectionData[f]&&(this._componentIntersectionData[f]=new a(this._indices,g,B,u)),this._componentIntersectionData[f].intersectRay({r0:s,r1:e},j)):b(s,e,g,B,l,u,void 0,p,j),!0}))}_computePerComponentAabbs(){const t=this._components.count;this._perComponentAabbs=new Float32Array(6*t);for(let o=0;o<t;o++)this._computeAABB(o)}_computeAABB(t){const o=this._indices,n=this._positions,i=this._components.offsets,r=i[t],p=i[t+1],m=[0,0,0],a=[1/0,1/0,1/0],c=[-1/0,-1/0,-1/0];for(let f=r;f<p;f++){const t=o[f];n.getVec(t,m),s(a,a,m),e(c,c,m)}let h=6*t;this._perComponentAabbs[h++]=a[0],this._perComponentAabbs[h++]=a[1],this._perComponentAabbs[h++]=a[2],this._perComponentAabbs[h++]=c[0],this._perComponentAabbs[h++]=c[1],this._perComponentAabbs[h]=c[2]}get positions(){return this._positions}get indices(){return this._indices}}const d=i(),A=r();export{u as default};
