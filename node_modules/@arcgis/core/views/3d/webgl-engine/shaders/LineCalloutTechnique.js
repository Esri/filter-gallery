/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import{bindSliceUniformsWithOrigin as r}from"../core/shaderLibrary/Slice.glsl.js";import{bindVerticalOffsetUniforms as t}from"../core/shaderLibrary/attributes/VerticalOffset.glsl.js";import{HUDSpace as i,bindHUDUniforms as s}from"../core/shaderLibrary/hud/HUD.glsl.js";import{bindMultipassGeometryTexture as a}from"../core/shaderLibrary/shading/MultipassGeometryTest.glsl.js";import{bindProjectionMatrix as o,bindViewport as n,bindView as l,bindCameraPosition as p}from"../core/shaderLibrary/util/View.glsl.js";import{ReloadableShaderModule as d}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as m}from"../core/shaderTechnique/ShaderTechnique.js";import{parameter as c,ShaderTechniqueConfiguration as h}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{Default3D as f}from"../lib/DefaultVertexAttributeLocations.js";import{Program as u}from"../lib/Program.js";import{bindScreenSizePerspective as b}from"../materials/internal/MaterialUtil.js";import{b as g,L as v}from"../../../../chunks/LineCallout.glsl.js";import{CompareFunction as E,BlendFactor as S}from"../../../webgl/enums.js";import{makePipelineState as y,defaultDepthWriteParams as P,separateBlendingParams as T,defaultColorWriteParams as x}from"../../../webgl/renderState.js";class j extends m{initializeProgram(e){const r=j.shader.get(),t=this.configuration,i=r.build({occlusionTestEnabled:t.occlusionTestEnabled,verticalOffsetEnabled:t.verticalOffset,screenSizePerspectiveEnabled:t.screenSizePerspective,depthHudEnabled:t.depthHudEnabled,depthHudAlignStartEnabled:t.depthHudAlignStartEnabled,screenCenterOffsetUnitsEnabled:t.screenCenterOffsetUnitsEnabled,slicePlaneEnabled:t.slicePlaneEnabled,sliceHighlightDisabled:!1,sliceEnabledForVertexPrograms:!0,viewingMode:e.viewingMode,isDraped:!1,multipassGeometryEnabled:t.multipassGeometryEnabled});return new u(e.rctx,i,f)}bindPass(e,r){o(this.program,r.camera.projectionMatrix),g(this.program,e,r.camera.pixelRatio||1),t(this.program,e,r),s(this.program,r),this.program.setUniform2fv("nearFar",r.camera.nearFar),this.program.setUniform2fv("inverseViewport",r.inverseViewport),a(this.program,r),this.program.bindTexture(r.hudVisibilityTexture,"hudVisibilityTexture"),this.program.setUniform1f("cameraGroundRelative",r.camera.aboveGround?1:-1),this.program.setUniform1f("polygonOffset",e.shaderPolygonOffset),n(this.program,r),this.program.setUniform1f("perDistancePixelRatio",Math.tan(r.camera.fovY/2)/(r.camera.fullViewport[2]/2)),this.program.setUniformMatrix4fv("viewNormal",r.camera.viewInverseTransposeMatrix),this.program.setUniform2f("pixelToNDC",2/r.camera.fullViewport[2],2/r.camera.fullViewport[3]);const i=r.camera.pixelRatio||1;this.program.setUniform1f("lineSize",Math.ceil(e.size)*i),b(e.screenSizePerspective,this.program,"screenSizePerspectiveAlignment")}bindDraw(e){l(this.program,e),p(this.program,e.origin,e.camera.viewInverseTransposeMatrix),r(this.program,this.configuration,e),this.program.rebindTextures()}setPipelineState(e){const r=e?E.ALWAYS:E.LESS;return this.configuration.depthHudEnabled?y({depthTest:{func:r},depthWrite:P}):y({blending:T(S.ONE,S.SRC_ALPHA,S.ONE_MINUS_SRC_ALPHA,S.ONE_MINUS_SRC_ALPHA),depthTest:{func:r},colorWrite:x})}initializePipeline(){return this.setPipelineState(this.configuration.multipassGeometryEnabled)}}j.shader=new d(v,(()=>import("./LineCallout.glsl.js")));class U extends h{constructor(){super(...arguments),this.occlusionTestEnabled=!0,this.verticalOffset=!1,this.screenSizePerspective=!1,this.depthHudEnabled=!1,this.depthHudAlignStartEnabled=!1,this.screenCenterOffsetUnitsEnabled=i.World,this.slicePlaneEnabled=!1,this.multipassGeometryEnabled=!1}}e([c()],U.prototype,"occlusionTestEnabled",void 0),e([c()],U.prototype,"verticalOffset",void 0),e([c()],U.prototype,"screenSizePerspective",void 0),e([c()],U.prototype,"depthHudEnabled",void 0),e([c()],U.prototype,"depthHudAlignStartEnabled",void 0),e([c({count:i.COUNT})],U.prototype,"screenCenterOffsetUnitsEnabled",void 0),e([c()],U.prototype,"slicePlaneEnabled",void 0),e([c()],U.prototype,"multipassGeometryEnabled",void 0);export{j as LineCalloutTechnique,U as LineCalloutTechniqueConfiguration};
