/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import{isSome as t,unwrap as i,unwrapOr as r}from"../../../../core/maybe.js";import{a as o}from"../../../../chunks/mat4.js";import{sm4d as s}from"../../../../geometry/support/vectorStacks.js";import{ShaderOutput as n}from"../core/shaderLibrary/ShaderOutputOptions.js";import{bindSliceUniforms as p}from"../core/shaderLibrary/Slice.glsl.js";import{bindOutputHighlight as l}from"../core/shaderLibrary/output/OutputHighlight.glsl.js";import{bindMultipassTerrainTexture as a}from"../core/shaderLibrary/shading/MultipassTerrainTest.glsl.js";import{bindVisualVariablesUniformsWithOpacity as c}from"../core/shaderLibrary/shading/VisualVariables.glsl.js";import{bindProjectionMatrix as d,bindView as h,bindCameraPosition as f}from"../core/shaderLibrary/util/View.glsl.js";import{ReloadableShaderModule as u}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as m}from"../core/shaderTechnique/ShaderTechnique.js";import{parameter as g,ShaderTechniqueConfiguration as T}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{TransparencyPassType as b}from"../lib/basicInterfaces.js";import{blendingDefault as v,oitBlending as y,oitDepthTest as E,oitDepthWrite as P,OITPolygonOffset as O}from"../lib/OrderIndependentTransparency.js";import{Program as S}from"../lib/Program.js";import{RenderSlot as C}from"../lib/RenderSlot.js";import{stencilWriteMaskOn as U,stencilToolMaskBaseParams as R,stencilBaseAllZerosParams as x,depthCompareAlways as j,stencilToolTransparentOccluderParams as w,stencilWriteMaskOff as W,stencilToolMaskOccluderParams as A,depthCompareLess as L}from"../lib/StencilUtils.js";import{VertexAttribute as I}from"../lib/VertexAttribute.js";import{C as N,R as _}from"../../../../chunks/RibbonLine.glsl.js";import{PrimitiveType as z}from"../../../webgl/enums.js";import{makePipelineState as M,defaultDepthWriteParams as V,defaultColorWriteParams as D}from"../../../webgl/renderState.js";const F=new Map([[I.POSITION,0],[I.SUBDIVISIONFACTOR,1],[I.UV0,2],[I.AUXPOS1,3],[I.AUXPOS2,4],[I.SIZE,6],[I.SIZEFEATUREATTRIBUTE,6],[I.COLOR,5],[I.COLORFEATUREATTRIBUTE,5],[I.OPACITYFEATUREATTRIBUTE,7]]);class k extends m{constructor(e,t,i){super(e,t,i),this.stippleTextureRepository=e.stippleTextureRepository}get stippleEnabled(){return this.configuration.stippleEnabled&&this.configuration.output!==n.Highlight}initializeProgram(e){const t=k.shader.get(),i=this.configuration,r=t.build({oitEnabled:i.transparencyPassType===b.Color,output:i.output,slicePlaneEnabled:i.slicePlaneEnabled,sliceHighlightDisabled:!1,sliceEnabledForVertexPrograms:!1,draped:i.draped,stippleEnabled:this.stippleEnabled,stippleOffColorEnabled:i.stippleOffColorEnabled,stippleRequiresClamp:!0,stippleScaleWithLineWidth:i.stippleScaleWithLineWidth,stipplePreferContinuous:i.stipplePreferContinuous,capType:i.capType,roundJoins:i.roundJoins,vvColor:i.vvColor,vvSize:i.vvSize,vvInstancingEnabled:!0,vvOpacity:i.vvOpacity,falloffEnabled:i.falloffEnabled,innerColorEnabled:i.innerColorEnabled,multipassTerrainEnabled:i.multipassTerrainEnabled,cullAboveGround:i.cullAboveGround,wireframe:i.wireframe});return new S(e.rctx,r,F)}destroy(){super.destroy(),this.stippleTextureRepository.release(this.stipplePattern),this.stipplePattern=null,this.stippleTextureBind=null}bindPass(e,o){if(d(this.program,o.camera.projectionMatrix),this.configuration.output===n.Highlight&&l(this.program,o),o.multipassTerrainEnabled&&(this.program.setUniform2fv("inverseViewport",o.inverseViewport),a(this.program,o)),this.program.setUniform1f("intrinsicWidth",e.width),this.program.setUniform4fv("intrinsicColor",e.color),this.program.setUniform1f("miterLimit","miter"!==e.join?0:e.miterLimit),this.program.setUniform2fv("nearFar",o.camera.nearFar),this.program.setUniform1f("pixelRatio",o.camera.pixelRatio),this.program.setUniform2f("screenSize",o.camera.fullViewport[2],o.camera.fullViewport[3]),c(this.program,e),this.stipplePattern!==e.stipplePattern){const t=e.stipplePattern;this.stippleTextureBind=this.stippleTextureRepository.swap(this.stipplePattern,t),this.stipplePattern=t}if(this.stippleEnabled){const{pixelSize:r,sdfNormalizer:s,pixels:n}=t(this.stippleTextureBind)?this.stippleTextureBind(this.program):{pixelSize:1,sdfNormalizer:1,pixels:1};if(this.program.setUniform1f("stipplePatternSDFNormalizer",s),this.program.setUniform1f("stipplePatternTextureSize",n),this.program.setUniform1f("stipplePatternPixelSize",r),this.program.setUniform1f("stipplePatternPixelSizeInv",1/r),this.configuration.draped?this.program.setUniform1f("worldToScreenRatio",1/o.screenToPCSRatio):this.program.setUniform1f("worldToScreenPerDistanceRatio",1/o.camera.perScreenPixelRatio),this.configuration.stippleOffColorEnabled){const t=i(e.stippleOffColor);this.program.setUniform4f("stippleOffColor",t[0],t[1],t[2],t.length>3?t[3]:1)}}this.configuration.falloffEnabled&&this.program.setUniform1f("falloff",e.falloff),this.configuration.innerColorEnabled&&(this.program.setUniform4fv("innerColor",r(e.innerColor,e.color)),this.program.setUniform1f("innerWidth",e.innerWidth*o.camera.pixelRatio))}bindDraw(e){h(this.program,e),this.stippleEnabled&&!this.configuration.draped&&f(this.program,e.origin,e.camera.viewInverseTransposeMatrix),p(this.program,this.configuration,e.slicePlane,{origin:e.origin,view:e.camera.viewMatrix}),this.program.setUniformMatrix4fv("inverseProjectionMatrix",o(s.get(),e.camera.projectionMatrix)),this.program.rebindTextures()}_makePipelineState(e,t){const i=this.configuration,r=e===b.NONE,o=e===b.FrontFace;return M({blending:i.output===n.Color||i.output===n.Alpha?r?v:y(e):null,depthTest:{func:E(e)},depthWrite:r?i.writeDepth&&V:P(e),colorWrite:D,stencilWrite:i.sceneHasOcludees?U:null,stencilTest:i.sceneHasOcludees?t?R:x:null,polygonOffset:r||o?i.polygonOffset&&B:O})}initializePipeline(){const e=this.configuration,t=e.polygonOffset&&B;return e.occluder&&(this._occluderPipelineTransparent=M({blending:v,polygonOffset:t,depthTest:j,depthWrite:null,colorWrite:D,stencilWrite:null,stencilTest:w}),this._occluderPipelineOpaque=M({blending:v,polygonOffset:t,depthTest:j,depthWrite:null,colorWrite:D,stencilWrite:W,stencilTest:A}),this._occluderPipelineMaskWrite=M({blending:null,polygonOffset:t,depthTest:L,depthWrite:null,colorWrite:null,stencilWrite:U,stencilTest:R})),this._occludeePipelineState=this._makePipelineState(this.configuration.transparencyPassType,!0),this._makePipelineState(this.configuration.transparencyPassType,!1)}get primitiveType(){return this.configuration.wireframe?z.LINES:z.TRIANGLE_STRIP}getPipelineState(e,t){return t?this._occludeePipelineState:this.configuration.occluder?e===C.TRANSPARENT_OCCLUDER_MATERIAL?this._occluderPipelineTransparent:e===C.OCCLUDER_MATERIAL?this._occluderPipelineOpaque:this._occluderPipelineMaskWrite:super.getPipelineState(e,t)}}k.shader=new u(_,(()=>import("./RibbonLine.glsl.js")));const B={factor:0,units:-4};class q extends T{constructor(){super(...arguments),this.output=n.Color,this.occluder=!1,this.slicePlaneEnabled=!1,this.transparent=!1,this.polygonOffset=!1,this.writeDepth=!1,this.draped=!1,this.stippleEnabled=!1,this.stippleOffColorEnabled=!1,this.stippleScaleWithLineWidth=!1,this.stipplePreferContinuous=!0,this.capType=N.BUTT,this.roundJoins=!1,this.vvSize=!1,this.vvColor=!1,this.vvOpacity=!1,this.falloffEnabled=!1,this.innerColorEnabled=!1,this.sceneHasOcludees=!1,this.transparencyPassType=b.NONE,this.multipassTerrainEnabled=!1,this.cullAboveGround=!1,this.wireframe=!1}}e([g({count:n.COUNT})],q.prototype,"output",void 0),e([g()],q.prototype,"occluder",void 0),e([g()],q.prototype,"slicePlaneEnabled",void 0),e([g()],q.prototype,"transparent",void 0),e([g()],q.prototype,"polygonOffset",void 0),e([g()],q.prototype,"writeDepth",void 0),e([g()],q.prototype,"draped",void 0),e([g()],q.prototype,"stippleEnabled",void 0),e([g()],q.prototype,"stippleOffColorEnabled",void 0),e([g()],q.prototype,"stippleScaleWithLineWidth",void 0),e([g()],q.prototype,"stipplePreferContinuous",void 0),e([g({count:N.COUNT})],q.prototype,"capType",void 0),e([g()],q.prototype,"roundJoins",void 0),e([g()],q.prototype,"vvSize",void 0),e([g()],q.prototype,"vvColor",void 0),e([g()],q.prototype,"vvOpacity",void 0),e([g()],q.prototype,"falloffEnabled",void 0),e([g()],q.prototype,"innerColorEnabled",void 0),e([g()],q.prototype,"sceneHasOcludees",void 0),e([g({count:b.COUNT})],q.prototype,"transparencyPassType",void 0),e([g()],q.prototype,"multipassTerrainEnabled",void 0),e([g()],q.prototype,"cullAboveGround",void 0),e([g()],q.prototype,"wireframe",void 0);export{k as RibbonLineTechnique,q as RibbonLineTechniqueConfiguration,F as ribbonVertexAttributeLocations};
