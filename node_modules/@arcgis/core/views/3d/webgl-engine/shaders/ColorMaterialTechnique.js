/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import{ShaderOutput as t}from"../core/shaderLibrary/ShaderOutputOptions.js";import{bindSliceUniformsWithOrigin as r}from"../core/shaderLibrary/Slice.glsl.js";import{bindOutputHighlight as i}from"../core/shaderLibrary/output/OutputHighlight.glsl.js";import{bindMultipassTerrainTexture as o}from"../core/shaderLibrary/shading/MultipassTerrainTest.glsl.js";import{bindProjectionMatrix as s,bindView as a}from"../core/shaderLibrary/util/View.glsl.js";import{ReloadableShaderModule as n}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as l}from"../core/shaderTechnique/ShaderTechnique.js";import{parameter as p,ShaderTechniqueConfiguration as c}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{CullFaceOptions as u,TransparencyPassType as h}from"../lib/basicInterfaces.js";import{Default3D as d}from"../lib/DefaultVertexAttributeLocations.js";import{blendingDefault as m,oitBlending as f,oitDepthTest as g,getOITPolygonOffset as b}from"../lib/OrderIndependentTransparency.js";import{Program as y}from"../lib/Program.js";import{stencilWriteMaskOn as T,stencilToolMaskBaseParams as v,stencilBaseAllZerosParams as P}from"../lib/StencilUtils.js";import{C as O}from"../../../../chunks/ColorMaterial.glsl.js";import{makePipelineState as j,cullingParams as C,defaultDepthWriteParams as E,defaultColorWriteParams as x}from"../../../webgl/renderState.js";class S extends l{initializeProgram(e){const t=S.shader.get(),r=this.configuration,i=t.build({output:r.output,oitEnabled:r.transparencyPassType===h.Color,attributeColor:r.vertexColors,slicePlaneEnabled:r.slicePlaneEnabled,sliceHighlightDisabled:!1,sliceEnabledForVertexPrograms:!1,multipassTerrainEnabled:r.multipassTerrainEnabled,cullAboveGround:r.cullAboveGround});return new y(e.rctx,i,d)}bindPass(e,r){s(this.program,r.camera.projectionMatrix),this.program.setUniform4fv("eColor",e.color),this.configuration.output===t.Highlight&&i(this.program,r),(this.configuration.output===t.Depth||r.multipassTerrainEnabled)&&this.program.setUniform2fv("nearFar",r.camera.nearFar),r.multipassTerrainEnabled&&(this.program.setUniform2fv("inverseViewport",r.inverseViewport),o(this.program,r))}bindDraw(e){a(this.program,e),this.program.rebindTextures(),r(this.program,this.configuration,e)}_createPipeline(e,r){const i=this.configuration,o=e===h.NONE,s=e===h.FrontFace;return j({blending:i.output!==t.Color&&i.output!==t.Alpha||!i.transparent?null:o?m:f(e),culling:C(i.cullFace),depthTest:{func:g(e)},depthWrite:o||s?i.writeDepth&&E:null,colorWrite:x,stencilWrite:i.sceneHasOcludees?T:null,stencilTest:i.sceneHasOcludees?r?v:P:null,polygonOffset:o||s?i.polygonOffset&&w:b(i.enableOffset)})}initializePipeline(){return this._occludeePipelineState=this._createPipeline(this.configuration.transparencyPassType,!0),this._createPipeline(this.configuration.transparencyPassType,!1)}getPipelineState(e,t){return t?this._occludeePipelineState:super.getPipelineState(e,t)}}S.shader=new n(O,(()=>import("./ColorMaterial.glsl.js")));const w={factor:1,units:1};class F extends c{constructor(){super(...arguments),this.output=t.Color,this.cullFace=u.None,this.slicePlaneEnabled=!1,this.vertexColors=!1,this.transparent=!1,this.polygonOffset=!1,this.enableOffset=!0,this.writeDepth=!0,this.sceneHasOcludees=!1,this.transparencyPassType=h.NONE,this.multipassTerrainEnabled=!1,this.cullAboveGround=!1}}e([p({count:t.COUNT})],F.prototype,"output",void 0),e([p({count:u.COUNT})],F.prototype,"cullFace",void 0),e([p()],F.prototype,"slicePlaneEnabled",void 0),e([p()],F.prototype,"vertexColors",void 0),e([p()],F.prototype,"transparent",void 0),e([p()],F.prototype,"polygonOffset",void 0),e([p()],F.prototype,"enableOffset",void 0),e([p()],F.prototype,"writeDepth",void 0),e([p()],F.prototype,"sceneHasOcludees",void 0),e([p({count:h.COUNT})],F.prototype,"transparencyPassType",void 0),e([p()],F.prototype,"multipassTerrainEnabled",void 0),e([p()],F.prototype,"cullAboveGround",void 0);export{S as ColorMaterialTechnique,F as ColorMaterialTechniqueConfiguration};
