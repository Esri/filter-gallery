/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import{ShaderOutput as r}from"../core/shaderLibrary/ShaderOutputOptions.js";import{PBRMode as i}from"../core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js";import{OverlayMode as t}from"../core/shaderLibrary/terrain/Overlay.glsl.js";import{T as o}from"../../../../chunks/Terrain.glsl.js";import{ReloadableShaderModule as s}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as d}from"../core/shaderTechnique/ShaderTechnique.js";import{parameter as n,ShaderTechniqueConfiguration as l}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{StencilBits as a}from"../lib/basicInterfaces.js";import{Default3D as c}from"../lib/DefaultVertexAttributeLocations.js";import{Program as p}from"../lib/Program.js";import{renderWhenBitIsNotSet as u}from"../lib/StencilUtils.js";import{BlendFactor as h,CompareFunction as b}from"../../../webgl/enums.js";import{makePipelineState as m,simpleBlendingParams as g,backFaceCullingParams as v,defaultDepthWriteParams as y,defaultColorWriteParams as S}from"../../../webgl/renderState.js";class f extends d{constructor(){super(...arguments),this.useStencil=!1}initializeProgram(e){const r=f.shader.get(),t=this.configuration,o=r.build({overlayMode:t.overlayMode,output:t.output,viewingMode:e.viewingMode,slicePlaneEnabled:t.slicePlaneEnabled,sliceHighlightDisabled:!1,sliceEnabledForVertexPrograms:!1,textureFadingEnabled:t.textureFadingEnabled&&!t.renderOccluded,hasBackgroundColor:t.hasBackgroundColor,useGrid:t.useGrid,receiveShadows:t.receiveShadows&&!t.renderOccluded,receiveAmbientOcclusion:!1,atmosphere:t.atmosphere,tileBorders:t.tileBorders,screenSizePerspective:t.screenSizePerspective,pbrMode:i.Disabled,ssrEnabled:t.ssrEnabled,highStepCount:!1});return new p(e.rctx,o,c)}initializePipeline(){return this._stencilPipelineState=this._createPipeline(!0),this._createPipeline(!1)}_createPipeline(e){const r=this.configuration,i=r.backfaceCullingEnabled&&!r.renderOccluded;return m({blending:r.renderOccluded?g(h.ONE,h.ONE_MINUS_SRC_ALPHA):null,culling:i&&v,depthTest:!r.renderOccluded&&{func:b.LESS},depthWrite:!r.renderOccluded&&y,colorWrite:S,stencilTest:e?u(a.IntegratedMeshMaskExcluded):null})}getPipelineState(e,r){return this.useStencil?this._stencilPipelineState:super.getPipelineState(e,r)}}f.shader=new s(o,(()=>import("../core/shaderLibrary/terrain/Terrain.glsl.js")));class E extends l{constructor(){super(...arguments),this.output=r.Color,this.overlayMode=t.Disabled,this.atmosphere=!1,this.receiveShadows=!1,this.slicePlaneEnabled=!1,this.backfaceCullingEnabled=!1,this.stencilEnabled=!1,this.textureFadingEnabled=!1,this.hasBackgroundColor=!1,this.useGrid=!1,this.renderOccluded=!1,this.ssrEnabled=!1,this.tileBorders=!1,this.screenSizePerspective=!1}}e([n({count:r.COUNT})],E.prototype,"output",void 0),e([n({count:t.COUNT})],E.prototype,"overlayMode",void 0),e([n()],E.prototype,"atmosphere",void 0),e([n()],E.prototype,"receiveShadows",void 0),e([n()],E.prototype,"slicePlaneEnabled",void 0),e([n()],E.prototype,"backfaceCullingEnabled",void 0),e([n()],E.prototype,"stencilEnabled",void 0),e([n()],E.prototype,"textureFadingEnabled",void 0),e([n()],E.prototype,"hasBackgroundColor",void 0),e([n()],E.prototype,"useGrid",void 0),e([n()],E.prototype,"renderOccluded",void 0),e([n()],E.prototype,"ssrEnabled",void 0),e([n()],E.prototype,"tileBorders",void 0),e([n()],E.prototype,"screenSizePerspective",void 0);export{f as TerrainTechnique,E as TerrainTechniqueConfiguration};
