/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import t from"../../../../core/Logger.js";import{isSome as r}from"../../../../core/maybe.js";import{f as o}from"../../../../chunks/vec3f64.js";import{ShaderOutput as i}from"../core/shaderLibrary/ShaderOutputOptions.js";import{bindSliceUniforms as s}from"../core/shaderLibrary/Slice.glsl.js";import{bindCustomOrigin as a}from"../core/shaderLibrary/attributes/InstancedDoublePrecision.glsl.js";import{NormalAttributeType as n}from"../core/shaderLibrary/attributes/NormalAttribute.glsl.js";import{TextureCoordinateAttributeType as l}from"../core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js";import{bindVerticalOffsetUniforms as p}from"../core/shaderLibrary/attributes/VerticalOffset.glsl.js";import{bindOutputHighlight as c}from"../core/shaderLibrary/output/OutputHighlight.glsl.js";import{bindMultipassTerrainTexture as u}from"../core/shaderLibrary/shading/MultipassTerrainTest.glsl.js";import{NormalsDoubleSidedMode as h}from"../core/shaderLibrary/shading/Normals.glsl.js";import{PBRMode as d,bindPBRUniforms as m}from"../core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js";import{bindReadShadowMapViewCustomOrigin as f}from"../core/shaderLibrary/shading/ReadShadowMap.glsl.js";import{bindVisualVariablesUniformsForSymbols as g}from"../core/shaderLibrary/shading/VisualVariables.glsl.js";import{doublePrecisionRequiresObfuscation as v}from"../core/shaderLibrary/util/DoublePrecision.glsl.js";import{bindProjectionMatrix as b,bindViewCustomOrigin as y,bindCameraPosition as T}from"../core/shaderLibrary/util/View.glsl.js";import{ReloadableShaderModule as x}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as M}from"../core/shaderTechnique/ShaderTechnique.js";import{parameter as P,ShaderTechniqueConfiguration as C}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{AlphaDiscardMode as S,CullFaceOptions as O,TransparencyPassType as D,DepthTestFunction as j}from"../lib/basicInterfaces.js";import{Default3D as A}from"../lib/DefaultVertexAttributeLocations.js";import{blendingDefault as w,oitBlending as E,oitDepthTest as N,getOITPolygonOffset as U}from"../lib/OrderIndependentTransparency.js";import{Program as L}from"../lib/Program.js";import{stencilWriteMaskOn as z,stencilToolMaskBaseParams as F,stencilBaseAllZerosParams as R}from"../lib/StencilUtils.js";import{colorMixModes as H,bindScreenSizePerspective as B}from"../materials/internal/MaterialUtil.js";import{D as k}from"../../../../chunks/DefaultMaterial.glsl.js";import{CompareFunction as q}from"../../../webgl/enums.js";import{makePipelineState as I,cullingParams as V,defaultDepthWriteParams as _,defaultColorWriteParams as G}from"../../../webgl/renderState.js";const W=t.getLogger("esri.views.3d.webgl-engine.shaders.DefaultTechnique");class Q extends M{initializeProgram(e){const t=Q.shader.get(),r=this.configuration,o=t.build({oitEnabled:r.transparencyPassType===D.Color,output:r.output,viewingMode:e.viewingMode,receiveShadows:r.receiveShadows,slicePlaneEnabled:r.slicePlaneEnabled,sliceHighlightDisabled:r.sliceHighlightDisabled,sliceEnabledForVertexPrograms:!1,symbolColor:r.symbolColors,vvSize:r.vvSize,vvColor:r.vvColor,vvInstancingEnabled:!0,instanced:r.instanced,instancedColor:r.instancedColor,instancedDoublePrecision:r.instancedDoublePrecision,pbrMode:r.usePBR?r.isSchematic?d.Schematic:d.Normal:d.Disabled,hasMetalnessAndRoughnessTexture:r.hasMetalnessAndRoughnessTexture,hasEmissionTexture:r.hasEmissionTexture,hasOcclusionTexture:r.hasOcclusionTexture,hasNormalTexture:r.hasNormalTexture,hasColorTexture:r.hasColorTexture,hasModelTransformation:r.hasModelTransformation,receiveAmbientOcclusion:r.receiveAmbientOcclusion,useCustomDTRExponentForWater:!1,normalType:r.normalsTypeDerivate?n.ScreenDerivative:n.Attribute,doubleSidedMode:r.doubleSidedMode,vertexTangents:r.vertexTangents,attributeTextureCoordinates:r.hasMetalnessAndRoughnessTexture||r.hasEmissionTexture||r.hasOcclusionTexture||r.hasNormalTexture||r.hasColorTexture?l.Default:l.None,textureAlphaPremultiplied:r.textureAlphaPremultiplied,attributeColor:r.vertexColors,screenSizePerspectiveEnabled:r.screenSizePerspective,verticalOffsetEnabled:r.verticalOffset,offsetBackfaces:r.offsetBackfaces,doublePrecisionRequiresObfuscation:v(e.rctx),alphaDiscardMode:r.alphaDiscardMode,supportsTextureAtlas:!1,multipassTerrainEnabled:r.multipassTerrainEnabled,cullAboveGround:r.cullAboveGround});return new L(e.rctx,o,A)}bindPass(e,t){var o,s;b(this.program,t.camera.projectionMatrix);const a=this.configuration.output;this.configuration.hasModelTransformation&&(r(e.modelTransformation)?this.program.setUniformMatrix4fv("model",e.modelTransformation):W.warnOnce("hasModelTransformation true, but no modelTransformation found.")),(this.configuration.output===i.Depth||t.multipassTerrainEnabled||a===i.Shadow)&&this.program.setUniform2fv("nearFar",t.camera.nearFar),t.multipassTerrainEnabled&&(this.program.setUniform2fv("inverseViewport",t.inverseViewport),u(this.program,t)),a===i.Alpha&&(this.program.setUniform1f("opacity",e.opacity),this.program.setUniform1f("layerOpacity",e.layerOpacity),this.program.setUniform4fv("externalColor",e.externalColor),this.program.setUniform1i("colorMixMode",H[e.colorMixMode])),a===i.Color?(t.lighting.setUniforms(this.program,!1,t.hasFillLights),this.program.setUniform3fv("ambient",e.ambient),this.program.setUniform3fv("diffuse",e.diffuse),this.program.setUniform4fv("externalColor",e.externalColor),this.program.setUniform1i("colorMixMode",H[e.colorMixMode]),this.program.setUniform1f("opacity",e.opacity),this.program.setUniform1f("layerOpacity",e.layerOpacity),this.configuration.usePBR&&m(this.program,e,this.configuration.isSchematic)):a===i.Highlight&&c(this.program,t),g(this.program,e),p(this.program,e,t),B(e.screenSizePerspective,this.program,"screenSizePerspectiveAlignment"),e.textureAlphaMode!==S.Mask&&e.textureAlphaMode!==S.MaskBlend||this.program.setUniform1f("textureAlphaCutoff",e.textureAlphaCutoff),null==(o=t.shadowMap)||o.bind(this.program),null==(s=t.ssaoHelper)||s.bind(this.program,t.camera)}bindDraw(e){const t=this.configuration.instancedDoublePrecision?o(e.camera.viewInverseTransposeMatrix[3],e.camera.viewInverseTransposeMatrix[7],e.camera.viewInverseTransposeMatrix[11]):e.origin;y(this.program,t,e.camera.viewMatrix),this.program.rebindTextures(),(this.configuration.output===i.Color||this.configuration.output===i.Alpha||this.configuration.output===i.Depth&&this.configuration.screenSizePerspective||this.configuration.output===i.Normal&&this.configuration.screenSizePerspective||this.configuration.output===i.Highlight&&this.configuration.screenSizePerspective)&&T(this.program,t,e.camera.viewInverseTransposeMatrix),this.configuration.output===i.Normal&&this.program.setUniformMatrix4fv("viewNormal",e.camera.viewInverseTransposeMatrix),this.configuration.instancedDoublePrecision&&a(this.program,t),s(this.program,this.configuration,e.slicePlane,{origin:t}),this.configuration.output===i.Color&&f(this.program,e,t)}_convertDepthTestFunction(e){return e===j.Lequal?q.LEQUAL:q.LESS}_setPipeline(e,t){const r=this.configuration,o=e===D.NONE,s=e===D.FrontFace;return I({blending:r.output!==i.Color&&r.output!==i.Alpha||!r.transparent?null:o?w:E(e),culling:J(r)&&V(r.cullFace),depthTest:{func:N(e,this._convertDepthTestFunction(r.customDepthTest))},depthWrite:o||s?r.writeDepth&&_:null,colorWrite:G,stencilWrite:r.sceneHasOcludees?z:null,stencilTest:r.sceneHasOcludees?t?F:R:null,polygonOffset:o||s?null:U(r.enableOffset)})}initializePipeline(){return this._occludeePipelineState=this._setPipeline(this.configuration.transparencyPassType,!0),this._setPipeline(this.configuration.transparencyPassType,!1)}getPipelineState(e,t){return t?this._occludeePipelineState:super.getPipelineState(e,t)}}function J(e){return e.cullFace?e.cullFace!==O.None:!e.slicePlaneEnabled&&(!e.transparent&&!e.doubleSidedMode)}Q.shader=new x(k,(()=>import("./DefaultMaterial.glsl.js")));class K extends C{constructor(){super(...arguments),this.output=i.Color,this.alphaDiscardMode=S.Opaque,this.doubleSidedMode=h.None,this.isSchematic=!1,this.vertexColors=!1,this.offsetBackfaces=!1,this.symbolColors=!1,this.vvSize=!1,this.vvColor=!1,this.verticalOffset=!1,this.receiveShadows=!1,this.slicePlaneEnabled=!1,this.sliceHighlightDisabled=!1,this.receiveAmbientOcclusion=!1,this.screenSizePerspective=!1,this.textureAlphaPremultiplied=!1,this.hasColorTexture=!1,this.usePBR=!1,this.hasMetalnessAndRoughnessTexture=!1,this.hasEmissionTexture=!1,this.hasOcclusionTexture=!1,this.hasNormalTexture=!1,this.instanced=!1,this.instancedColor=!1,this.instancedDoublePrecision=!1,this.vertexTangents=!1,this.normalsTypeDerivate=!1,this.writeDepth=!0,this.sceneHasOcludees=!1,this.transparent=!1,this.enableOffset=!0,this.cullFace=O.None,this.transparencyPassType=D.NONE,this.multipassTerrainEnabled=!1,this.cullAboveGround=!1,this.hasModelTransformation=!1,this.customDepthTest=j.Less}}e([P({count:i.COUNT})],K.prototype,"output",void 0),e([P({count:S.COUNT})],K.prototype,"alphaDiscardMode",void 0),e([P({count:h.COUNT})],K.prototype,"doubleSidedMode",void 0),e([P()],K.prototype,"isSchematic",void 0),e([P()],K.prototype,"vertexColors",void 0),e([P()],K.prototype,"offsetBackfaces",void 0),e([P()],K.prototype,"symbolColors",void 0),e([P()],K.prototype,"vvSize",void 0),e([P()],K.prototype,"vvColor",void 0),e([P()],K.prototype,"verticalOffset",void 0),e([P()],K.prototype,"receiveShadows",void 0),e([P()],K.prototype,"slicePlaneEnabled",void 0),e([P()],K.prototype,"sliceHighlightDisabled",void 0),e([P()],K.prototype,"receiveAmbientOcclusion",void 0),e([P()],K.prototype,"screenSizePerspective",void 0),e([P()],K.prototype,"textureAlphaPremultiplied",void 0),e([P()],K.prototype,"hasColorTexture",void 0),e([P()],K.prototype,"usePBR",void 0),e([P()],K.prototype,"hasMetalnessAndRoughnessTexture",void 0),e([P()],K.prototype,"hasEmissionTexture",void 0),e([P()],K.prototype,"hasOcclusionTexture",void 0),e([P()],K.prototype,"hasNormalTexture",void 0),e([P()],K.prototype,"instanced",void 0),e([P()],K.prototype,"instancedColor",void 0),e([P()],K.prototype,"instancedDoublePrecision",void 0),e([P()],K.prototype,"vertexTangents",void 0),e([P()],K.prototype,"normalsTypeDerivate",void 0),e([P()],K.prototype,"writeDepth",void 0),e([P()],K.prototype,"sceneHasOcludees",void 0),e([P()],K.prototype,"transparent",void 0),e([P()],K.prototype,"enableOffset",void 0),e([P({count:O.COUNT})],K.prototype,"cullFace",void 0),e([P({count:D.COUNT})],K.prototype,"transparencyPassType",void 0),e([P()],K.prototype,"multipassTerrainEnabled",void 0),e([P()],K.prototype,"cullAboveGround",void 0),e([P()],K.prototype,"hasModelTransformation",void 0),e([P({count:j.COUNT})],K.prototype,"customDepthTest",void 0);export{Q as DefaultMaterialTechnique,K as DefaultMaterialTechniqueConfiguration};
