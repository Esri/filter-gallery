/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import{ReloadableShaderModule as r}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as t}from"../core/shaderTechnique/ShaderTechnique.js";import{parameter as i,ShaderTechniqueConfiguration as s}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{Default3D as o}from"../lib/DefaultVertexAttributeLocations.js";import{blendingDefault as n}from"../lib/OrderIndependentTransparency.js";import{Program as a}from"../lib/Program.js";import{H as m}from"../../../../chunks/Heatmap.glsl.js";import{PrimitiveType as p}from"../../../webgl/enums.js";import{makePipelineState as d,defaultColorWriteParams as l}from"../../../webgl/renderState.js";import{H as u}from"../../../../chunks/HeatmapDensity.glsl.js";export{H as HeatmapMode}from"../../../../chunks/HeatmapDensity.glsl.js";class h extends t{constructor(e,r){super(e,r,(()=>this.destroy()))}initializeProgram(e){const r=h.shader.get().build({mode:this.configuration.mode});return new a(e.rctx,r,o)}initializePipeline(e){return d({blending:n,colorWrite:l,depthTest:null,depthWrite:null})}bindPass(e,r){const{densityMap:t,colorRamp:i,maxDensity:s,minDensity:o,searchRadius:n}=e;this.program.bindTexture(t,"densityMap"),this.program.bindTexture(i,"tex"),this.configuration.mode===u.KernelDensity&&this.program.setUniform1f("densityMultiplier",3/(n*n*Math.PI)),this.program.setUniform1f("densityNormalizer",1/(s-o)),this.program.setUniform1f("minDensity",o)}get primitiveType(){return p.TRIANGLE_STRIP}}h.shader=new r(m,(()=>import("./Heatmap.glsl.js")));class c extends s{constructor(){super(...arguments),this.mode=u.GaussianBlur}}e([i()],c.prototype,"mode",void 0);export{h as HeatmapTechnique,c as HeatmapTechniqueConfiguration};
