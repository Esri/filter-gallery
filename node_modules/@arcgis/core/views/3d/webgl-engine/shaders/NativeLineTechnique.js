/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import{isSome as t,unwrap as i}from"../../../../core/maybe.js";import{ShaderOutput as r}from"../core/shaderLibrary/ShaderOutputOptions.js";import{bindSliceUniformsWithOrigin as s}from"../core/shaderLibrary/Slice.glsl.js";import{bindOutputHighlight as o}from"../core/shaderLibrary/output/OutputHighlight.glsl.js";import{bindProjectionMatrix as p,bindView as l,bindCameraPosition as n}from"../core/shaderLibrary/util/View.glsl.js";import{ReloadableShaderModule as a}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as u}from"../core/shaderTechnique/ShaderTechnique.js";import{parameter as h,ShaderTechniqueConfiguration as d}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{Default3D as c}from"../lib/DefaultVertexAttributeLocations.js";import{Program as m}from"../lib/Program.js";import{depthCompareLess as f,stencilWriteMaskOn as g,stencilToolMaskBaseParams as b,stencilBaseAllZerosParams as P}from"../lib/StencilUtils.js";import{N as x}from"../../../../chunks/NativeLine.glsl.js";import{BlendFactor as S,PrimitiveType as C}from"../../../webgl/enums.js";import{separateBlendingParams as T,makePipelineState as E,defaultColorWriteParams as y,defaultDepthWriteParams as v}from"../../../webgl/renderState.js";class O extends u{constructor(e,t,i){super(e,t,i),this.stipplePattern=null,this.stippleTextureBind=null,this.stippleTextureRepository=e.stippleTextureRepository}get stippleEnabled(){return this.configuration.stippleEnabled&&this.configuration.output!==r.Highlight}initializeProgram(e){const t=O.shader.get(),i=this.configuration,r=t.build({output:i.output,attributeColor:i.vertexColors,slicePlaneEnabled:i.slicePlaneEnabled,sliceHighlightDisabled:!1,sliceEnabledForVertexPrograms:!1,draped:i.draped,stippleEnabled:this.stippleEnabled,stippleOffColorEnabled:i.stippleOffColorEnabled,stippleRequiresClamp:!1,stippleScaleWithLineWidth:!1,stipplePreferContinuous:i.stipplePreferContinuous});return new m(e.rctx,r,c)}destroy(){super.destroy(),this.stippleTextureRepository.release(this.stipplePattern),this.stipplePattern=null,this.stippleTextureBind=null}bindPass(e,s){if(p(this.program,s.camera.projectionMatrix),this.stipplePattern!==e.stipplePattern){const t=e.stipplePattern;this.stippleTextureBind=this.stippleTextureRepository.swap(this.stipplePattern,t),this.stipplePattern=t}if(this.stippleEnabled){const{pixelSize:e,sdfNormalizer:i,pixels:r}=t(this.stippleTextureBind)?this.stippleTextureBind(this.program):{pixelSize:1,sdfNormalizer:1,pixels:1};this.program.setUniform1f("stipplePatternSDFNormalizer",i),this.program.setUniform1f("stipplePatternTextureSize",r),this.program.setUniform1f("stipplePatternPixelSize",e),this.program.setUniform1f("stipplePatternPixelSizeInv",1/e),this.program.setUniform1f("pixelRatio",s.camera.pixelRatio),this.configuration.draped?this.program.setUniform1f("worldToScreenRatio",1/s.screenToPCSRatio):this.program.setUniform1f("worldToScreenPerDistanceRatio",1/s.camera.perScreenPixelRatio),this.program.setUniform2f("ndcToPixel",s.camera.fullViewport[2]/2,s.camera.fullViewport[3]/2)}if(this.program.setUniform4fv("constantColor",e.color),this.program.setUniform1f("alphaCoverage",Math.min(1,e.width*s.camera.pixelRatio)),this.configuration.stippleOffColorEnabled){const t=i(e.stippleOffColor);this.program.setUniform4f("stippleOffColor",t[0],t[1],t[2],t.length>3?t[3]:1)}this.configuration.output===r.Highlight&&o(this.program,s)}bindDraw(e){l(this.program,e),this.stippleEnabled&&!this.configuration.draped&&n(this.program,e.origin,e.camera.viewInverseTransposeMatrix),s(this.program,this.configuration,e),this.program.rebindTextures()}initializePipeline(){const e=this.configuration,t=T(S.SRC_ALPHA,S.ONE,S.ONE_MINUS_SRC_ALPHA,S.ONE_MINUS_SRC_ALPHA),i=(t,i=null,r=null)=>E({blending:i,depthTest:f,depthWrite:r,colorWrite:y,stencilWrite:e.sceneHasOcludees?g:null,stencilTest:e.sceneHasOcludees?t?b:P:null});return e.output===r.Color?(this._occludeePipelineState=i(!0,e.transparent||this.stippleEnabled?t:null,v),i(!1,e.transparent||this.stippleEnabled?t:null,v)):i(!1)}get primitiveType(){return C.LINES}getPipelineState(e,t){return t?this._occludeePipelineState:super.getPipelineState(e,t)}}O.shader=new a(x,(()=>import("./NativeLine.glsl.js")));class j extends d{constructor(){super(...arguments),this.output=r.Color,this.slicePlaneEnabled=!1,this.vertexColors=!1,this.transparent=!1,this.draped=!1,this.stippleEnabled=!1,this.stippleOffColorEnabled=!1,this.stipplePreferContinuous=!0,this.sceneHasOcludees=!1}}e([h({count:r.COUNT})],j.prototype,"output",void 0),e([h()],j.prototype,"slicePlaneEnabled",void 0),e([h()],j.prototype,"vertexColors",void 0),e([h()],j.prototype,"transparent",void 0),e([h()],j.prototype,"draped",void 0),e([h()],j.prototype,"stippleEnabled",void 0),e([h()],j.prototype,"stippleOffColorEnabled",void 0),e([h()],j.prototype,"stipplePreferContinuous",void 0),e([h()],j.prototype,"sceneHasOcludees",void 0);export{O as NativeLineTechnique,j as NativeLineTechniqueConfiguration};
