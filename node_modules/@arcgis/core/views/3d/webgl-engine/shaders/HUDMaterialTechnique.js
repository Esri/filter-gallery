/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import{ShaderOutput as r}from"../core/shaderLibrary/ShaderOutputOptions.js";import{bindSliceUniformsWithOrigin as i}from"../core/shaderLibrary/Slice.glsl.js";import{bindVerticalOffsetUniforms as t}from"../core/shaderLibrary/attributes/VerticalOffset.glsl.js";import{HUDSpace as o,bindHUDUniforms as s}from"../core/shaderLibrary/hud/HUD.glsl.js";import{bindOutputHighlight as a}from"../core/shaderLibrary/output/OutputHighlight.glsl.js";import{bindMultipassGeometryTexture as n}from"../core/shaderLibrary/shading/MultipassGeometryTest.glsl.js";import{bindMultipassTerrainTexture as l}from"../core/shaderLibrary/shading/MultipassTerrainTest.glsl.js";import{bindVisualVariablesUniforms as p}from"../core/shaderLibrary/shading/VisualVariables.glsl.js";import{bindScreenSizePerspectiveUniforms as d}from"../core/shaderLibrary/util/ScreenSizePerspective.glsl.js";import{bindProjectionMatrix as c,bindViewport as u,bindView as h,bindCameraPosition as m}from"../core/shaderLibrary/util/View.glsl.js";import{ReloadableShaderModule as g}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as b}from"../core/shaderTechnique/ShaderTechnique.js";import{parameter as f,ShaderTechniqueConfiguration as v}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{TransparencyPassType as y}from"../lib/basicInterfaces.js";import{Default3D as E}from"../lib/DefaultVertexAttributeLocations.js";import{oitBlending as T}from"../lib/OrderIndependentTransparency.js";import{Program as O}from"../lib/Program.js";import{b as S,H as P}from"../../../../chunks/HUDMaterial.glsl.js";import{BlendFactor as j,CompareFunction as x,PrimitiveType as L}from"../../../webgl/enums.js";import{simpleBlendingParams as U,defaultDepthWriteParams as w,makePipelineState as D,defaultColorWriteParams as C}from"../../../webgl/renderState.js";class H extends b{initializeProgram(e){const r=H.shader.get(),i=this.configuration,t=r.build({output:i.output,frontFacePass:i.transparencyPassType===y.FrontFace,viewingMode:e.viewingMode,occlusionTestEnabled:i.occlusionTestEnabled,signedDistanceFieldEnabled:i.sdf,slicePlaneEnabled:i.slicePlaneEnabled,sliceHighlightDisabled:!1,sliceEnabledForVertexPrograms:!0,debugDrawLabelBorder:i.debugDrawLabelBorder,binaryHighlightOcclusionEnabled:i.binaryHighlightOcclusion,screenCenterOffsetUnitsEnabled:i.screenCenterOffsetUnitsEnabled,screenSizePerspectiveEnabled:i.screenSizePerspective,verticalOffsetEnabled:i.verticalOffset,pixelSnappingEnabled:i.pixelSnappingEnabled,vvSize:i.vvSize,vvColor:i.vvColor,vvInstancingEnabled:!1,isDraped:i.isDraped,multipassGeometryEnabled:i.multipassGeometryEnabled,multipassTerrainEnabled:i.multipassTerrainEnabled,cullAboveGround:i.cullAboveGround});return new O(e.rctx,t,E)}bindPass(e,i){c(this.program,i.camera.projectionMatrix),this.program.setUniform1f("cameraGroundRelative",i.camera.aboveGround?1:-1),this.program.setUniform1f("perDistancePixelRatio",Math.tan(i.camera.fovY/2)/(i.camera.fullViewport[2]/2)),this.program.setUniformMatrix4fv("viewNormal",i.camera.viewInverseTransposeMatrix),this.program.setUniform1f("polygonOffset",e.shaderPolygonOffset),t(this.program,e,i),d(this.program,e),this.program.setUniform1f("pixelRatio",i.camera.pixelRatio||1),u(this.program,i),this.configuration.output===r.Occlusion?(this.program.setUniform2fv("nearFar",i.camera.nearFar),this.program.setUniform2fv("inverseViewport",i.inverseViewport),n(this.program,i),l(this.program,i)):(s(this.program,i),S(this.program,e,i.camera.pixelRatio||1),p(this.program,e),this.configuration.occlusionTestEnabled&&this.program.bindTexture(i.hudVisibilityTexture,"hudVisibilityTexture")),this.configuration.output===r.Highlight&&a(this.program,i)}bindDraw(e){h(this.program,e),m(this.program,e.origin,e.camera.viewInverseTransposeMatrix),i(this.program,this.configuration,e),this.program.rebindTextures()}_setPipelineState(e){const i=this.configuration,t=e===y.NONE,o=e===y.FrontFace,s=x.LEQUAL,a=this.configuration.polygonOffsetEnabled&&M,n=(t||o)&&i.output!==r.Highlight?(i.depthEnabled||i.output===r.Occlusion)&&w:null;return D({blending:i.output===r.Color||i.output===r.Alpha||i.output===r.Highlight?t?N:T(e):null,depthTest:{func:s},depthWrite:n,colorWrite:C,polygonOffset:a})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}get primitiveType(){return this.configuration.output===r.Occlusion?L.POINTS:L.TRIANGLES}}H.shader=new g(P,(()=>import("./HUDMaterial.glsl.js")));const M={factor:0,units:-4},N=U(j.ONE,j.ONE_MINUS_SRC_ALPHA);class G extends v{constructor(){super(...arguments),this.output=r.Color,this.occlusionTestEnabled=!0,this.sdf=!1,this.vvSize=!1,this.vvColor=!1,this.verticalOffset=!1,this.screenSizePerspective=!1,this.screenCenterOffsetUnitsEnabled=o.World,this.debugDrawLabelBorder=!1,this.binaryHighlightOcclusion=!0,this.slicePlaneEnabled=!1,this.polygonOffsetEnabled=!1,this.depthEnabled=!0,this.transparencyPassType=y.NONE,this.pixelSnappingEnabled=!0,this.isDraped=!1,this.multipassGeometryEnabled=!1,this.multipassTerrainEnabled=!1,this.cullAboveGround=!1}}e([f({count:r.COUNT})],G.prototype,"output",void 0),e([f()],G.prototype,"occlusionTestEnabled",void 0),e([f()],G.prototype,"sdf",void 0),e([f()],G.prototype,"vvSize",void 0),e([f()],G.prototype,"vvColor",void 0),e([f()],G.prototype,"verticalOffset",void 0),e([f()],G.prototype,"screenSizePerspective",void 0),e([f({count:o.COUNT})],G.prototype,"screenCenterOffsetUnitsEnabled",void 0),e([f()],G.prototype,"debugDrawLabelBorder",void 0),e([f()],G.prototype,"binaryHighlightOcclusion",void 0),e([f()],G.prototype,"slicePlaneEnabled",void 0),e([f()],G.prototype,"polygonOffsetEnabled",void 0),e([f()],G.prototype,"depthEnabled",void 0),e([f({count:y.COUNT})],G.prototype,"transparencyPassType",void 0),e([f()],G.prototype,"pixelSnappingEnabled",void 0),e([f()],G.prototype,"isDraped",void 0),e([f()],G.prototype,"multipassGeometryEnabled",void 0),e([f()],G.prototype,"multipassTerrainEnabled",void 0),e([f()],G.prototype,"cullAboveGround",void 0);export{H as HUDMaterialTechnique,G as HUDMaterialTechniqueConfiguration};
