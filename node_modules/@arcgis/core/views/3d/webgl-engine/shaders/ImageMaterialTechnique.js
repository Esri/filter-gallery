/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import{ShaderOutput as t}from"../core/shaderLibrary/ShaderOutputOptions.js";import{bindSliceUniformsWithOrigin as r}from"../core/shaderLibrary/Slice.glsl.js";import{bindMultipassTerrainTexture as i}from"../core/shaderLibrary/shading/MultipassTerrainTest.glsl.js";import{bindProjectionMatrix as s,bindView as o}from"../core/shaderLibrary/util/View.glsl.js";import{ReloadableShaderModule as a}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as n}from"../core/shaderTechnique/ShaderTechnique.js";import{parameter as l,ShaderTechniqueConfiguration as p}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{CullFaceOptions as c,TransparencyPassType as u}from"../lib/basicInterfaces.js";import{Default3D as d}from"../lib/DefaultVertexAttributeLocations.js";import{oitBlending as m,oitDepthTest as h,oitDepthWrite as b,getOITPolygonOffset as f}from"../lib/OrderIndependentTransparency.js";import{Program as g}from"../lib/Program.js";import{stencilWriteMaskOn as y,stencilToolMaskBaseParams as T,stencilBaseAllZerosParams as P}from"../lib/StencilUtils.js";import{I as j}from"../../../../chunks/ImageMaterial.glsl.js";import{BlendFactor as v}from"../../../webgl/enums.js";import{simpleBlendingParams as O,makePipelineState as S,cullingParams as E,defaultDepthWriteParams as w,defaultColorWriteParams as N}from"../../../webgl/renderState.js";class _ extends n{initializeProgram(e){const t=_.shader.get(),r=this.configuration,i=t.build({output:r.output,slicePlaneEnabled:r.slicePlaneEnabled,sliceHighlightDisabled:!1,sliceEnabledForVertexPrograms:!1,oitEnabled:r.transparencyPassType===u.Color,multipassTerrainEnabled:r.multipassTerrainEnabled,cullAboveGround:r.cullAboveGround});return new g(e.rctx,i,d)}bindPass(e,t){s(this.program,t.camera.projectionMatrix),this.program.setUniform1f("opacity",e.opacity),t.multipassTerrainEnabled&&(this.program.setUniform2fv("nearFar",t.camera.nearFar),this.program.setUniform2fv("inverseViewport",t.inverseViewport),i(this.program,t))}bindDraw(e){o(this.program,e),r(this.program,this.configuration,e),this.program.rebindTextures()}_setPipelineState(e,r){const i=this.configuration,s=e===u.NONE,o=e===u.FrontFace;return S({blending:i.output!==t.Color&&i.output!==t.Alpha||!i.transparent?null:s?x:m(e),culling:E(i.cullFace),depthTest:{func:h(e)},depthWrite:s?i.writeDepth&&w:b(e),colorWrite:N,stencilWrite:i.sceneHasOcludees?y:null,stencilTest:i.sceneHasOcludees?r?T:P:null,polygonOffset:s||o?null:f(i.enableOffset)})}initializePipeline(){return this._occludeePipelineState=this._setPipelineState(this.configuration.transparencyPassType,!0),this._setPipelineState(this.configuration.transparencyPassType,!1)}getPipelineState(e,t){return t?this._occludeePipelineState:super.getPipelineState(e,t)}}_.shader=new a(j,(()=>import("./ImageMaterial.glsl.js")));const x=O(v.ONE,v.ONE_MINUS_SRC_ALPHA);class A extends p{constructor(){super(...arguments),this.output=t.Color,this.cullFace=c.None,this.slicePlaneEnabled=!1,this.transparent=!1,this.enableOffset=!0,this.writeDepth=!0,this.sceneHasOcludees=!1,this.transparencyPassType=u.NONE,this.multipassTerrainEnabled=!1,this.cullAboveGround=!1}}e([l({count:t.COUNT})],A.prototype,"output",void 0),e([l({count:c.COUNT})],A.prototype,"cullFace",void 0),e([l()],A.prototype,"slicePlaneEnabled",void 0),e([l()],A.prototype,"transparent",void 0),e([l()],A.prototype,"enableOffset",void 0),e([l()],A.prototype,"writeDepth",void 0),e([l()],A.prototype,"sceneHasOcludees",void 0),e([l({count:u.COUNT})],A.prototype,"transparencyPassType",void 0),e([l()],A.prototype,"multipassTerrainEnabled",void 0),e([l()],A.prototype,"cullAboveGround",void 0);export{_ as ImageMaterialTechnique,A as ImageMaterialTechniqueConfiguration};
