/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{s as t}from"../../../../chunks/vec2.js";import{a as n}from"../../../../chunks/vec2f64.js";import{t as r}from"../../../../chunks/vec4.js";import{c as o}from"../../../../chunks/vec4f64.js";const a=o();class s{constructor(t){this.message=t}toString(){return`AssertException: ${this.message}`}}function e(t,n){if(!t)throw n=n||"assert",console.log(new Error(n).stack),new s(n)}function c(t,n){t||(n=n||"",console.warn("Verify failed: "+n+"\n"+new Error("verify").stack))}function u(t,n,r,o){let a,s=(r[0]-t[0])/n[0],e=(o[0]-t[0])/n[0];s>e&&(a=s,s=e,e=a);let c=(r[1]-t[1])/n[1],u=(o[1]-t[1])/n[1];if(c>u&&(a=c,c=u,u=a),s>u||c>e)return!1;c>s&&(s=c),u<e&&(e=u);let i=(r[2]-t[2])/n[2],f=(o[2]-t[2])/n[2];return i>f&&(a=i,i=f,f=a),!(s>f||i>e)&&(f<e&&(e=f),!(e<0))}function i(t,r,o,a,s,e=n()){const c=(a[s]-o[s])*(r[0]-t[0])-(a[0]-o[0])*(r[s]-t[s]),u=(a[0]-o[0])*(t[s]-o[s])-(a[s]-o[s])*(t[0]-o[0]);if(0===c)return!1;const i=u/c;return e[0]=t[0]+i*(r[0]-t[0]),e[1]=t[s]+i*(r[s]-t[s]),!0}function f(t,n,o,s,c){c||(c=t),a[0]=t[0],a[1]=t[1],a[2]=t[2],a[3]=1,r(a,a,n),c.length>2&&(c[2]=-a[2]),r(a,a,o),e(0!==a[3]),c[0]=a[0]/a[3],c[1]=a[1]/a[3],c[2]=a[2]/a[3],c[0]=(.5*c[0]+.5)*s[2]+s[0],c[1]=(.5*c[1]+.5)*s[3]+s[1]}function h(t,n){return Math.log(t)/Math.log(n)}function M(t,n,r,o){t[12]=n,t[13]=r,t[14]=o}function l(t){return 1===t[0]&&0===t[1]&&0===t[2]&&0===t[3]&&0===t[4]&&1===t[5]&&0===t[6]&&0===t[7]&&0===t[8]&&0===t[9]&&1===t[10]&&0===t[11]&&1===t[15]}function m(t,n,r){return 2*Math.atan(Math.sqrt(n*n+r*r)*Math.tan(.5*t)/n)}function g(t,n,r){return 2*Math.atan(Math.sqrt(n*n+r*r)*Math.tan(.5*t)/r)}function k(t,n,r){return 2*Math.atan(n*Math.tan(.5*t)/Math.sqrt(n*n+r*r))}function p(t,n,r){return 2*Math.atan(r*Math.tan(.5*t)/Math.sqrt(n*n+r*r))}function v(n,r,o,a,s){const e=n;0===n[11]?(a[0]=2/(r*e[0]),a[1]=2/(o*e[5]),a[2]=(1+e[12])/e[0],a[3]=(1+e[13])/e[5],t(s,0,1)):(a[0]=-2/(r*e[0]),a[1]=-2/(o*e[5]),a[2]=(1-e[8])/e[0],a[3]=(1-e[9])/e[5],t(s,1,0))}export{e as assert,k as fovd2fovx,p as fovd2fovy,m as fovx2fovd,g as fovy2fovd,v as inverseProjectionInfo,l as isTranslationMatrix,h as logWithBase,f as project,u as rayBoxTest,i as rayRay2D,M as setMatrixTranslation3,c as verify};
