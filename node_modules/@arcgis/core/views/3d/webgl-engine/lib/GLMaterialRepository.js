/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import e from"../../../../core/Logger.js";import{isNone as t,isSome as i,disposeMaybe as r}from"../../../../core/maybe.js";import{NestedMap as s}from"../../../../core/NestedMap.js";import{assert as a}from"./Util.js";const o=e.getLogger("esri.views.3d.webgl-engine.lib.GLMaterialRepository");class l{constructor(e){this._glMaterial=e,this.refCnt=0,this._glMaterial=e}incRefCnt(){++this.refCnt}decRefCnt(){--this.refCnt,a(this.refCnt>=0)}getRefCnt(){return this.refCnt}get glMaterial(){return this._glMaterial}}class n{constructor(e,t,i,r){this._textureRepository=e,this._techniqueRepository=t,this.materialChanged=i,this.requestRender=r,this._id2glMaterialRef=new s}dispose(){this._textureRepository.dispose()}acquire(e,i){this._ownMaterial(e);let r=this._id2glMaterialRef.get(i,e.id);if(t(r)){const t=e.createGLMaterial({material:e,techniqueRep:this._techniqueRepository,textureRep:this._textureRepository,output:i});r=new l(t),this._id2glMaterialRef.set(i,e.id,r)}return r.incRefCnt(),r.glMaterial}release(e,t){const s=this._id2glMaterialRef.get(t,e.id);i(s)&&(s.decRefCnt(),0===s.getRefCnt()&&(r(s.glMaterial),this._id2glMaterialRef.delete(t,e.id)))}_ownMaterial(e){i(e.repository)&&e.repository!==this&&o.error("Material is already owned by a different material repository"),e.repository=this}}export{n as GLMaterialRepository};
