/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{range as e}from"../../../../../core/arrayUtils.js";import{deg2rad as t,acosClamped as n}from"../../../../../core/mathUtils.js";import{forEach as o}from"../../../../../core/typedArrayUtil.js";import{i as r,s,g as c,d as a,r as i,c as l,f as g,n as f}from"../../../../../chunks/vec3.js";import{c as m}from"../../../../../chunks/vec3f64.js";const p=-1;var u;function h(n,i,l,g=N){const f=n.vertices.position,m=n.vertices.componentIndex,u=t(g.anglePlanar),h=t(g.angleSignificantEdge),V=Math.cos(h),S=Math.cos(u),j=I.edge,x=j.position0,E=j.position1,D=j.faceNormal0,F=j.faceNormal1,L=y(n),U=w(n),k=U.length/4,C=i.allocate(k);let H=0;const K=k,M=l.allocate(K);let O=0,P=0,T=0;const b=e(0,k),q=new Float32Array(k);o(q,((e,t,n)=>{f.getVec(U[4*t+0],x),f.getVec(U[4*t+1],E),n[t]=r(x,E)})),b.sort(((e,t)=>q[t]-q[e]));const z=new Array,B=new Array;for(let e=0;e<k;e++){const t=b[e],n=q[t],o=U[4*t+0],r=U[4*t+1],g=U[4*t+2],h=U[4*t+3],w=h===p;if(f.getVec(o,x),f.getVec(r,E),w)s(D,L[3*g+0],L[3*g+1],L[3*g+2]),c(F,D),j.componentIndex=m.get(o),j.cosAngle=a(D,F);else{if(s(D,L[3*g+0],L[3*g+1],L[3*g+2]),s(F,L[3*h+0],L[3*h+1],L[3*h+2]),j.componentIndex=m.get(o),j.cosAngle=a(D,F),v(j,S))continue;j.cosAngle<-.9999&&c(F,D)}P+=n,T++,w||d(j,V)?(i.write(C,H++,j),z.push(n)):A(j,u)&&(l.write(M,O++,j),B.push(n))}const G=new Float32Array(z.reverse()),J=new Float32Array(B.reverse());return{regular:{instancesData:i.trim(C,H),lodInfo:{lengths:G}},silhouette:{instancesData:l.trim(M,O),lodInfo:{lengths:J}},averageEdgeLength:P/T}}function d(e,t){return e.cosAngle<t}function v(e,t){return e.cosAngle>t}function A(e,t){const o=n(e.cosAngle),r=I.fwd,s=I.ortho;i(r,e.position1,e.position0);return o*(a(l(s,e.faceNormal0,e.faceNormal1),r)>0?-1:1)>t}function w(e){const t=e.faces.length/3,n=e.faces,o=e.neighbors;let r=0;for(let a=0;a<t;a++){const e=o[3*a+0],t=o[3*a+1],s=o[3*a+2],c=n[3*a+0],i=n[3*a+1],l=n[3*a+2];r+=e===p||c<i?1:0,r+=t===p||i<l?1:0,r+=s===p||l<c?1:0}const s=new Int32Array(4*r);let c=0;for(let a=0;a<t;a++){const e=o[3*a+0],t=o[3*a+1],r=o[3*a+2],i=n[3*a+0],l=n[3*a+1],g=n[3*a+2];(e===p||i<l)&&(s[c++]=i,s[c++]=l,s[c++]=a,s[c++]=e),(t===p||l<g)&&(s[c++]=l,s[c++]=g,s[c++]=a,s[c++]=t),(r===p||g<i)&&(s[c++]=g,s[c++]=i,s[c++]=a,s[c++]=r)}return s}function y(e){const t=e.faces.length/3,n=e.vertices.position,o=e.faces,r=V.v0,s=V.v1,c=V.v2,a=new Float32Array(3*t);for(let i=0;i<t;i++){const e=o[3*i+0],t=o[3*i+1],m=o[3*i+2];n.getVec(e,r),n.getVec(t,s),n.getVec(m,c),g(s,s,r),g(c,c,r),l(r,s,c),f(r,r),a[3*i+0]=r[0],a[3*i+1]=r[1],a[3*i+2]=r[2]}return a}!function(e){e[e.SOLID=0]="SOLID",e[e.SKETCH=1]="SKETCH"}(u||(u={}));const I={edge:{position0:m(),position1:m(),faceNormal0:m(),faceNormal1:m(),componentIndex:0,cosAngle:0},ortho:m(),fwd:m()},V={v0:m(),v1:m(),v2:m()},N={anglePlanar:4,angleSignificantEdge:35};export{u as EdgeType,h as extractEdges};
