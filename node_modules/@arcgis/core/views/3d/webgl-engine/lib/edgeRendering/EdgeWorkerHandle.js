/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{isUint32Array as e}from"../../../../../core/typedArrayUtil.js";import{WorkerHandle as r}from"../../../../../core/workers/WorkerHandle.js";import{unpackInterleavedBuffer as t}from"../../../support/buffer/workerHelper.js";import{work as n}from"./EdgeProcessingWorker.js";class s extends r{constructor(e){super("EdgeProcessingWorker","wrappedWork",e)}async process(e,r,t){if(t)return n(e);const s=this._packInput(e),a=await this.invoke(s,r);return this._unpackOutput(a)}getTransferList(e){return[e.dataBuffer]}_packInput(r){return{dataBuffer:r.data.buffer,writerSettings:r.writerSettings,skipDeduplicate:r.skipDeduplicate,indicesBuffer:r.indices.buffer,indicesType:e(r.indices)?"Uint32Array":"Uint16Array",indicesLength:r.indicesLength}}_unpackOutput(e){return{regular:{instancesData:t(e.regular.instancesData),lodInfo:{lengths:new Float32Array(e.regular.lodInfo.lengths)}},silhouette:{instancesData:t(e.silhouette.instancesData),lodInfo:{lengths:new Float32Array(e.silhouette.lodInfo.lengths)}},averageEdgeLength:e.averageEdgeLength}}}export{s as default};
