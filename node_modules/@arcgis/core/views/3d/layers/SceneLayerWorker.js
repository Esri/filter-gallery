/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{isSome as e}from"../../../core/maybe.js";import{slice as t}from"../../../core/typedArrayUtil.js";import{IndexType as r}from"../../../libs/i3s/enums.js";import{get as n}from"../../../libs/i3s/I3SModule.js";import{NodeIMModificationImpact as o}from"./i3s/I3SNode.js";async function s(e){await g();const t=[e.geometryBuffer];return{result:m(e,t),transferList:t}}async function f(e){var r;await g();const n=[e.geometryBuffer],{geometryBuffer:o}=e,s=o.byteLength,f=y._malloc(s),i=new Uint8Array(y.HEAPU8.buffer,f,s);i.set(new Uint8Array(o));const a=y.dracoDecompressPointCloudData(f,i.byteLength);if(y._free(f),a.error.length>0)throw`i3s.wasm: ${a.error}`;const u=(null==(r=a.featureIds)?void 0:r.length)>0?t(a.featureIds):null,l=t(a.positions);u&&n.push(u.buffer),n.push(l.buffer);return{result:{positions:l,featureIds:u},transferList:n}}async function i(e){await g(),E(e);const t={buffer:e.buffer};return{result:t,transferList:[t.buffer]}}async function a(e){await g(),b(e)}async function u(e){await g(),y.setLegacySchema(e.context,e.jsonSchema)}function l(e){h(e)}let c,y;function b(e){const t=e.modifications,r=y._malloc(8*t.length),n=new Float64Array(y.HEAPU8.buffer,r,t.length);for(let o=0;o<t.length;++o)n[o]=t[o];y.setModifications(e.context,r,t.length,e.isGeodetic),y._free(r)}function m(n,o){if(!y)return null;const{context:s,localOrigin:f,globalTrafo:i,mbs:a,obb:u,elevationOffset:l,geometryBuffer:c,geometryDescriptor:b,indexToVertexProjector:m,vertexToRenderProjector:d}=n,E=y._malloc(c.byteLength),h=33,g=y._malloc(h*Float64Array.BYTES_PER_ELEMENT),w=new Uint8Array(y.HEAPU8.buffer,E,c.byteLength);w.set(new Uint8Array(c));const A=new Float64Array(y.HEAPU8.buffer,g,h);p(A,f);let _=A.byteOffset+3*A.BYTES_PER_ELEMENT,L=new Float64Array(A.buffer,_);p(L,i),_+=16*A.BYTES_PER_ELEMENT,L=new Float64Array(A.buffer,_),p(L,a),_+=4*A.BYTES_PER_ELEMENT,e(u)&&(L=new Float64Array(A.buffer,_),p(L,u.center),_+=3*A.BYTES_PER_ELEMENT,L=new Float64Array(A.buffer,_),p(L,u.halfSize),_+=3*A.BYTES_PER_ELEMENT,L=new Float64Array(A.buffer,_),p(L,u.quaternion));const I=b,T={isDraco:!1,isLegacy:!1,color:n.layouts.some((e=>e.some((e=>"color"===e.name)))),normal:n.needNormals&&n.layouts.some((e=>e.some((e=>"normalCompressed"===e.name)))),uv0:n.layouts.some((e=>e.some((e=>"uv0"===e.name)))),uvRegion:n.layouts.some((e=>e.some((e=>"uvRegion"===e.name)))),featureIndex:I.featureIndex},P=y.process(s,!!n.obb,E,w.byteLength,I,T,g,l,m,d,n.normalReferenceFrame);if(y._free(g),y._free(E),P.error.length>0)throw`i3s.wasm: ${P.error}`;if(P.discarded)return null;const U=P.componentOffsets.length>0?t(P.componentOffsets):null,B=P.featureIds.length>0?t(P.featureIds):null,F=t(P.interleavedVertedData).buffer,M=P.indicesType===r.Int16?t(new Uint16Array(P.indices.buffer,P.indices.byteOffset,P.indices.byteLength/2)):t(new Uint32Array(P.indices.buffer,P.indices.byteOffset,P.indices.byteLength/4)),S=t(P.positions),v=P.positionIndicesType===r.Int16?t(new Uint16Array(P.positionIndices.buffer,P.positionIndices.byteOffset,P.positionIndices.byteLength/2)):t(new Uint32Array(P.positionIndices.buffer,P.positionIndices.byteOffset,P.positionIndices.byteLength/4)),x={layout:n.layouts[0],interleavedVertexData:F,indices:M,hasColors:P.hasColors,hasModifications:P.hasModifications,positionData:{data:S,indices:v}};return B&&o.push(B.buffer),U&&o.push(U.buffer),o.push(F),o.push(M.buffer),o.push(S.buffer),o.push(v.buffer),{componentOffsets:U,featureIds:B,transformedGeometry:x,obb:P.obb}}function d(e){return 0===e?o.Unmodified:1===e?o.PotentiallyModified:2===e?o.Culled:o.Unknown}function E(e){const{context:t,buffer:r}=e,n=y._malloc(r.byteLength),o=r.byteLength/Float64Array.BYTES_PER_ELEMENT,s=new Float64Array(y.HEAPU8.buffer,n,o),f=new Float64Array(r);s.set(f),y.filterOBBs(t,n,o),f.set(s),y._free(n)}function h(e){y&&y.destroy(e)}function p(e,t){for(let r=0;r<t.length;++r)e[r]=t[r]}function g(){return y?Promise.resolve():(c||(c=n().then((e=>{y=e,c=null}))),c)}const w={transform:m,destroy:h};export{l as destroyContext,f as dracoDecompressPointCloudData,i as filterObbsForModifications,E as filterObbsForModificationsSync,g as initialize,d as interpretObbModificationResults,s as process,u as setLegacySchema,a as setModifications,b as setModificationsSync,w as test};
