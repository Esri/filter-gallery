/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import"../../../../geometry.js";import{init as r}from"../../../../core/watchUtils.js";import"../../../../core/Logger.js";import"../../../../core/accessorSupport/ensureType.js";import"../../../../core/arrayUtils.js";import"../../../../core/has.js";import"../../../../core/accessorSupport/set.js";import{subclass as s}from"../../../../core/accessorSupport/decorators/subclass.js";import{toExtent as o}from"../../../../geometry/support/aaBoundingRect.js";import{TileTreeDebugger as t}from"../../../support/TileTreeDebugger.js";import i from"../../../../geometry/Polygon.js";let p=class extends t{constructor(e){super(e),this.enablePolygons=!1}initialize(){r(this,"enabled",(e=>this.view.basemapTerrain.renderPatchBorders=e))}getTiles(){return this.view.basemapTerrain.test.getRenderedTiles().map((e=>({...e,geometry:i.fromExtent(o(e.extent,this.view.basemapTerrain.spatialReference))})))}};p=e([s("esri.views.3d.layers.support.TerrainTileTree3DDebugger")],p);export{p as TerrainTileTree3DDebugger};
