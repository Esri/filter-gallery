/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import{estimateAttributesObjectSize as t,estimateFixedArraySize as r,estimateNumberByteSize as i}from"../../../../core/byteSizeEstimations.js";import a from"../../../../core/Error.js";import{HandleOwner as o}from"../../../../core/HandleOwner.js";import{makeHandle as s}from"../../../../core/handleUtils.js";import n from"../../../../core/Logger.js";import{isSome as l,disposeMaybe as d,unwrap as m,isNone as u,applySome as p,mapSome as h}from"../../../../core/maybe.js";import{initial as c,sync as y,watch as _}from"../../../../core/reactiveUtils.js";import{property as f}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/arrayUtils.js";import"../../../../core/has.js";import"../../../../core/accessorSupport/ensureType.js";import{subclass as g}from"../../../../core/accessorSupport/decorators/subclass.js";import{g as R}from"../../../../chunks/vec3.js";import{c as v}from"../../../../chunks/vec3f64.js";import{projectPointToVector as F}from"../../../../geometry/projection.js";import{getResolutionForScale as b}from"../../../../geometry/support/scaleUtils.js";import{getObjectId as w}from"../../../../layers/graphics/dehydratedFeatures.js";import{convertFromPoint as S}from"../../../../layers/graphics/featureConversionUtils.js";import{OptimizedFeature as G}from"../../../../layers/graphics/OptimizedFeature.js";import j from"../../../../layers/graphics/OptimizedGeometry.js";import P from"../../../../layers/graphics/data/FeatureStore.js";import{isNumericField as x}from"../../../../layers/support/fieldUtils.js";import{generateGradient as T}from"../../../../renderers/support/heatmapUtils.js";import{DRAPED_Z as M}from"../../terrain/OverlayRenderer.js";import{UpdatePolicy as N,PrimitiveType as E}from"../../webgl-engine/lib/basicInterfaces.js";import{Geometry as I}from"../../webgl-engine/lib/Geometry.js";import{ModelDirty as O}from"../../webgl-engine/lib/ModelDirtyTypes.js";import{RenderGeometry as C}from"../../webgl-engine/lib/RenderGeometry.js";import{VertexAttribute as H}from"../../webgl-engine/lib/VertexAttribute.js";import{HeatmapDensityMaterial as V}from"../../webgl-engine/materials/HeatmapDensityMaterial.js";const W=n.getLogger("esri.views.3d.layers.support.HeatmapFeatureProcessor"),L=50;let U=class extends o{constructor(e){super(e),this.type="heatmap",this.filterVisibility={filterChanged(){},dirty:!1},this.preferredUpdatePolicy=N.ASYNC,this.dataExtent=null,this._renderGeometries=new Map,this._material=new V({}),this._materialWithField=new V({isAttributeDriven:!0}),this._fieldTotal=0,this._memoryFactor=1}initialize(){this._featureStore=new P({geometryType:"esriGeometryPoint",hasZ:this.hasZ,hasM:this.hasM});const{colorBufferFloat:e,textureFloat:t}=this._renderView.capabilities,{floatBufferBlendWorking:r}=this._renderView.renderingContext.driverTest;if(null==t||!t.textureFloat)throw new a("heatmap:missing-texture-float","HeatmapRenderer requires WebGL2 or the WebGL1 extension OES_texture_float.");if(null==e||!e.textureFloat)throw new a("heatmap:missing-color-buffer-float","HeatmapRenderer requires the WebGL2 extension EXT_color_buffer_float or the WebGL1 extension WEBGL_color_buffer_float.");if(null==e||!e.floatBlend)throw new a("heatmap:missing-float-blend","HeatmapRenderer requires the WebGL extension EXT_float_blend.");if(!r)throw new a("heatmap:missing-float-blend","HeatmapRenderer requires the WebGL extension EXT_float_blend. This device claims support for it, but does not actually support it.");this._memoryFactor=this.owner.view.resourceController.memoryController.memoryFactor,this.updatingHandles.addOnCollectionChange((()=>this._loadedPointGraphics),(e=>this._onLoadedFeaturesChange(e)),c),this.updatingHandles.addWhen((()=>this._materialParameters),(e=>this._forEachMaterial((t=>t.setParameters(e)))),c),this.updatingHandles.add((()=>this._heatmapRendererField),(()=>{this._recreate()}),y),this.updatingHandles.add((()=>({fieldName:this._heatmapRendererFieldName,numeric:this._heatmapRendererFieldIsNumeric})),(({fieldName:e,numeric:t})=>{if(l(e)&&t){let t=0;this._featureStore.forEach((r=>{var i;t+=null!=(i=r.attributes[e])?i:0})),this._fieldTotal=t}else this._fieldTotal=this._featureStore.numFeatures}),c),this.handles.add([_((()=>({fieldName:this._heatmapRendererFieldName,field:this._heatmapRendererField})),(({fieldName:e,field:t})=>{var r;e&&!t&&W.warn(`Heatmap renderer field '${e}' for layer '${null!=(r=this.layer.title)?r:this.layer.id}' not found`)})),_((()=>({field:this._heatmapRendererField,numeric:this._heatmapRendererFieldIsNumeric})),(({field:e,numeric:t})=>{var r;l(e)&&!t&&W.warn(`Heatmap renderer field '${e.name}' for layer '${null!=(r=this.layer.title)?r:this.layer.id}' does not contain numeric values and cannot be used to drive the heatmap density`)})),this.owner.view.resourceController.memoryController.events.on("quality-changed",(()=>{var e,t,r,i,a;this._memoryFactor=null!=(e=null==(t=this.owner)||null==(r=t.view)||null==(i=r.resourceController)||null==(a=i.memoryController)?void 0:a.memoryFactor)?e:1}))])}destroy(){this._overlayRenderer.removeGeometries(Array.from(this._renderGeometries.values()),this.owner,O.Geometry.REMOVE),this._renderGeometries.clear(),this._material=d(this._material),this._materialWithField=d(this._materialWithField),this._featureStore.clear(),this._featureStore=null}get layer(){return this.owner.layer}get featureStore(){return this._featureStore}get updating(){return this.updatingHandles.updating}get updatingRemaining(){return 0}get suspendInfo(){return{}}get legendEnabled(){return!0}get displayFeatureLimit(){var e,t;const r=this._memoryFactor,i=null==(e=this.owner)||null==(t=e.view)?void 0:t.qualitySettings,a=i?Math.ceil(i.heatmap.maxTotalNumberOfFeatures*r):0;return{minimumTotalNumberOfFeatures:0,maximumTotalNumberOfFeatures:a,maximumTotalNumberOfPrimitives:a*2,maximumNumberOfFeatures:a}}get hasZ(){return"hasZ"in this.layer&&this.layer.hasZ}get hasM(){return"hasM"in this.layer&&this.layer.hasM}get scaleVisibilitySuspended(){return!1}get usedMemory(){var e,t,r,i,a;const o=this.usedMemoryPerFeature*this._featureStore.numFeatures,{R32F:s}=null==(e=this._renderView)||null==(t=e.capabilities)?void 0:t.colorBufferFloat,n=null!=s?1:4,d=4,m=null!=(r=Math.ceil((null==(i=this._overlayRenderer)||null==(a=i.overlays[0])?void 0:a.resolution)*this._densityMapPixelRatio))?r:0;return m*m*n*d+o+(l(this._heatmapRenderer)?3*Math.min(this._heatmapRenderer.blurRadius,L):0)*n*d}get usedMemoryPerFeature(){if(0===this._featureStore.numFeatures)return 0;let e=0;this._featureStore.forEach((r=>e+=t(r.attributes))),e/=this._featureStore.numFeatures;const a=i(),o=6;return o*r([0,0,0],a)+o*r([0,0],a)+(this._heatmapRendererFieldIsNumeric?o*a:0)+e}get unprocessedMemoryEstimate(){return 0}get performanceInfo(){return{core:{visible:this._featureStore.numFeatures,missing:0,pending:0},elevationUpdating:!1,visibilityFrustum:!0,visibilityScale:!0}}get _overlayRenderer(){return this.owner.view.basemapTerrain.overlayManager.renderer}get _overlaySpatialReference(){return m(this._overlayRenderer.spatialReference)}get _materialParameters(){return{...this._blurRadiusParameters,...this._densityParameters,colorRampData:this._colorRampData,pixelRatio:this._densityMapPixelRatio}}get _densityParameters(){const e=this._heatmapRenderer;if(u(e))return null;return{minDensity:e.minPixelIntensity,maxDensity:e.maxPixelIntensity,fieldTotal:this._fieldTotal}}get _blurRadiusParameters(){return p(this._heatmapRenderer,(({referenceScale:e,blurRadius:t})=>({searchRadius:this._clampSearchRadius(t),resolutionForScale:0===e?0:b(e,this.owner.view.spatialReference)})))}get _colorRampData(){return p(this._heatmapRenderer,(e=>T(e.colorStops)))}get _densityMapPixelRatio(){var e,t,r;const i=this._memoryFactor;return(null!=(e=null==(t=this.owner)||null==(r=t.view)?void 0:r.qualitySettings.heatmap.pixelRatio)?e:1)*Math.sqrt(i)}get _renderView(){return this.owner.view._stage.renderView}get _featuresArePoints(){return"point"===this.layer.geometryType}get _loadedPointGraphics(){return this.owner.loadedGraphics}get _heatmapRenderer(){const e=this.layer.renderer;return"heatmap"===(null==e?void 0:e.type)?e:null}get _heatmapRendererFieldName(){return p(this._heatmapRenderer,(e=>e.field))}get _heatmapRendererField(){return p(this._heatmapRendererFieldName,(e=>this.layer.fieldsIndex.get(e)))}get _heatmapRendererFieldIsNumeric(){const e=this._heatmapRendererField;return!u(e)&&x(e)}async whenGraphicBounds(){return null}computeAttachmentOrigin(){return null}highlight(){return A}maskOccludee(){return A}setObjectIdVisibility(){}async setup(){}_onLoadedFeaturesChange(e){if(!this._featuresArePoints)return;const{objectIdField:t}=this.layer;this._featureStore.removeManyById(e.removed.map((e=>w(e,t)))),this._featureStore.addMany(e.added.map((e=>new G(S(new j,e.geometry),e.attributes,p(e.centroid,(e=>S(new j,e))),w(e,t)))));const r=e.added,i=e.removed;this._fieldTotal+=this._computeFieldTotalChange(r,i);const a=h(i,(({uid:e})=>{const t=this._renderGeometries.get(e);return this._renderGeometries.delete(e),t})),o=r.map((e=>{const t=this._pointGraphicToRenderGeometry(e);return this._renderGeometries.set(e.uid,t),t}));a.length>0&&this._overlayRenderer.removeGeometries(a,this.owner,O.Geometry.REMOVE),o.length>0&&this._overlayRenderer.addGeometries(o,this.owner,O.Geometry.ADD,!0),(o.length>0||a.length>0)&&this._renderView.requestRender()}_recreate(){if(!this._loadedPointGraphics)return;const e=this._loadedPointGraphics.toArray();this._onLoadedFeaturesChange({added:e,removed:e})}_pointGraphicToRenderGeometry(e){const t=this._heatmapRendererFieldName,r=l(t)?this._materialWithField:this._material,i=v();F(e.geometry,i,this._overlaySpatialReference),i[2]=M;const a=[[H.POSITION,{data:i,size:i.length}]],o=this._heatmapRendererFieldIsNumeric;var s;l(t)&&a.push([H.FEATUREATTRIBUTE,{data:[o&&null!=(s=e.attributes[t])?s:0],size:1}]);const n=new C(new I(a,null,E.Point),r,{layerUid:this.layer.uid,graphicUid:e.uid});return R(n.boundingSphere,i),n}_forEachMaterial(e){e(this._material),e(this._materialWithField)}_computeFieldTotalChange(e,t){if(u(this._heatmapRendererFieldName)||!this._heatmapRendererFieldIsNumeric)return e.length-t.length;const r=this._heatmapRendererFieldName,i=(e,t)=>{var i;return e+(null!=(i=t.attributes[r])?i:0)};return e.reduce(i,0)-t.reduce(i,0)}_clampSearchRadius(e){return e>L&&W.warnOnce(`SceneView supports a maximum blurRadius of ${L} for HeatmapRenderer.`),Math.min(e,L)}};e([f()],U.prototype,"type",void 0),e([f({constructOnly:!0})],U.prototype,"owner",void 0),e([f()],U.prototype,"layer",null),e([f()],U.prototype,"featureStore",null),e([f()],U.prototype,"updating",null),e([f()],U.prototype,"updatingRemaining",null),e([f()],U.prototype,"suspendInfo",null),e([f()],U.prototype,"legendEnabled",null),e([f()],U.prototype,"filterVisibility",void 0),e([f()],U.prototype,"displayFeatureLimit",null),e([f()],U.prototype,"preferredUpdatePolicy",void 0),e([f()],U.prototype,"hasZ",null),e([f()],U.prototype,"hasM",null),e([f()],U.prototype,"dataExtent",void 0),e([f()],U.prototype,"_featureStore",void 0),e([f()],U.prototype,"_overlayRenderer",null),e([f()],U.prototype,"_overlaySpatialReference",null),e([f()],U.prototype,"_materialParameters",null),e([f()],U.prototype,"_densityParameters",null),e([f()],U.prototype,"_blurRadiusParameters",null),e([f()],U.prototype,"_colorRampData",null),e([f()],U.prototype,"_densityMapPixelRatio",null),e([f()],U.prototype,"_renderGeometries",void 0),e([f()],U.prototype,"_material",void 0),e([f()],U.prototype,"_materialWithField",void 0),e([f()],U.prototype,"_renderView",null),e([f()],U.prototype,"_featuresArePoints",null),e([f()],U.prototype,"_loadedPointGraphics",null),e([f()],U.prototype,"_heatmapRenderer",null),e([f()],U.prototype,"_heatmapRendererFieldName",null),e([f()],U.prototype,"_heatmapRendererField",null),e([f()],U.prototype,"_heatmapRendererFieldIsNumeric",null),e([f()],U.prototype,"_fieldTotal",void 0),e([f()],U.prototype,"_memoryFactor",void 0),U=e([g("esri.views.3d.layers.support.HeatmapFeatureProcessor")],U);const A=s();export{U as HeatmapFeatureProcessor,L as MAX_RADIUS};
