/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import i from"../../../Graphic.js";import"../../../symbols.js";import s from"../../../core/Accessor.js";import r from"../../../core/Handles.js";import{isNone as t}from"../../../core/maybe.js";import{property as o}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as a}from"../../../core/accessorSupport/decorators/subclass.js";import{diff as l}from"../../../core/accessorSupport/diffUtils.js";import{c as p}from"../../../chunks/vec3f64.js";import{makeDehydratedPoint as c}from"../../../layers/graphics/dehydratedFeatures.js";import{Graphics3DCore as h}from"./graphics/Graphics3DCore.js";import n from"./graphics/Graphics3DScaleVisibility.js";import{boundingBoxTop as d}from"./i3s/I3SGeometryUtil.js";import{LimitGraphicsMap as y}from"../support/LimitGraphicsMap.js";import{UpdatePolicy as g}from"../webgl-engine/lib/basicInterfaces.js";import m from"../../../symbols/PointSymbol3D.js";let u=class extends s{constructor(e){super(e),this.loadedGraphics=new y(5e4),this.slicePlaneEnabled=!1,this._renderingInfo={symbol:new m},this._handles=new r,this._graphicsByNode=new Map,this._scaleVisibility=null}initialize(){this._graphicsCore=new h({owner:this,layer:this.layer,preferredUpdatePolicy:g.ASYNC,elevationFeatureExpressionEnabled:!1,graphicSymbolSupported:!1,getRenderingInfoWithoutRenderer:!0,hasZ:!0,hasM:!1});const e=this.view.basemapTerrain;this._scaleVisibility=new n({layerScaleEnabled:!1}),this._scaleVisibility.setup(this,this.layer,((e,i,s)=>this._graphicsCore.spatialIndex.queryGraphicUIDsInExtent(e,i,s)),this._graphicsCore,e);const i=this.view.labeler.addGraphicsOwner(this._graphicsCore,this._scaleVisibility,{emptySymbolLabelSupported:!0,elevationInfoOverride:{mode:"absolute-height",offset:0},disablePlacement:{logEntityDescription:"3D Object Scene Layer features"}}),s=this.view.deconflictor.addGraphicsOwner(this._graphicsCore);this._graphicsCore.setup({labeler:i,deconflictor:s,scaleVisibility:this._scaleVisibility}).then((()=>{this._graphicsCore.startCreateGraphics()})).catch((()=>{})),this._handles.add([this.layer.watch("labelingInfo",((e,i)=>{l(e,i)&&this._graphicsCore.updateLabelingInfo()}))])}destroy(){this._handles&&(this._handles.destroy(),this._handles=null),null!=this._scaleVisibility&&(this._scaleVisibility.destroy(),this._scaleVisibility=null),null!=this._graphicsCore&&(this._graphicsCore.destroy(),this._graphicsCore=null),this.loadedGraphics.destroy(),this.view=null}addNodeMeta(e,s){let r=0;const o=e.filteredIds,a=e.featureIds.map(((a,l)=>{d(l,this.collection,e.objectHandle,f);const p=c(0,0,0,this.view.spatialReference);this.view.renderCoordsHelper.fromRenderCoords(f,p);const h=s(l,e);let n=!1;return t(o)?n=!0:r<o.length&&a===o[r]&&(n=!0,r++),{objectId:a,uid:i.generateUID(),attributes:h,visible:n,geometry:p}}));this.loadedGraphics.addMany(a),this._graphicsByNode.set(e.node.index,a)}setNodeMetaAttributes(e,i){const s=this._graphicsByNode.get(e.node.index),r=new Array(s.length);for(let t=0;t<s.length;t++){const o=s[t];o.attributes=i(t,e),r[t]=o.uid}this._graphicsCore.updateLabelingInfo(r)}applyFilterChange(e){const i=this._graphicsByNode.get(e.node.index);if(i)if(t(e.filteredIds))for(const s of i)s.visible||(s.visible=!0,b.graphic=s,b.property="visible",b.oldValue=!1,b.newValue=!0,this._graphicsCore.graphicUpdateHandler(b));else{let s=0;for(const r of i){const i=r.visible;s<e.filteredIds.length&&r.objectId===e.filteredIds[s]?(r.visible=!0,s++):r.visible=!1,i!==r.visible&&(b.graphic=r,b.property="visible",b.oldValue=i,b.newValue=r.visible,this._graphicsCore.graphicUpdateHandler(b))}}}removeNodeMeta(e){this.loadedGraphics.removeManyByObjectId(e.featureIds)}getRenderingInfo(){return this._renderingInfo}notifyGraphicGeometryChanged(){}notifyGraphicVisibilityChanged(){}get updatePolicy(){return this._graphicsCore.effectiveUpdatePolicy}get usedMemory(){return this._graphicsCore.usedMemory}get unloadedMemoryEstimate(){return this._graphicsCore.unprocessedMemoryEstimate}get test(){return{graphicsCore:this._graphicsCore}}};e([o()],u.prototype,"view",void 0),e([o()],u.prototype,"layer",void 0),e([o()],u.prototype,"collection",void 0),e([o()],u.prototype,"loadedGraphics",void 0),e([o({aliasOf:"_graphicsCore.updating"})],u.prototype,"updating",void 0),e([o()],u.prototype,"slicePlaneEnabled",void 0),e([o()],u.prototype,"_graphicsCore",void 0),u=e([a("esri.views.3d.layers.I3SMeshViewLabeler")],u);const b={graphic:null,property:null,oldValue:null,newValue:null},f=p(),_=u;export{_ as default};
