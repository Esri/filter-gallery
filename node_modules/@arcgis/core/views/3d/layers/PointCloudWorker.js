/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{isSome as t}from"../../../core/maybe.js";import{isArrayBuffer as r}from"../../../core/typedArrayUtil.js";import{c as e}from"../../../chunks/quat.js";import{b as a}from"../../../chunks/quatf32.js";import{q as o}from"../../../chunks/vec3.js";import{f,c as s}from"../../../chunks/vec3f32.js";import{projectBuffer as i}from"../../../geometry/projection.js";import n from"../../../geometry/SpatialReference.js";import{readGeometry as u,getAttributeValues as l,evaluateRenderer as b,filterInPlace as m}from"./i3s/PointCloudWorkerUtil.js";class p{transform(e){const a=this._transform(e),o=[a.points.buffer,a.rgb.buffer];t(a.pointIdFilterMap)&&o.push(a.pointIdFilterMap.buffer);for(const t of a.attributes)"buffer"in t.values&&r(t.values.buffer)&&t.values.buffer!==a.rgb.buffer&&o.push(t.values.buffer);return Promise.resolve({result:a,transferList:o})}_transform(r){const e=u(r.schema,r.geometryBuffer);let a=e.length/3,o=null;const f=[],s=l(r.primaryAttributeData,e,a);t(r.primaryAttributeData)&&s&&f.push({attributeInfo:r.primaryAttributeData.attributeInfo,values:s});const i=l(r.modulationAttributeData,e,a);t(r.modulationAttributeData)&&i&&f.push({attributeInfo:r.modulationAttributeData.attributeInfo,values:i});let p=b(r.rendererInfo,s,i,a);if(r.filterInfo&&r.filterInfo.length>0&&t(r.filterAttributesData)){const t=r.filterAttributesData.map((t=>{const r=l(t,e,a),o={attributeInfo:t.attributeInfo,values:r};return f.push(o),o}));o=new Uint32Array(a),a=m(e,p,o,r.filterInfo,t)}for(const t of r.userAttributesData){const r=l(t,e,a);f.push({attributeInfo:t.attributeInfo,values:r})}3*a<p.length&&(p=new Uint8Array(p.buffer.slice(0,3*a))),this._applyElevationOffsetInPlace(e,a,r.elevationOffset);const c=this._transformCoordinates(e,a,r.obb,n.fromJSON(r.inSR),n.fromJSON(r.outSR));return{obb:r.obb,points:c,rgb:p,attributes:f,pointIdFilterMap:o}}_transformCoordinates(t,r,a,n,u){if(!i(t,n,0,t,u,0,r))throw Error("Can't reproject");const l=f(a.center[0],a.center[1],a.center[2]),b=s(),m=s();e(c,a.quaternion);const p=new Float32Array(3*r);for(let e=0;e<r;e++)b[0]=t[3*e]-l[0],b[1]=t[3*e+1]-l[1],b[2]=t[3*e+2]-l[2],o(m,b,c),a.halfSize[0]=Math.max(a.halfSize[0],Math.abs(m[0])),a.halfSize[1]=Math.max(a.halfSize[1],Math.abs(m[1])),a.halfSize[2]=Math.max(a.halfSize[2],Math.abs(m[2])),p[3*e]=b[0],p[3*e+1]=b[1],p[3*e+2]=b[2];return p}_applyElevationOffsetInPlace(t,r,e){if(0!==e)for(let a=0;a<r;a++)t[3*a+2]+=e}}const c=a();function h(){return new p}export{h as default};
