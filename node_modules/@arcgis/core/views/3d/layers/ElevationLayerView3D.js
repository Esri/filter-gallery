/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import r from"../../../core/Error.js";import{property as o}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as s}from"../../../core/accessorSupport/decorators/subclass.js";import{LayerView3D as i}from"./LayerView3D.js";import{TiledLayerView3D as t}from"./TiledLayerView3D.js";import a from"../../layers/LayerView.js";let l=class extends(t(i(a))){constructor(){super(...arguments),this.type="elevation-3d"}initialize(){var e,o,s,i,t;const a=null==(e=this.view)||null==(o=e.map)?void 0:o.allLayers,l=a&&a.includes(this.layer),n=null==(s=this.view)||null==(i=s.map)||null==(t=i.ground)?void 0:t.layers,p=n&&n.includes(this.layer);if(l&&!p){const e=new r("layerview:elevation-layer-only","3D elevation layer '"+this.layer.id+"' can only be added to layers in map.ground");this.addResolvingPromise(Promise.reject(e))}this._addTilingSchemeMatchPromise()}};e([o()],l.prototype,"layer",void 0),e([o({readOnly:!0,aliasOf:"layer.tileInfo"})],l.prototype,"tileInfo",void 0),l=e([s("esri.views.3d.layers.ElevationLayerView3D")],l);const n=l;export{n as default};
