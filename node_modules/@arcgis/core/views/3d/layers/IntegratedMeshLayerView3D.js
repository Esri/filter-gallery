/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import r from"../../../Graphic.js";import{isSome as t,isNone as o}from"../../../core/maybe.js";import{initial as i}from"../../../core/reactiveUtils.js";import{property as a}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as s}from"../../../core/accessorSupport/decorators/subclass.js";import{f as l,c as n}from"../../../chunks/vec4f64.js";import{area as h,width as c,height as p}from"../../../geometry/support/aaBoundingRect.js";import{I3SMeshView3D as d}from"./I3SMeshView3D.js";import{DrapeTargetType as y}from"./interfaces.js";import{LayerView3D as u}from"./LayerView3D.js";import{updatingProgress as m}from"../support/updatingProperties.js";import{OverlayIndex as g,RenderTargetType as f}from"../terrain/interfaces.js";import v from"../../layers/LayerView.js";const _=.2;let T=class extends(d(u(v))){constructor(){super(...arguments),this.type="integrated-mesh-3d",this.lodFactor=1,this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=y.WithoutRasterImage,this._overlayTexOffset=l(-1,-1,-1,-1),this._overlayTexScale=n(),this._overlayColor=null,this._overlayHighlight=null,this._overlayNormal=null}get progressiveLoadFactor(){return this.lodFactor>=1?_:1}setDrapingTextures(e){this._clearDrapingTexture(g.INNER),this._clearDrapingTexture(g.OUTER);for(const r of e){const e=r.index,o=r.extent,i=r.needsColorWithoutRasterImage?r.getValidTarget(f.ColorNoRasterImage):r.hasDrapedFeatureSource?r.getValidTarget(f.Color):null;if(t(i)&&h(o)>0){this._overlayTexOffset[2*e]=-o[0]/c(o),this._overlayTexOffset[2*e+1]=-o[1]/p(o),this._overlayTexScale[2*e]=1/c(o),this._overlayTexScale[2*e+1]=1/p(o);const t=r.getValidTarget(f.Highlight),a=r.getValidTarget(f.Water);this._overlayColor=i.getTexture(),this._overlayHighlight=t?t.getTexture():null,this._overlayNormal=a?a.getTexture():null}}this._forAllNodes((e=>t(e)&&this._collection.updateMaterial(e.objectHandle,(e=>this._updateMaterialOverlay(e)))))}_clearDrapingTexture(e){this._overlayTexOffset[2*e]=-1,this._overlayTexOffset[2*e+1]=-1,this._overlayTexScale[2*e]=0,this._overlayTexScale[2*e+1]=0,this._overlayColor=null,this._overlayHighlight=null,this._overlayNormal=null}_updateMaterialOverlay(e){e.overlayColor=this._overlayColor,e.overlayHighlight=this._overlayHighlight,e.overlayNormal=this._overlayNormal,e.overlayTexOffset=this._overlayTexOffset,e.overlayTexScale=this._overlayTexScale}initialize(){this.updatingHandles.add((()=>this.layer.modifications),(()=>this._loadModifications()),i)}_createLayerGraphic(){const e=new r;return e.layer=this.layer,e.sourceLayer=this.layer,e}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),o(this.layer.modifications))return void(this._modifications=[]);const e=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange((()=>e),(()=>this._modifications=e.toArray()),i),"modifications")}};e([a()],T.prototype,"layer",void 0),e([a({aliasOf:"layer"})],T.prototype,"i3slayer",void 0),e([a(m)],T.prototype,"updatingProgress",void 0),e([a({readOnly:!0,aliasOf:"_controller.updatingProgress"})],T.prototype,"updatingProgressValue",void 0),e([a({readOnly:!0,aliasOf:"view.qualitySettings.sceneService.integratedMesh.lodFactor"})],T.prototype,"lodFactor",void 0),e([a({readOnly:!0})],T.prototype,"progressiveLoadFactor",null),T=e([s("esri.views.3d.layers.SceneLayerView3D")],T);const x=T;export{x as default};
