/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{isSome as t,isNone as e,disposeMaybe as r}from"../../../core/maybe.js";import{TextureSamplingMode as s}from"../../webgl/enums.js";import{createTransformTexture as i,getBasicGridUniforms as o,getCommonUniforms as a,getColormapUniforms as h,getStretchUniforms as l,getShadedReliefUniforms as n,createRasterTexture as u,createColormapTexture as m}from"../../webgl/rasterUtils.js";const d={bandCount:3,outMin:0,outMax:1,minCutOff:[0,0,0],maxCutOff:[255,255,255],factor:[1/255,1/255,1/255],useGamma:!1,gamma:[1,1,1],gammaCorrection:[1,1,1],colormap:null,colormapOffset:null,stretchType:"none",type:"stretch"};class _{constructor(t,e,r=null,s=null){this.type="raster-tile",this._memoryUsed=null,this._source=null,this._symbolizerParameters=null,this._bandIds=null,this._interpolation=null,this._dirty=!1,this._transformGrid=null,this.isRendereredSource=!1,this.symbolizerRenderer=null,this.rawPixelData=null,this.lij=null,this.scale=1,this.offset=[0,0],this.opacity=1,this.lij=t,this.source=e,this.width=r||e.width,this.height=s||e.height}get source(){return this._source}set source(t){this._source=t,this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null,this._memoryUsed=null)}get symbolizerParameters(){return this.isRendereredSource?{...d,maxCutOff:[1,1,1],factor:[1,1,1]}:this._symbolizerParameters||d}set symbolizerParameters(t){this._symbolizerParameters=t}get bandIds(){return this._bandIds}set bandIds(e){if(t(e)&&e.length>0){this._bandIds&&e.every(((t,e)=>!!this._bandIds[e]&&t===this._bandIds[e]))||(this._bandIds=e,this._dirty=!0)}else this._bandIds=null}get interpolation(){return this._interpolation||"nearest"}set interpolation(t){if(this._interpolation=t,this._rasterTexture){const e=this._getRasterTextureInterpolation(t);this._rasterTexture.setSamplingMode("bilinear"===e?s.LINEAR:s.NEAREST)}}get transformGrid(){return this._transformGrid}set transformGrid(t){this._transformGrid=t,this._transformGridTexture&&(this._transformGridTexture.dispose(),this._transformGridTexture=null,this._memoryUsed=null)}bind(t){return!!(this.source&&this.source.pixels&&this.source.pixels.length>0)&&(this._rasterTexture&&!this._dirty||this._updateRasterTexture(t,this.bandIds),this._rasterTexture&&(this._updateColormapTexture(t),this.transformGrid&&!this._transformGridTexture&&(this._transformGridTexture=i(t,this.transformGrid))),!0)}getUniforms(){const t=o(this.scale,this.offset),{symbolizerParameters:e,transformGrid:r,width:s,height:i,opacity:u}=this;return{basic:t,common:a(r,[s,i],[this.source.width,this.source.height],u),colormap:e.colormap?h(e.colormap,e.colormapOffset):null,stretch:"stretch"===this.symbolizerParameters.type?l(this.symbolizerParameters):null,hillshade:"hillshade"===this.symbolizerParameters.type?n(this.symbolizerParameters):null}}getTextures(){const t=new Array,e=[];return this._rasterTexture&&(e.push(this._rasterTexture),t.push("u_image"),this._transformGridTexture&&(e.push(this._transformGridTexture),t.push("u_transformGrid")),this._colormapTexture&&(e.push(this._colormapTexture),t.push("u_colormap"))),{names:t,textures:e}}get memoryUsage(){if(e(this._memoryUsed)){const t=this.getTextures();if(null==t)return 0;this._memoryUsed=t.textures.map((t=>t.descriptor.width*t.descriptor.height*4)).reduce(((t,e)=>t+e),0)}return this._memoryUsed}release(){return this._rasterTexture=r(this._rasterTexture),this._transformGridTexture=r(this._transformGridTexture),this._colormapTexture=r(this._colormapTexture),this.source=null,this.transformGrid=null,this.rawPixelData=null,!0}_updateRasterTexture(r,s){const i=this.source?this.source.extractBands(s):null;if(!(i&&i.pixels&&i.pixels.length>0))return void(this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null));const o=e(s)&&e(this.bandIds)||t(s)&&t(this.bandIds)&&s.join("")===this.bandIds.join("");if(this._rasterTexture){if(o)return;this._rasterTexture.dispose(),this._rasterTexture=null}const a=this._getRasterTextureInterpolation(this.interpolation);this._rasterTexture=u(r,i,a,this.isRendereredSource||this.hasStretchTypeNone())}hasStretchTypeNone(){return"stretchType"in this.symbolizerParameters&&"none"===this.symbolizerParameters.stretchType&&!this.symbolizerParameters.useGamma&&"u8"===this.source.pixelType}_getRasterTextureInterpolation(t){return"lut"===this.symbolizerParameters.type||"nearest"===t||"majority"===t?"nearest":"bilinear"}_updateColormapTexture(t){const e=this._colormap,r=this.symbolizerParameters.colormap;return r?e?r.length!==e.length||r.some(((t,r)=>t!==e[r]))?(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),this._colormapTexture=m(t,r),void(this._colormap=r)):void 0:(this._colormapTexture=m(t,r),void(this._colormap=r)):(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),void(this._colormap=null))}}export{_ as RasterTile};
