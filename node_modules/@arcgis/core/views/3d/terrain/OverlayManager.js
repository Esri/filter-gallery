/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../core/Accessor.js";import r from"../../../core/Handles.js";import s from"../../../core/has.js";import{clamp as i,deg2rad as a}from"../../../core/mathUtils.js";import{isSome as n,isNone as o,unwrap as h}from"../../../core/maybe.js";import{addFrameTask as l}from"../../../core/scheduling.js";import{Milliseconds as c}from"../../../core/time.js";import{property as d}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as p}from"../../../core/accessorSupport/decorators/subclass.js";import{f as u}from"../../../chunks/vec2.js";import{b as _,f as y,x as g,g as m,i as f}from"../../../chunks/vec3.js";import{c as v}from"../../../chunks/vec3f64.js";import{t as T,b as R,a as w}from"../../../chunks/vec4.js";import{c as D,f as O}from"../../../chunks/vec4f64.js";import{projectVectorToVector as E}from"../../../geometry/projection.js";import{getReferenceEllipsoid as x}from"../../../geometry/projectionEllipsoid.js";import{create as S,width as P,copy as U,center as M,intersection as I,height as C,contains as j,intersects as N,offset as b}from"../../../geometry/support/aaBoundingRect.js";import{create as A,wrap as V}from"../../../geometry/support/ray.js";import{h as L,j as G}from"../../../chunks/sphere.js";import{angleAroundAxis as H}from"../../../geometry/support/vector.js";import{y2lat as k}from"../../../geometry/support/webMercatorUtils.js";import{DrapeSourceRegistration as B}from"../layers/interfaces.js";import{viewAngle as F}from"../state/utils/viewUtils.js";import q from"../support/debugFlags.js";import{PointGraphics as W}from"../support/debugUtils.js";import{Cyclical as Y,cyclicalPI as z}from"../support/mathUtils.js";import{OverlayIndex as X}from"./interfaces.js";import{computeOverlayResolution as K}from"./Overlay.js";import{OverlayRenderer as Z}from"./OverlayRenderer.js";import{RenderRequestType as J,ValidationState as Q}from"../webgl-engine/lib/basicInterfaces.js";import{newIntersector as $}from"../webgl-engine/lib/Intersector.js";import{fromValues as ee}from"../webgl-engine/lib/LocalOriginFactory.js";import{removeLoadedShaderModules as te}from"../webgl-engine/parts/requireUtils.js";import{TaskPriority as re}from"../../support/Scheduler.js";const se=[[-.1,-2,3.9,2],[-.1,-3.9,3.9,.1],[-2,-3.9,2,.1],[-3.9,-3.9,.1,.1],[-3.9,-2,.1,2],[-3.9,-.1,.1,3.9],[-2,-.1,2,3.9],[-.1,-.1,3.9,3.9]];let ie,ae=class extends t{constructor(e){super(e),this._handles=new r,this._spatialReference=null,this._renderSR=null,this._overlaySREqualsRenderSR=!0,this._drapeSources=new Map,this._drapeTargets=new Set,this._placementDirty=!1,this._contentUpdated=!1,this._drawTexturesDirty=!1,this._drawTexturesAnimateDirty=!1,this._layerViewsDirty=!0,this._hasUnusedRenderTargets=!1,this._longitudeCyclical=null,this._latestOriginId=0,this._maxResolution=s("esri-mobile")?2048:4096,this._animationTimeLast=0}get running(){return(this._placementDirty||this._layerViewsDirty)&&(this._drapeSources.size>0||this.view.graphics.length>0||q.OVERLAY_DRAW_DEBUG_TEXTURE)&&!!this._spatialReference&&!this.suspended&&this.surface.ready}get _isSpherical(){return this.view.state.isGlobal}get _worldToPCSRatio(){return n(this._spatialReference)&&this._spatialReference.isGeographic&&!this.view.state.isLocal?x(this._spatialReference).metersPerDegree:1}get view(){return this.surface.view}get updating(){return this.running||this.renderer.updating||this._contentUpdated}get hasHighlights(){return this.renderer.hasHighlights}get rendersOccluded(){return this.renderer.rendersOccluded}initialize(){const e=this.view;this.renderer=new Z({view:e,worldToPCSRatio:this._worldToPCSRatio,spatialReference:this._spatialReference}),this._groundIntersector=$(this.view.state.viewingMode),this._groundIntersector.options.backfacesTerrain=!0,this._groundIntersector.options.invisibleTerrain=!0,this._groundIntersector.options.hud=!1,this._handles.add([this.renderer.events.on("has-highlights",(()=>{this._setDrawTexturesDirty(),this.notifyChange("hasHighlights")})),this.renderer.events.on("has-water",(t=>{var r;return null==(r=e._stage)?void 0:r.renderView.setRenderParameters({hasOverlayWater:t})})),this.renderer.events.on("renders-occluded",(()=>{this._setDrawTexturesDirty(),this.notifyChange("rendersOccluded")})),this.renderer.events.on("content-changed",(()=>this._setDrawTexturesDirty())),this.renderer.events.on("textures-disposed",(()=>this.updateDrapeTargets())),e.watch(["pointsOfInterest.renderPointOfView","pointsOfInterest.centerOnSurfaceFrequent.location","pixelRatio"],(()=>this.setPlacementDirty())),this.surface.on("elevation-change",(()=>this.setPlacementDirty())),e.allLayerViews.on("after-changes",(()=>this._layerViewsDirty=!0)),e.watch("graphicsView",(()=>this._layerViewsDirty=!0)),e.on("resize",(()=>this.setPlacementDirty())),l({preRender:e=>{this._contentUpdated=!1,this.renderer.processSyncLayers(),this._updateLayerViews(),this.renderer.hasOverlays&&(this._dispatchAnimationUpdate(e),this._drawOverlayTextures(this.renderer.overlays,J.UPDATE)),this._hasUnusedRenderTargets&&this._collectUnusedRenderTargetMemory()}}),e.resourceController.scheduler.registerTask(re.OVERLAY,this),e._stage.renderView.events.on("force-camera-for-screenshot",(e=>{this._updateOverlays(e,J.BACKGROUND),this.renderer.hasOverlays&&this._drawOverlayTextures(this.renderer.overlays,J.BACKGROUND,e)}))]),this._updateLayerViews()}destroy(){this._drapeSources.forEach(((e,t)=>this.unregisterDrapeSource(t))),this._drapeTargets.forEach((e=>this._unregisterDrapeTarget(e))),this.renderer.dispose(),this._handles&&(this._handles.destroy(),this._handles=null),n(ie)&&(ie.hide(),ie=null)}get hasOverlays(){return this.renderer.hasOverlays}setSpatialReference(e){this._spatialReference=e,this.renderer.spatialReference=e,this._longitudeCyclical=null;const t=this.view.renderSpatialReference;n(e)&&n(t)?(this._renderSR=t,this._overlaySREqualsRenderSR=e.equals(this._renderSR),this._isSpherical&&(this._longitudeCyclical=e.isWebMercator?new Y(-20037508.342787,20037508.342787):new Y(-180,180),this.renderer.longitudeCyclical=this._longitudeCyclical),this.renderer&&(this.renderer.worldToPCSRatio=this._worldToPCSRatio)):this.renderer.disposeOverlays()}get gpuMemoryUsage(){return this.renderer.gpuMemoryUsage}_updateLayerViews(){if(!this._layerViewsDirty)return;const e=new Set;for(const r of this.view.allLayerViews.items)e.add(r.uid),"drapeSourceType"in r&&!this._drapeSources.has(r)&&this._registerDrapeSource(r,B.LAYER_VIEW),"drapeTargetType"in r&&!this._drapeTargets.has(r)&&this._registerDrapeTarget(r);const t=this.view.graphicsView;n(t)&&!this._drapeSources.has(t)&&(this._registerDrapeSource(t,B.LAYER_VIEW),e.add(t.uid)),this._drapeSources.forEach(((t,r)=>{t!==B.LAYER_VIEW||e.has(r.uid)||this.unregisterDrapeSource(r)})),this._drapeTargets.forEach((t=>{e.has(t.uid)||this._unregisterDrapeTarget(t)})),this.renderer.updateLayerOrder(),this._setDrawTexturesDirty(),this._layerViewsDirty=!1}registerDrapeSource(e){this._registerDrapeSource(e,B.EXTERNAL)}_registerDrapeSource(e,t){this._drapeSources.set(e,t),this.renderer.ensureOverlays(this._drapeTargets,this._drapeSources),this._updateDrapeSourceExtent(e),this._setContentDirty(),this.notifyChange("running")}_updateDrapeSourceExtent(e){2===this.renderer.overlays.length&&n(e.setDrapingExtent)&&n(this._spatialReference)&&e.setDrapingExtent(this.renderer.overlays,this._spatialReference)}unregisterDrapeSource(e){this._drapeSources.has(e)&&(this._drapeSources.delete(e),this.renderer.ensureDrapeSources(this._drapeSources),this._setContentDirty(),this.notifyChange("running"))}_registerDrapeTarget(e){this._drapeTargets.add(e),this._updateDrapeTarget(e),this.renderer.ensureOverlays(this._drapeTargets,this._drapeSources)}updateDrapeTargets(){this._drapeTargets.forEach((e=>this._updateDrapeTarget(e)))}_updateDrapeTarget(e){e.setDrapingTextures(this.renderer.overlays)}_unregisterDrapeTarget(e){this._drapeTargets.delete(e),this.renderer.ensureDrapeTargets(this._drapeTargets)}_setContentDirty(){this.setPlacementDirty(),this._setDrawTexturesDirty()}setPlacementDirty(){this._placementDirty=!0}runTask(){this._updateOverlays(this.view.state.camera,J.UPDATE)}_updateOverlays(e,t){if(!this._spatialReference)return;this._updateLayerViews();const r=K(e.fullWidth,e.fullHeight,this._maxResolution);this._computeOverlayExtents(e,r,le);const s=P(le.inner)/P(le.outer);this.renderer.ensureOverlays(this._drapeTargets,this._drapeSources);const i=this._updateOverlay(X.INNER,le.inner,r,1*le.pixelRatioAdjustment,le.mapUnitsPerPixel),a=this._updateOverlay(X.OUTER,le.outer,r,s*le.pixelRatioAdjustment,le.mapUnitsPerPixel);i!==ue.EXTENT&&a!==ue.EXTENT||(this._drapeSources.forEach(((e,t)=>this._updateDrapeSourceExtent(t))),this.surface.updateTileOverlayParams(t)),i===ue.NONE&&a===ue.NONE||this._setDrawTexturesDirty(),this._placementDirty=!1}_updateOverlay(e,t,r,s,i){if(0===this.renderer.overlays.length)return ue.NONE;const a=this.renderer.overlays[e],n=a.mapUnitsPerPixel;if(a.mapUnitsPerPixel=i,a.pixelRatio=s,ne(t,a.extent)&&r===a.resolution)return n===i?ue.NONE:ue.RERENDER_ONLY;U(a.extent,t),a.resolution=r;const o=M(a.extent);return a.renderLocalOrigin=ee(o[0],o[1],0,"OV_"+this._latestOriginId++),ue.EXTENT}setTileParameters(e){const t=e.renderData.overlay;if(this.renderer.overlays.length>0){const r=this.renderer.overlays[X.INNER],s=this.renderer.overlays[X.OUTER],i=I(e.extent,this.surface.extent,ce);this._rectInsideRect(r.extent,i)||this._rectanglesOverlap(i,r.extent)||this._rectanglesOverlap(i,s.extent)?(this._setTileOverlayData(i,X.INNER,t),this._setTileOverlayData(i,X.OUTER,t)):(this._clearTileOverlayData(X.INNER,t),this._clearTileOverlayData(X.OUTER,t))}else this._clearTileOverlayData(X.INNER,t),this._clearTileOverlayData(X.OUTER,t)}overlayPixelSizeInMapUnits(e){if(0===this.renderer.overlays.length)return 0;const t=this.renderer.overlays[X.INNER],r=this.renderer.overlays[X.OUTER],s=this._pointIsInExtent(e,t.extent)?t:r;return(s.extent[2]-s.extent[0])/s.resolution}_setTileOverlayData(e,t,r){if(0===this.renderer.overlays.length)return;const s=this.renderer.overlays[t].extent,i=P(s),a=C(s);let n=e[0];if(this._longitudeCyclical){n=this._longitudeCyclical.minimalMonotonic(s[0],n);const t=this._longitudeCyclical.minimalMonotonic(s[0],e[2]);n>t&&(n=t-(e[2]-e[0]))}r.setScale(t,P(e)/i,C(e)/a),r.setOffset(t,(n-s[0])/i,(e[1]-s[1])/a)}_clearTileOverlayData(e,t){t.setScale(e,-1,-1),t.setOffset(e,-1,-1)}async reloadShaders(){te(),await this.renderer.reloadShaders(),this._setDrawTexturesDirty(),this.runTask()}_dispatchAnimationUpdate(e){const t=c(e.time-this._animationTimeLast);(t>=this.surface.view._stage.renderView.animationTimestep||n(this.forcedAnimationTime)||this._drawTexturesDirty||this._drawTexturesAnimateDirty)&&(this.renderer.updateAnimation({dt:t,forcedTime:this.forcedAnimationTime,camera:this.view.state.camera})&&(this._drawTexturesAnimateDirty=!0),this._animationTimeLast=e.time)}_setDrawTexturesDirty(){this.renderer.hasOverlays?(this._contentUpdated=!0,this._drawTexturesDirty=!0):this.setPlacementDirty()}_intersectGroundFromView(e,t,r,s){const i=this.view.sceneIntersectionHelper.getCenterRayWithSubpixelOffset(e,pe,t,r);if(o(i))return!1;const a=i.origin,n=_(he,i.origin,i.direction);return this._groundIntersector.reset(a,n,e),this._groundIntersector.intersect([],null),this.view.basemapTerrain.intersect(this._groundIntersector,null,a,n),this._groundIntersector.results.min.getIntersectionPoint(s)}_findHorizonBasedPointOfInterest(e,t){let r=.5;const s=.55,a=this.view.renderCoordsHelper.getAltitude(e.eye),n=this.view.pointsOfInterest.centerOnSurfaceFrequent,o=1e-5,h=i(n.estimatedSurfaceAltitude,e.aboveGround?-1/0:a+o,e.aboveGround?a-o:1/0),l=e.aboveGround;if("global"===this.view.viewingMode){const t=he;L(G(x(this.view.spatialReference).radius+h),V(e.eye,e.viewForward),t),y(t,t,e.eye);const i=z.normalize(H(e.viewForward,t,e.viewRight))/e.fovY+.5,a=i<=0||i>=1?.5:s;r=l?a*i:i+a*(1-i)}else{const t=.5*Math.PI-Math.acos(-e.viewForward[2]),a=Math.tan(t),n=O(0,a,1,0),o=T(n,n,e.projectionMatrix)[1],h=i(.5+.5*o,0,1);r=1===h||0===h?.5:l?h*s:1-(1-h)*s}return!!this._intersectGroundFromView(e,.5,r,t)&&g(t,e.eye)<n.distance*n.distance}_computeOverlayExtents(e,t,r){const s=this.view.pointsOfInterest.centerOnSurfaceFrequent.renderLocation,i=v();this._findHorizonBasedPointOfInterest(e,i)||m(i,s);const l=Math.max(.1,f(e.eye,i)),c=F(this.view.renderCoordsHelper,s,e.eye),d=Math.PI/2-Math.abs(c-Math.PI/2);q.OVERLAY_SHOW_CENTER?(o(ie)&&(ie=new W(this.view.graphics,"red")),ie.show(i,this._renderSR)):n(ie)&&ie.hide(),this._overlaySREqualsRenderSR||E(i,this._renderSR,i,this._spatialReference);const p=this.surface.extent,_=!this._isSpherical&&n(this._spatialReference)&&this._spatialReference.isGeographic,y=_&&n(this._spatialReference)?1/x(this._spatialReference).metersPerDegree:1,g=e.perRenderPixelRatio*l*y;r.mapUnitsPerPixel=g/this._worldToPCSRatio;let T=t*g/2,D=!1,O=_?90:1/0;this._isSpherical&&n(p)&&n(this._spatialReference)&&(this._spatialReference.isWebMercator?(T/=Math.cos(k(i[1])),O=p[3]):(D=!0,T/=x(this._spatialReference).metersPerDegree,O=90),T>=O&&(T=O,i[1]=0,this._spatialReference.isWebMercator&&(i[0]=0)));let S=1;D&&(S=1/Math.max(.2,Math.cos(Math.abs(a(i[1])))),T*S>180&&(S=180/T),r.mapUnitsPerPixel*=S);const M=Math.log(2)/12;T=Math.exp(Math.round(Math.log(T)/M)*M);const C=T*S,N=32,b=.5*t/(N*C),A=.5*t/(N*T);i[0]=Math.round(i[0]*b)/b,i[1]=Math.round(i[1]*A)/A;const V=r.inner;V[0]=i[0]-C,V[1]=i[1]-T,V[2]=i[0]+C,V[3]=i[1]+T,this._isSpherical&&this._shiftExtentToFitBounds(V,1/0,O);const L=r.outer;if(6*C>P(p))U(L,h(p));else if(d<=.25*Math.PI)L[0]=V[0]-C,L[1]=V[1]-T,L[2]=V[2]+C,L[3]=V[3]+T;else{E(e.eye,this._renderSR,he,this._spatialReference),u(oe,i,he);let t=-Math.atan2(oe[1],oe[0])+.125*Math.PI;t<0&&(t+=2*Math.PI);const r=Math.floor(t/(.25*Math.PI));R(oe,se[r],2*T),oe[0]*=S,oe[2]*=S,w(L,V,oe)}if(this._isSpherical)L[0]=this._longitudeCyclical.clamp(L[0]),L[2]=this._longitudeCyclical.clamp(L[2]),L[1]=Math.max(L[1],-O),L[3]=Math.min(L[3],O);else{const e=I(V,p,ce),t=I(L,p,de);j(e,t)&&(L[2]=L[0],L[3]=L[1])}const G=Math.abs(V[2]-V[0])/t;r.mapUnitsPerPixel=Math.max(r.mapUnitsPerPixel,G),r.pixelRatioAdjustment=r.mapUnitsPerPixel/G}_drawOverlayTextures(e,t,r=this.view.state.camera){if(0===e.length||!this._drawTexturesDirty&&!this._drawTexturesAnimateDirty)return;const s=this._drawTexturesDirty;this._drawTexturesDirty=!1,this._drawTexturesAnimateDirty=!1;const i=this._drawOverlay(e[X.INNER],r),a=this._drawOverlay(e[X.OUTER],r);i!==Q.CHANGED&&a!==Q.CHANGED||this.surface.updateTileOverlayParams(J.UPDATE),this._collectUnusedRenderTargetMemory(),this.updateDrapeTargets(),s?(this.surface.requestRender(t),t===J.UPDATE&&this.surface.requestUpdate()):this.surface.requestRender(J.BACKGROUND)}_drawOverlay(e,t){return this._longitudeCyclical?e.setupGeometryViewsCyclical(this._longitudeCyclical):e.setupGeometryViewsDirect(),e.draw(this.renderer,t.pixelRatio)}_collectUnusedRenderTargetMemory(){if(this._hasUnusedRenderTargets=!1,this.renderer.hasOverlays){const e=performance.now();this._hasUnusedRenderTargets=this.renderer.collectUnusedRenderTargetMemory(e)}}_rectanglesOverlap(e,t){return!o(e)&&(this._longitudeCyclical?(this._longitudeCyclical.contains(t[0],t[2],e[0])||this._longitudeCyclical.contains(t[0],t[2],e[2])||this._longitudeCyclical.contains(e[0],e[2],t[0]))&&!(e[1]>t[3]||e[3]<t[1]):N(e,t))}_rectInsideRect(e,t){return!o(t)&&(this._longitudeCyclical?this._longitudeCyclical.contains(e[0],e[2],t[0])&&this._longitudeCyclical.contains(e[0],e[2],t[2])&&t[1]>e[1]&&t[3]<e[3]:j(e,t))}_pointIsInExtent(e,t){if(this._longitudeCyclical)return this._longitudeCyclical.contains(t[0],t[2],e.x)&&e.y>=t[1]&&e.y<=t[3];const r=e.x,s=e.y;return r>t[0]&&r<t[2]&&s>t[1]&&s<t[3]}_shiftExtentToFitBounds(e,t,r){let s=0,i=0;e[0]<-t?s=e[0]+t:e[2]>t&&(s=t-e[2]),e[1]<-r?i=e[1]+r:e[3]>r&&(i=r-e[3]),b(e,s,i)}get test(){return{renderer:this.renderer,update:()=>this.runTask()}}};function ne(e,t){const r=1e-5,s=q.TESTS_DISABLE_OPTIMIZATIONS?0:r*Math.max(e[2]-e[0],e[3]-e[1],t[2]-t[0],t[3]-t[1]);return Math.abs(t[0]-e[0])<=s&&Math.abs(t[1]-e[1])<=s&&Math.abs(t[2]-e[2])<=s&&Math.abs(t[3]-e[3])<=s}e([d()],ae.prototype,"_spatialReference",void 0),e([d({readOnly:!0})],ae.prototype,"running",null),e([d()],ae.prototype,"_placementDirty",void 0),e([d()],ae.prototype,"_contentUpdated",void 0),e([d()],ae.prototype,"_layerViewsDirty",void 0),e([d()],ae.prototype,"_isSpherical",null),e([d()],ae.prototype,"_worldToPCSRatio",null),e([d()],ae.prototype,"renderer",void 0),e([d({constructOnly:!0})],ae.prototype,"surface",void 0),e([d({readOnly:!0,aliasOf:"surface.suspended"})],ae.prototype,"suspended",void 0),e([d({readOnly:!0})],ae.prototype,"updating",null),e([d({type:Boolean})],ae.prototype,"hasHighlights",null),e([d({type:Boolean})],ae.prototype,"rendersOccluded",null),ae=e([p("esri.views.3d.terrain.OverlayManager")],ae);const oe=D(),he=v(),le={inner:S(),outer:S(),mapUnitsPerPixel:0,pixelRatioAdjustment:1},ce=S(),de=S(),pe=A();var ue;!function(e){e[e.NONE=0]="NONE",e[e.EXTENT=1]="EXTENT",e[e.RERENDER_ONLY=2]="RERENDER_ONLY"}(ue||(ue={}));export{ae as OverlayManager};
