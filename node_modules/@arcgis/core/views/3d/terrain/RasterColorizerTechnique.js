/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as o}from"../../../chunks/tslib.es6.js";import{isSome as r}from"../../../core/maybe.js";import{RasterColorizerType as e,RasterColorizerStretchType as i}from"../../2d/engine/imagery/enums.js";import{BlendMode as t}from"../webgl-engine/core/shaderLibrary/output/BlendOptions.js";import{R as s}from"../../../chunks/RasterColorizer.glsl.js";import{ReloadableShaderModule as n}from"../webgl-engine/core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as a}from"../webgl-engine/core/shaderTechnique/ShaderTechnique.js";import{parameter as c,ShaderTechniqueConfiguration as p}from"../webgl-engine/core/shaderTechnique/ShaderTechniqueConfiguration.js";import{Default3D as m}from"../webgl-engine/lib/DefaultVertexAttributeLocations.js";import{Program as l}from"../webgl-engine/lib/Program.js";import{BlendFactor as h}from"../../webgl/enums.js";import{getUniformLocationInfos as u,setUniforms as f}from"../../webgl/rasterUtils.js";import{simpleBlendingParams as g,makePipelineState as d,defaultColorWriteParams as b}from"../../webgl/renderState.js";class y extends a{get uniformLocationInfos(){return this._uniformLocationInfos||(this._uniformLocationInfos=u(this._context,this.program)),this._uniformLocationInfos}initializeProgram(o){const r=y.shader.get(),e=this.configuration,i=r.build({output:e.colorizerType,applyColormap:e.applyColormap,stretchType:e.stretchType});return this._context=o.rctx,new l(o.rctx,i,m)}initializePipeline(){const o=this.configuration.mode===t.OneMinusSourceAlpha?g(h.ONE,h.ONE_MINUS_SRC_ALPHA):this.configuration.mode===t.SourceAlpha?g(h.ZERO,h.SRC_ALPHA):null;return d({blending:o,colorWrite:b})}bindPass(o){f(this.program,this.uniformLocationInfos,o.basic),f(this.program,this.uniformLocationInfos,o.common),r(o.colormap)&&f(this.program,this.uniformLocationInfos,o.colormap),this.configuration.colorizerType===e.Stretch&&r(o.stretch)?f(this.program,this.uniformLocationInfos,o.stretch):this.configuration.colorizerType===e.Hillshade&&r(o.hillshade)&&f(this.program,this.uniformLocationInfos,o.hillshade)}}y.shader=new n(s,(()=>import("../webgl-engine/core/shaderLibrary/raster/RasterColorizer.glsl.js")));class T extends p{constructor(){super(...arguments),this.mode=t.OneMinusSourceAlpha,this.colorizerType=e.Stretch,this.stretchType=i.Noop,this.applyColormap=!0}}o([c({count:t.COUNT})],T.prototype,"mode",void 0),o([c({count:e.COUNT})],T.prototype,"colorizerType",void 0),o([c({count:i.COUNT})],T.prototype,"stretchType",void 0),o([c()],T.prototype,"applyColormap",void 0);export{y as RasterColorizerTechnique,T as RasterColorizerTechniqueConfiguration};
