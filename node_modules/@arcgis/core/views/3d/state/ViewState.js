/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../core/Accessor.js";import r from"../../../core/Evented.js";import{isSome as o}from"../../../core/maybe.js";import{property as a}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as i}from"../../../core/accessorSupport/decorators/subclass.js";import{afterDispatch as s}from"../../../core/accessorSupport/watch.js";import{f as n}from"../../../chunks/vec3f64.js";import{getReferenceEllipsoid as l}from"../../../geometry/projectionEllipsoid.js";import p from"../../ViewAnimation.js";import{ViewingMode as c}from"../../ViewingMode.js";import m from"./Constraints.js";import{AnimationController as h}from"./controllers/AnimationController.js";import{State as d}from"./controllers/CameraController.js";import{PropertiesPool as u}from"../support/PropertiesPool.js";import C,{PaddingSide as g}from"../webgl-engine/lib/Camera.js";let y=class extends t{constructor(){super(...arguments),this._propertiesPool=new u({camera:C},this),this._lastSeenCameraProjectionValues=new C,this.events=new r,this.viewingMode=c.Global,this._cameraChanged=!1,this.updateQueue=new Array,this.processingUpdates=!1}init(e,t){this._set("viewingMode",e),this._set("spatialReference",t),this._set("constraints",new m({mode:this.viewingMode}))}exit(){this.cameraController=null,this._propertiesPool.destroy(),this._propertiesPool=new u({camera:C},this)}createInitialCamera(){if(this.viewingMode===c.Global){const e=l(this.spatialReference).radius;this.camera=new C(n(4*e,0,0),n(e,0,0),n(0,0,1))}else this.camera=new C(n(0,0,100),n(0,0,0),n(0,1,0))}get animation(){return this.cameraController instanceof h&&o(this.cameraController.viewAnimation)?this.cameraController.viewAnimation:null}get camera(){return this._get("camera")}set camera(e){e!==w&&w.copyFrom(e),w.computeUp(this.viewingMode),_.camera=w,this.events.emit("before-camera-change",_);const t=this._get("camera");if(this._cameraProjectionChanged(this._lastSeenCameraProjectionValues,w)&&(this._lastSeenCameraProjectionValues.copyFrom(w),v.camera=this._lastSeenCameraProjectionValues,this.events.emit("camera-projection-changed",v)),(!t||!t.equals(w))&&(this._set("camera",this._propertiesPool.get("camera").copyFrom(w)),this._cameraChanged=!t||!t.almostEquals(w),this._cameraChanged)){const e=s((()=>{this._cameraChanged=!1,e.remove()}))}}get contentCamera(){return o(this._contentCamera)?this._contentCamera:this.camera}set contentCamera(e){this._contentCamera=o(e)?e.clone():null}get fixedContentCamera(){return!!o(this._contentCamera)}get isGlobal(){return this.viewingMode===c.Global}get isLocal(){return this.viewingMode===c.Local}get navigating(){return!(!this.cameraController||!this.cameraController.isInteractive)}get stationary(){return!this._cameraChanged&&!this.navigating}get cameraController(){return this._get("cameraController")}set cameraController(e){this.stopActiveCameraController()?(e&&(e.watch("state",(t=>{t!==d.Finished&&t!==d.Stopped||(this._set("cameraController",null),this.updateCamera((t=>e.onControllerEnd(t))))}),!0),e.onControllerStart(this.camera)),this._set("cameraController",e)):e&&(e.state=d.Rejected)}switchCameraController(e){return this.cameraController=e,e.state!==d.Rejected}stopActiveCameraController(){return!(this.cameraController&&!this.cameraController.stopController())}updateCamera(e){this.updateQueue.push(e),this._processUpdateQueue()}_processUpdateQueue(){if(0===this.updateQueue.length||this.processingUpdates)return;this.processingUpdates=!0;const e=this.updateQueue.shift();w.copyFrom(this._get("camera")),e(w),this.camera=w,this.processingUpdates=!1,this._processUpdateQueue()}_cameraProjectionChanged(e,t){return e.fov!==t.fov||(e.fullViewport[0]!==t.fullViewport[0]||e.fullViewport[1]!==t.fullViewport[1]||e.fullViewport[2]!==t.fullViewport[2]||e.fullViewport[3]!==t.fullViewport[3]||(e.padding[g.TOP]!==t.padding[g.TOP]||e.padding[g.RIGHT]!==t.padding[g.RIGHT]||e.padding[g.BOTTOM]!==t.padding[g.BOTTOM]||e.padding[g.LEFT]!==t.padding[g.LEFT]))}};e([a({readOnly:!0,type:p})],y.prototype,"animation",null),e([a({type:C})],y.prototype,"camera",null),e([a({})],y.prototype,"_contentCamera",void 0),e([a({type:C})],y.prototype,"contentCamera",null),e([a({readOnly:!0})],y.prototype,"fixedContentCamera",null),e([a({readOnly:!0})],y.prototype,"constraints",void 0),e([a({readOnly:!0})],y.prototype,"events",void 0),e([a({readOnly:!0})],y.prototype,"isGlobal",null),e([a({readOnly:!0})],y.prototype,"isLocal",null),e([a({readOnly:!0})],y.prototype,"viewingMode",void 0),e([a({readOnly:!0})],y.prototype,"spatialReference",void 0),e([a({readOnly:!0})],y.prototype,"navigating",null),e([a({readOnly:!0})],y.prototype,"stationary",null),e([a()],y.prototype,"_cameraChanged",void 0),e([a()],y.prototype,"cameraController",null),y=e([i("esri.views.3d.state.ViewState")],y);const f=y,w=new C,_={camera:null},v={camera:null};export{f as default};
