/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../../chunks/tslib.es6.js";import{Milliseconds as e}from"../../../../../core/time.js";import"../../../../../core/Logger.js";import"../../../../../core/accessorSupport/ensureType.js";import"../../../../../core/arrayUtils.js";import"../../../../../core/has.js";import"../../../../../core/accessorSupport/set.js";import{subclass as i}from"../../../../../core/accessorSupport/decorators/subclass.js";import{g as o,f as s,l as r,n as a,b as n,a as m,e as c}from"../../../../../chunks/vec3.js";import{c as p}from"../../../../../chunks/vec3f64.js";import{applyAll as h}from"../../../camera/constraintUtils.js";import{ConstraintTypes as l,InteractionType as C,TiltMode as y}from"../../../camera/constraintUtils/common.js";import{PointToPointAnimationController as u}from"../PointToPointAnimationController.js";import f from"../../../webgl-engine/lib/Camera.js";import{newIntersector as j}from"../../../webgl-engine/lib/Intersector.js";import{outExpo as g}from"../../../../animation/easing.js";const w=.6,v=4,L=60,b=14,d=20;let z=class extends u{constructor(){super(...arguments),this.zoomLocation=p(),this.tmpCamera=new f,this.tmpRayDir=p(),this.tmpCenter=p(),this.constraintOptions={selection:l.ALL,interactionType:C.ZOOM,interactionFactor:null,interactionStartCamera:new f,interactionDirection:null,tiltMode:y.TUMBLE}}zoomStep(t,e){if(!this.active)return;const i=this.view.state,{interactionStartCamera:c}=this.constraintOptions;this.animation.finished?c.copyFrom(i.camera):this.animation.cameraAt(1,c),this.tmpCamera.copyFrom(i.camera);const h=j(this.view.state.viewingMode);t>0?(this.intersectionHelper.intersectScreenFreePointFallback(e,this.zoomLocation),this.intersectionHelper.intersectRay(this.tmpCamera.ray,h,this.tmpCenter)&&(this.tmpCamera.center=this.tmpCenter)):this.intersectionHelper.intersectRay(this.tmpCamera.ray,h,this.zoomLocation)?this.tmpCamera.center=this.zoomLocation:o(this.zoomLocation,this.tmpCamera.center);const l=w**t;let C=this.view._stage.renderView.getMinimalDepthForArea(this.view.getVoxelWasmPerSceneView(),e[0],e[1],this.view.state.camera,L);const y=Math.max(b*Math.abs(this.view.camera.position.z),d);if(C=C?Math.min(C,y):y,C){const t=p();s(t,this.zoomLocation,this.tmpCamera.eye),C<r(t)&&(a(t,t),n(this.zoomLocation,this.tmpCamera.eye,m(t,t,C)))}this._updateCamera(this.tmpCamera,l,this.zoomLocation),this.begin(this.tmpCamera)}animationSettings(){return{apex:null,duration:e(600),easing:g}}_updateCamera(t,e,i){s(this.tmpRayDir,i,t.eye);const o=r(this.tmpRayDir);let a=o*e;const n=e<=1,p=Math.max(v,1.01*t.nearFar[0]);n&&a<p&&(a=p,e=a/o),Math.abs(o-a)<1e-6||(m(this.tmpRayDir,this.tmpRayDir,e),t.eye=s(M,i,this.tmpRayDir),t.center=c(M,t.center,i,1-e),h(this.view,t,this.constraintOptions))}};z=t([i("esri.views.3d.state.controllers.local.ZoomStepController")],z);const M=p();export{z as ZoomStepController};
