/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import{a as r,P as i}from"../../../chunks/Precipitation.glsl.js";import{ReloadableShaderModule as t}from"../webgl-engine/core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as o}from"../webgl-engine/core/shaderTechnique/ShaderTechnique.js";import{parameter as n,ShaderTechniqueConfiguration as s}from"../webgl-engine/core/shaderTechnique/ShaderTechniqueConfiguration.js";import{Program as a}from"../webgl-engine/lib/Program.js";import{VertexAttribute as l}from"../webgl-engine/lib/VertexAttribute.js";import{BlendFactor as c,CompareFunction as p}from"../../webgl/enums.js";import{makePipelineState as m,separateBlendingParams as g,defaultColorWriteParams as u}from"../../webgl/renderState.js";class h extends o{initializeProgram(e){const r=h.shader.get(),i=this.configuration,t=r.build({type:i.type});return new a(e.rctx,t,h.attributeLocation)}initializePipeline(){return m({blending:g(c.ONE,c.ONE,c.ONE_MINUS_SRC_ALPHA,c.ONE_MINUS_SRC_ALPHA),depthTest:{func:p.LEQUAL},colorWrite:u})}}h.shader=new t(r,(()=>import("./Precipitation.glsl.js"))),h.attributeLocation=new Map([[l.POSITION,0],[l.INSTANCEFEATUREATTRIBUTE,1]]);class d extends s{constructor(){super(...arguments),this.type=i.RAIN}}e([n()],d.prototype,"type",void 0);export{h as PrecipitationTechnique,d as PrecipitationTechniqueConfiguration};
