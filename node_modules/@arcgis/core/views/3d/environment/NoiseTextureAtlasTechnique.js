/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{N as e}from"../../../chunks/NoiseTextureAtlas.glsl.js";import{ReloadableShaderModule as r}from"../webgl-engine/core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as t}from"../webgl-engine/core/shaderTechnique/ShaderTechnique.js";import{Default3D as i}from"../webgl-engine/lib/DefaultVertexAttributeLocations.js";import{Program as o}from"../webgl-engine/lib/Program.js";import{BlendFactor as s,CompareFunction as n}from"../../webgl/enums.js";import{makePipelineState as l,simpleBlendingParams as a,defaultColorWriteParams as m}from"../../webgl/renderState.js";class u extends t{constructor(e){super(e,null,(()=>this.destroy()))}initializeProgram(e){const r=u.shader.get().build();return new o(e.rctx,r,i)}initializePipeline(){return l({blending:a(s.ONE,s.ZERO),depthTest:{func:n.LEQUAL},colorWrite:m})}}u.shader=new r(e,(()=>import("./NoiseTextureAtlas.glsl.js")));export{u as NoiseTextureAtlasTechnique};
