/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import{clone as t}from"../../../core/lang.js";import n from"../../../core/Logger.js";import{property as i}from"../../../core/accessorSupport/decorators/property.js";import{cast as r}from"../../../core/accessorSupport/decorators/cast.js";import{subclass as o}from"../../../core/accessorSupport/decorators/subclass.js";import{ensureOneOfType as s}from"../../../core/accessorSupport/ensureType.js";import{lightingTypes as h}from"./lightingUtils.js";import g from"./SceneViewAtmosphere.js";import a from"./SunLighting.js";import c from"./SunnyWeather.js";import l from"./VirtualLighting.js";import{weatherTypes as p,validateWeatherType as m}from"./weather.js";import u from"../../../webscene/Environment.js";import b from"../../../webscene/Lighting.js";var d;const f=n.getLogger("esri.views.3d.environment.SceneViewEnvironment");let w=d=class extends u{constructor(e){super(e),this.atmosphere=new g,this.lighting=new a}static fromWebsceneEnvironment(e){const t=e.cloneConstructProperties();return new d({...t,lighting:a.fromWebsceneLighting(t.lighting)})}set weather(e){m(null==e?void 0:e.type,f)&&this._set("weather",e)}castLighting(e){return this._convertLighting(e)}applyLighting(e){this.lighting=this._convertLighting(e)}_convertLighting(e){return e?e instanceof a||e instanceof l?e:e instanceof b?"sun"===(null==(t=this.lighting)?void 0:t.type)?this.lighting.cloneWithWebsceneLighting(e):a.fromWebsceneLighting(e):s(h,e):new a;var t}clone(){return new d({lighting:this.lighting.clone(),atmosphere:this.atmosphere.clone(),weather:this.weather.clone(),atmosphereEnabled:this.atmosphereEnabled,starsEnabled:this.starsEnabled,background:t(this.background)})}cloneWithWebsceneEnvironment(e){return new d({atmosphere:this.atmosphere.clone(),weather:this.weather.clone(),atmosphereEnabled:this.atmosphereEnabled,starsEnabled:this.starsEnabled,background:t(this.background),...e.cloneConstructProperties(),lighting:this.lighting.type&&"sun"!==this.lighting.type?a.fromWebsceneLighting(e.lighting):this.lighting.cloneWithWebsceneLighting(e.lighting)})}};e([i({type:g,json:{read:!1},nonNullable:!0})],w.prototype,"atmosphere",void 0),e([i({types:p,nonNullable:!0,json:{write:!1},value:new c})],w.prototype,"weather",null),e([i({nonNullable:!0})],w.prototype,"lighting",void 0),e([r("lighting")],w.prototype,"castLighting",null),w=d=e([o("esri.views.3d.environment.SceneViewEnvironment")],w);const v=w;export{v as default};
