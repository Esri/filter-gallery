/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../core/Accessor.js";import"../../../core/has.js";import s from"../../../core/Handles.js";import{lerp as i}from"../../../core/mathUtils.js";import{destroyMaybe as r,isSome as o,isNone as n}from"../../../core/maybe.js";import{watch as h,syncAndInitial as a,initial as p}from"../../../core/reactiveUtils.js";import{when as l}from"../../../core/watchUtils.js";import{property as d}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as _}from"../../../core/accessorSupport/decorators/subclass.js";import{l as m}from"../../../chunks/vec3.js";import{getReferenceEllipsoid as c}from"../../../geometry/projectionEllipsoid.js";import{isMoon as u,isEarth as g}from"../../../geometry/support/spatialReferenceUtils.js";import{enablePrecipitation as w}from"../../../support/featureFlags.js";import{ChapmanAtmosphere as v}from"./ChapmanAtmosphere.js";import{CloudsComposition as y}from"./CloudsComposition.js";import{isReadyCloudsData as f}from"./CloudsData.js";import{CloudsGenerator as A}from"./CloudsGenerator.js";import{cloudPresets as R}from"./CloudsPresets.js";import{Fog as b}from"./Fog.js";import{PanoramicAtmosphere as E}from"./PanoramicAtmosphere.js";import{Precipitation as j}from"./Precipitation.js";import{P as N}from"../../../chunks/Precipitation.glsl.js";import x from"./SimpleAtmosphere.js";import{Stars as C}from"./Stars.js";import{weatherHeightLimit as T}from"./weather.js";import{RenderPass as P}from"../webgl-engine/lib/RenderPass.js";import{RenderSlot as O}from"../webgl-engine/lib/RenderSlot.js";var S;const M=[O.POSTPROCESSING_ENVIRONMENT_OPAQUE,O.POSTPROCESSING_ENVIRONMENT_TRANSPARENT];let U,I=S=class extends t{constructor(e){super(e),this._handles=new s,this._context=null,this._pendingAtmosphere=null,this._atmosphere=null,this._precipitationEnabled=w()}initialize(){this.view._stage.addRenderPlugin(M,this)}destroy(){var e;this._pendingAtmosphere=r(this._pendingAtmosphere),null!=(null==(e=this.view)?void 0:e._stage)&&this.view._stage.removeRenderPlugin(this),this._handles=r(this._handles),this._set("view",null)}get atmosphereType(){return o(this._pendingAtmosphere)?this._pendingAtmosphere.type:o(this._atmosphere)?this._atmosphere.type:"none"}get canRender(){var e;return!(null==(e=this.view.basemapTerrain)||!e.renderer.canRender)||"global"!==this.view.viewingMode}get needsLinearDepth(){return"realistic"===this._selectAtmosphereType()}updateAnimation(e){return!!o(this._precipitation)&&this._precipitation.update(e)}get updating(){return o(this._pendingAtmosphere)||o(this._stars)&&this._stars.updating||o(this._clouds)&&this._clouds.running}get weatherVisible(){return m(this.view.state.camera.eye)-c(this.view.spatialReference).radius<=T}get _stars(){var e,t;const s=this.view,i=null!=(e=null==(t=s.environment)?void 0:t.starsEnabled)&&e,h=this._get("_stars");return!i||n(this._context)?(r(h),null):o(h)?h:new C({view:s,requestRender:()=>this._setNeedsRender()})}get _precipitation(){const e=this._get("_precipitation");if(!this._precipitationEnabled||n(this._context))return r(e),null;const t=this.view,s=this._context;return o(e)&&e.context===s?e:(r(e),new j({context:s,view:t}))}get _clouds(){const e=this._get("_clouds");if(!this.weatherEnabled||n(this._context))return r(e),null;if(o(e))return e;const t=this.view,s=this._context.renderContext.rctx;return r(e),new A({rctx:s,view:t,requestRender:()=>this._setNeedsRender()})}get _cloudComposition(){const e=this._get("_cloudComposition");if(!this.weatherEnabled||n(this._context))return r(e),null;const t=this.view.state.viewingMode,s=this._context.renderContext.rctx,i=c(this.view.spatialReference).radius;return o(e)&&e.viewingMode===t&&e.radius===i?e:(r(e),new y({rctx:s,viewingMode:t,radius:i}))}get _fog(){const e=this._get("_fog");if(!this.weatherEnabled||n(this._context))return r(e),null;if(o(e))return e;const t=this.view,s=this._context;return r(e),new b({context:s,view:t})}get weatherEnabled(){var e,t;return!(null==(e=this.view)||null==(t=e.environmentManager)||!t.weatherEnabled)}get precipitationEnabled(){return this._precipitationEnabled}set precipitationEnabled(e){this._precipitationEnabled=e}initializeRenderContext(e=null){this._context=e,this._handles.add([l(this.view,"basemapTerrain",(()=>this._updateBasemapTerrain()),!0),h((()=>({viewingMode:this.view.viewingMode,atmosphereEnabled:this.view.environment.atmosphereEnabled,atmosphereQuality:this.view.environment.atmosphere.quality})),(()=>this._updateAtmosphere()),a),h((()=>this._stars),(()=>this._setNeedsRender())),h((()=>this._clouds),(()=>this._updateWeather(this._weatherUpdateParameters)),p),h((()=>this._precipitation),(()=>this._setNeedsRender())),h((()=>this._fog),(()=>this._updateFog(this._weatherUpdateParameters)),p),h((()=>this._weatherUpdateParameters),(e=>{this._updateWeather(e),this._updateFog(e)}),a)])}uninitializeRenderContext(){this._context=null,this._atmosphere=r(this._atmosphere),this._set("_stars",r(this._stars)),this._set("_precipitation",r(this._precipitation)),this._set("_clouds",r(this._clouds)),this._set("_cloudComposition",r(this._cloudComposition)),this._set("_fog",r(this._fog))}render(e){if(e.pass===P.MATERIAL)switch(e.slot){case O.POSTPROCESSING_ENVIRONMENT_OPAQUE:o(this._stars)&&this._stars.render(e),o(this._atmosphere)&&this._atmosphere.canRender&&(this._atmosphere.render(e),f(this._clouds)&&o(this._cloudComposition)&&(this._cloudComposition.render(e,this._clouds,o(this.view.animation)),this._cloudComposition.isFading&&this._setNeedsRender()));break;case O.POSTPROCESSING_ENVIRONMENT_TRANSPARENT:if(o(this._atmosphere)&&this._atmosphere.canRender){const t=this.weatherEnabled?this.view.environment.weather.type:"disabled";if(this._atmosphere.renderHaze(e,"rainy"===t),o(this._fog)){const s="foggy"===t||"rainy"===t||"snowy"===t;(s||"realistic"!==this._selectAtmosphereType())&&this._fog.render(e,s,"rainy"===t)}"rainy"!==this.view.environment.weather.type&&"snowy"!==this.view.environment.weather.type||!o(this._precipitation)||this._precipitation.render(e,this.view.environment.weather.precipitation,"rainy"===this.view.environment.weather.type?N.RAIN:N.SNOW)}}}get _weatherUpdateParameters(){const e=this.weatherEnabled?this.view.environment.weather:null;return n(e)?null:"rainy"===e.type||"snowy"===e.type?{type:e.type,weatherAdjustment:e.cloudCover,effect:e.precipitation}:{type:e.type,weatherAdjustment:"foggy"===e.type?e.fogStrength:e.cloudCover}}_updateWeather(e){n(e)||n(this._clouds)||(this._clouds.applyPreset(R[e.type],e.weatherAdjustment),this._setNeedsRender())}_setNeedsRender(){o(this._context)&&this._context.requestRender()}_updateFog(e){if(!n(this._fog)&&!n(e))switch(e.type){case"foggy":this._fog.strength=i(3e-5,.005,e.weatherAdjustment**3),this._setNeedsRender();break;case"rainy":case"snowy":this._fog.strength=i(4e-6,8e-5,e.effect**3),this._setNeedsRender();break;default:this._fog.strength=4e-6,this._setNeedsRender()}}_updateAtmosphere(){const e=this._selectAtmosphereType();if(this.atmosphereType===e)return;o(this._pendingAtmosphere)&&(this._pendingAtmosphere!==this._atmosphere&&this._pendingAtmosphere.destroy(),this._pendingAtmosphere=null);const t=this._getAtmosphereClass();if(!t)return o(this._atmosphere)&&(this._atmosphere.destroy(),this._atmosphere=null,this._setNeedsRender()),void this._updateBasemapTerrain();const s=new t(this.view);o(this._context)&&s.initializeRenderContext(this._context),n(this._atmosphere)&&(this._atmosphere=s,this._setNeedsRender()),this._pendingAtmosphere=s,s.when().then((()=>{o(this._atmosphere)&&this._pendingAtmosphere&&this._pendingAtmosphere!==this._atmosphere&&(this._atmosphere.destroy(),this._atmosphere=this._pendingAtmosphere),this._pendingAtmosphere=null,this._setNeedsRender(),this._updateBasemapTerrain()})).catch((()=>{this._pendingAtmosphere===s&&(this._pendingAtmosphere=null)}))}_getAtmosphereClass(){switch(this._selectAtmosphereType()){case"none":return null;case"realistic":return v;case"panoramic":return E;case"simple":return x;default:return}}_selectAtmosphereType(){const e=this.view.get("environment.atmosphereEnabled"),t=this.view.get("environment.atmosphere.quality"),s=this.view.viewingMode;return!e||null==t||u(this.view.spatialReference)?"none":"local"===s?"panoramic":"high"===t&&o(this._context)&&v.isSupported(this._context)&&g(this.view.spatialReference)?"realistic":"simple"}_updateBasemapTerrain(){this.view.basemapTerrain&&(this.view.basemapTerrain.velvetOverground=o(this._atmosphere)&&"simple"===this.atmosphereType)}get test(){return{atmosphere:this._atmosphere,clouds:this._clouds,selectAtmosphereType:()=>this._selectAtmosphereType(),stubGetAtmosphereClass:e=>{U=S.prototype._getAtmosphereClass,S.prototype._getAtmosphereClass=e},restoreGetAtmosphereClass:()=>{S.prototype._getAtmosphereClass=U},precipitationEnabled:e=>{this.precipitationEnabled=e}}}};e([d({constructOnly:!0})],I.prototype,"view",void 0),e([d({type:Boolean,readOnly:!0})],I.prototype,"updating",null),e([d()],I.prototype,"weatherVisible",null),e([d()],I.prototype,"_context",void 0),e([d()],I.prototype,"_pendingAtmosphere",void 0),e([d({readOnly:!0})],I.prototype,"_stars",null),e([d({readOnly:!0})],I.prototype,"_precipitation",null),e([d({readOnly:!0})],I.prototype,"_clouds",null),e([d({readOnly:!0})],I.prototype,"_cloudComposition",null),e([d({readOnly:!0})],I.prototype,"_fog",null),e([d()],I.prototype,"weatherEnabled",null),e([d()],I.prototype,"_precipitationEnabled",void 0),e([d({readOnly:!0})],I.prototype,"_weatherUpdateParameters",null),I=S=e([_("esri.views.3d.environment.EnvironmentRenderer")],I);export{I as EnvironmentRenderer};
