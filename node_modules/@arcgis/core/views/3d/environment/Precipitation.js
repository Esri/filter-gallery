/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import i from"../../../core/Accessor.js";import{releaseMaybe as e,disposeMaybe as r,isNone as s,isSome as o}from"../../../core/maybe.js";import{secondsFromMilliseconds as n}from"../../../core/time.js";import{property as a}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as h}from"../../../core/accessorSupport/decorators/subclass.js";import{s as c,a as p,n as _,d as m,e as u}from"../../../chunks/vec3.js";import{c as f}from"../../../chunks/vec3f32.js";import{c as l}from"../../../chunks/vec3f64.js";import{getReferenceEllipsoid as d}from"../../../geometry/projectionEllipsoid.js";import{P as g}from"../../../chunks/Precipitation.glsl.js";import{PrecipitationTechniqueConfiguration as w,PrecipitationTechnique as T}from"./PrecipitationTechnique.js";import{glLayout as y}from"../support/buffer/glUtil.js";import{newLayout as j}from"../support/buffer/InterleavedLayout.js";import{bindProjectionMatrix as b}from"../webgl-engine/core/shaderLibrary/util/View.glsl.js";import{AnimationTimer as v}from"../webgl-engine/lib/AnimationTimer.js";import{VertexAttribute as A}from"../webgl-engine/lib/VertexAttribute.js";import{WatchUpdatingTracking as I}from"../../support/WatchUpdatingTracking.js";import{BufferObject as q}from"../../webgl/BufferObject.js";import{PrimitiveType as P,Usage as C}from"../../webgl/enums.js";import{bindVertexBufferLayout as x,unbindVertexBufferLayout as R}from"../../webgl/Util.js";import{VertexArrayObject as S}from"../../webgl/VertexArrayObject.js";let U=class extends i{constructor(t){super(t),this._numParticles=25e4,this._rainSpeed=.1,this._snowSpeed=.01,this._opacity=1,this._width=500,this._offset=l(),this._tile=l(),this._particleColor=f(),this._particleColorAtNight=f(),this._nightMultiplier=.7,this._cameraDirection=f(),this._renderParameters={camera:null,time:0,radius:1},this._animation=new v,this._updatingTracking=new I,this._renderParameters.time=0,this._renderParameters.radius=d(t.view.spatialReference).radius,this._shaderTechniqueRepository=t.context.shaderTechniqueRepository}destroy(){this._updatingTracking.destroy(),this._numParticles=0,this._snowTechnique=e(this._snowTechnique),this._rainTechnique=e(this._rainTechnique),this._vao=r(this._vao),this._instanceIdBuffer=r(this._instanceIdBuffer)}get updating(){return this._updatingTracking.updating}get rainTechnique(){if(s(this._rainTechnique)){const t=new w;t.type=g.RAIN,this._rainTechnique=this._shaderTechniqueRepository.acquire(T,t)}return this._rainTechnique}get snowTechnique(){if(s(this._snowTechnique)){const t=new w;t.type=g.SNOW,this._snowTechnique=this._shaderTechniqueRepository.acquire(T,t)}return this._snowTechnique}update(t){return this._animation.advance(t)}render(t,i,e){const{rctx:r,camera:a}=t;this._ensureResources(r);const h=e===g.RAIN?this.rainTechnique:this.snowTechnique;if(s(h)||s(this._vao)||s(this._instanceIdBuffer))return;if(o(t.cloudsCompositionParams)&&(this._opacity=1-t.cloudsCompositionParams.fadeInOutHeight.factor),this._opacity<=0)return;const c=r.useTechnique(h);this._renderParameters.camera=a,this._renderParameters.time=(e===g.RAIN?this._rainSpeed:this._snowSpeed)*n(this._animation.time),this._update(c,a,e,t),r.bindVAO(this._vao);const p=T.attributeLocation;c.assertCompatibleVertexAttributeLocations(this._vao),x(r,p,this._instanceIdBuffer,O,0),r.capabilities.instancing.drawArraysInstanced(P.TRIANGLES,0,3,this._numParticles*i),R(r,p,this._instanceIdBuffer,O)}_update(t,i,e,r){const s=i.eye;this._tile[0]=Math.floor((s[0]+.5*this._width)/this._width),this._tile[1]=Math.floor((s[1]+.5*this._width)/this._width),this._tile[2]=Math.floor((s[2]+.5*this._width)/this._width),this._offset[0]=s[0]-this._tile[0]*this._width,this._offset[1]=s[1]-this._tile[1]*this._width,this._offset[2]=s[2]-this._tile[2]*this._width,t.setUniform1f("width",this._width),t.setUniform3fv("offset",this._offset),t.setUniformMatrix4fv("view",i.viewMatrix),t.setUniform3fv("cameraPosition",s),b(t,i.projectionMatrix),t.setUniform1f("time",this._renderParameters.time),e===g.RAIN?c(this._particleColor,.85,.85,.85):c(this._particleColor,1,1,1),p(this._particleColorAtNight,this._particleColor,this._nightMultiplier),_(this._cameraDirection,s);const o=Math.max(0,m(this._cameraDirection,r.scenelightingData.lightingMainDirection));u(this._particleColor,this._particleColorAtNight,this._particleColor,o),t.setUniform3fv("particleColor",this._particleColor),t.setUniform1f("opacity",this._opacity)}_ensureResources(t){o(this._vao)||(this._vao=this._createVertexArrayObject(t),o(this._instanceIdBuffer)||(this._instanceIdBuffer=this._createInstanceIndices(t)))}_createInstanceIndices(t){const i=[];for(let e=0;e<this._numParticles;e++)i.push(e);return q.createVertex(t,C.STATIC_DRAW,new Float32Array(i))}_createVertexArrayObject(t){const i=new Float32Array([-1,0,1,1,0,-1,1,0,1]);return new S(t,T.attributeLocation,{geometry:y(N)},{geometry:q.createVertex(t,C.STATIC_DRAW,i)})}};t([a({constructOnly:!0})],U.prototype,"context",void 0),t([a({constructOnly:!0})],U.prototype,"view",void 0),t([a({readOnly:!0})],U.prototype,"updating",null),t([a()],U.prototype,"_updatingTracking",void 0),U=t([h("esri.views.3d.environment.Precipitation")],U);const N=j().vec3f(A.POSITION),O=y(j().f32(A.INSTANCEFEATUREATTRIBUTE),1);export{U as Precipitation};
