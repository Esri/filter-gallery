/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{neverReached as e}from"../../../../core/compilerUtils.js";import{clamp as t,acosClamped as r,asinClamped as n,deg2rad as i}from"../../../../core/mathUtils.js";import{isSome as s}from"../../../../core/maybe.js";import{d as a}from"../../../../chunks/mat4.js";import{c}from"../../../../chunks/mat4f64.js";import{f as o,m as u,a as l,b as m,i as d,d as f,n as p,l as y,p as h}from"../../../../chunks/vec3.js";import{c as M}from"../../../../chunks/vec3f64.js";import{getReferenceEllipsoid as C}from"../../../../geometry/projectionEllipsoid.js";import{h as I,j as O}from"../../../../chunks/sphere.js";import{defaultApplyOptions as T,TiltMode as A,InteractionType as D,hasConstraintType as S,ConstraintTypes as w,adjustRangeForInteraction as R}from"./common.js";import{viewAngle as j}from"../../state/utils/viewUtils.js";function x(t,r,n=T,i=!0){V.eyeCenterDistance=0,V.requiresTwoSteps=!1;const s=P(t,r,n,void 0,V);if(0===s)return!1;switch(a(_,-s,r.viewRight),n.tiltMode){case A.LOOK_AROUND:u(K,r.viewForward,_),l(K,K,V.eyeCenterDistance),r.center=m(z,r.eye,K);break;case A.TUMBLE:o(K,r.center,r.eye),u(K,K,_),r.eye=o(z,r.center,K);break;default:e(n.tiltMode)}return r.up=u(z,r.up,_),!V.requiresTwoSteps||!i||x(t,r,n,!1)}function P(e,t,r=T,n=T,i){if(!e.state.constraints.tilt)return 0;const s=t.distance,a=e.state.constraints.tilt(s,J);return N(e,r,a),n.interactionType===D.TUMBLE&&S(n.selection,w.ALTITUDE)&&B(e,n.interactionStartCamera,a),r.tiltMode===A.LOOK_AROUND||n.tiltMode===A.LOOK_AROUND?v(e,t,a,i):U(e,t,a)}function U(e,r,n){const i=j(e.renderCoordsHelper,r.center,r.eye),s=i-t(i,n.min,n.max);return k(s)?s:0}function v(t,r,n,i){switch(i&&(i.requiresTwoSteps=!1),t.viewingMode){case"global":return q(t,r,n,i);case"local":return L(t,r,n,i);default:return void e(t.viewingMode)}}function L(e,r,n,i){const s=j(e.renderCoordsHelper,r.center,r.eye),a=t(s,n.min,n.max),c=s-a;if(!k(c))return 0;if(i){const t=e.pointsOfInterest.centerOnSurfaceFrequent.estimatedSurfaceAltitude,n=e.renderCoordsHelper.getAltitude(r.eye)-t,s=Math.cos(a);Math.abs(s)>1e-4?i.eyeCenterDistance=n/s:i.eyeCenterDistance=r.distance}return c}function q(e,r,n,i){const s=b(e,r,Q),a=t(s.tiltAtCenter,n.min,n.max);if(!k(s.tiltAtCenter-a))return 0;let c,o;return s.centerIsOnSurface?(c=E(s),o=g(s,c)):(c=s.constraints.clampTilt(s.eyeCenterDistance,s.tiltAtCenter),i&&c<Math.PI/2&&(i.requiresTwoSteps=!0,c=Math.PI/2-1e-5),o=F(s,c)),i&&(i.eyeCenterDistance=H(s,c)),o}function b(e,t,n){const i=e.pointsOfInterest.centerOnSurfaceFrequent.estimatedSurfaceAltitude,a=i+C(e.spatialReference).radius,c=e.renderCoordsHelper.intersectManifold(t.ray,i,z);return n.eyeCenterDistance=t.distance,n.centerIsOnSurface=!1,s(c)?(n.eyeCenterDistance=d(t.eye,c),n.tiltAtCenter=j(e.renderCoordsHelper,c,t.eye),n.centerIsOnSurface=!0):e.state.isLocal?n.tiltAtCenter=j(e.renderCoordsHelper,t.center,t.eye):(I(O(a),t.ray,z),n.eyeCenterDistance=d(t.eye,z),n.tiltAtCenter=r(-f(t.viewForward,p(z,z)))),n.radius=a,n.eyeRadius=y(t.eye),n.constraints=e.state.constraints,n}function k(e){return Math.abs(e)>1e-9}function E(e){const{constraints:t,eyeCenterDistance:r,tiltAtCenter:n}=e;let i=n,s=t.clampTilt(r,n);const a=H(e,s);if(t.clampTilt(a,n)===s)return s;let c=0;for(;c<10&&k(s-i);){const r=(i+s)/2,n=H(e,r);k(t.clampTilt(n,r)-r)?i=r:s=r,c++}return s}function H(e,r){if(!e.centerIsOnSurface)return e.eyeCenterDistance;const i=Math.PI-t(r,0,Math.PI),s=n(e.radius/e.eyeRadius*Math.sin(i)),a=Math.PI-i-s,c=Math.sin(a)/Math.sin(i);if(e.eyeRadius<e.radius&&c>1){const t=Math.PI-s,r=Math.PI-i-t;return Math.sin(r)/Math.sin(i)*e.eyeRadius}return c*e.eyeRadius}function g(e,t){const r=n(e.radius/e.eyeRadius*Math.sin(e.tiltAtCenter)),i=n(e.radius/e.eyeRadius*Math.sin(t));return e.eyeRadius>e.radius?r-i:i-r}function F(e,t){return e.tiltAtCenter-Math.PI/2-(t-Math.PI/2)}function N(e,t,r){if(t.interactionType===D.NONE)return;const{interactionStartCamera:n,interactionFactor:i}=t,{min:s,max:a}=r,c=P(e,n,T,t),o=0===c?0:j(e.renderCoordsHelper,n.center,n.eye);r.min=s,r.max=a,t.interactionType===D.TUMBLE?(S(t.selection,w.ALTITUDE)&&B(e,n,r),R(c,o,!0,i,G,r)):R(c,o,!1,i,G,r)}function B(e,t,n){if(e.state.isLocal)return;const i=e.state.constraints;if(!i.altitude)return;const s=h(t.center),a=Math.sqrt(s),c=t.distance,o=C(e.spatialReference).radius,u=i.altitude.min+o,l=i.altitude.max+o,m=(u*u-c*c-s)/(-2*a*c),d=(l*l-c*c-s)/(-2*a*c);n.min=Math.max(n.min,Math.min(Math.PI-r(d),n.max)),n.max=Math.min(n.max,Math.PI-r(m))}const K=M(),_=c(),z=M(),G=i(5),J={min:0,max:0},Q={constraints:null,radius:0,eyeRadius:0,centerIsOnSurface:!0,eyeCenterDistance:0,tiltAtCenter:0},V={eyeCenterDistance:0,requiresTwoSteps:!1};export{x as applyTiltConstraint,P as getTiltConstraintError};
