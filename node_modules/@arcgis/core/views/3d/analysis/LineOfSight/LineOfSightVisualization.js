/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as i}from"../../../../chunks/tslib.es6.js";import t from"../../../../Color.js";import e from"../../../../core/Accessor.js";import o from"../../../../core/Handles.js";import{makeHandle as n,handlesGroup as s}from"../../../../core/handleUtils.js";import{removeMaybe as r,destroyMaybe as l,isNone as a}from"../../../../core/maybe.js";import{watch as u,syncAndInitial as c}from"../../../../core/reactiveUtils.js";import{property as d}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/arrayUtils.js";import"../../../../core/has.js";import"../../../../core/accessorSupport/ensureType.js";import{subclass as m}from"../../../../core/accessorSupport/decorators/subclass.js";import{c as h}from"../../../../chunks/mat4f64.js";import{f as p}from"../../../../chunks/vec3.js";import{d as f,c as g}from"../../../../chunks/vec3f64.js";import{LineVisualElement as v}from"../../interactive/visualElements/LineVisualElement.js";let V=class extends e{constructor(i){super(i),this._lineOfSightVisualizations=[],this._handle=null,this._computationHandles=new o}initialize(){this._handle=this._connectAnalysis()}destroy(){this._handle=r(this._handle),this._computationHandles=l(this._computationHandles)}get visible(){return this.analysisViewData.visible}get testInfo(){return{visualizations:this._lineOfSightVisualizations}}get _configuration(){return this.analysisViewData.configuration}createLineOfSightVisualization(){const i=this._configuration,e={view:this.view,attached:!0,width:i.outerWidth,innerWidth:i.innerWidth},o=t.toUnitRGBA(i.visibleOuterColor),n=t.toUnitRGBA(i.visibleInnerColor),s=t.toUnitRGBA(i.occludedOuterColor),r=t.toUnitRGBA(i.occludedInnerColor),l=t.toUnitRGBA(i.undefinedOuterColor),a=t.toUnitRGBA(i.undefinedInnerColor),u={visibleLineVisualElement:new v({...e,color:o,innerColor:n}),occludedLineVisualElement:new v({...e,color:s,innerColor:r}),undefinedLineVisualElement:new v({...e,color:l,innerColor:a})};return this._lineOfSightVisualizations.push(u),u}destroyLineOfSightVisualization(i){i.visibleLineVisualElement=l(i.visibleLineVisualElement),i.occludedLineVisualElement=l(i.occludedLineVisualElement),i.undefinedLineVisualElement=l(i.undefinedLineVisualElement),this._lineOfSightVisualizations.splice(this._lineOfSightVisualizations.indexOf(i),1)}updateLineOfSightVisualization(i,e){const o=this._configuration,{computationResult:n,inputPoints:s}=i,{start:r,end:l,intersection:u,isValid:c,isTargetVisible:d}=n,{observer:m}=s,h=_;h[12]=m[0],h[13]=m[1],h[14]=m[2];const g=p(y,r,m),v=p(O,l,m),V=p(C,u,m),{visibleLineVisualElement:b,occludedLineVisualElement:L,undefinedLineVisualElement:S}=e,j=a(this.analysisViewData.elevationAlignedObserver)||a(i.elevationAlignedTargetLocation),z=this.visible&&!j;b.visible=z,L.visible=z,S.visible=z,z&&(b.geometry=null,L.geometry=null,S.geometry=null,c?d?(b.geometry=[[f(g),f(v)]],b.transform=h,b.color=t.toUnitRGBA(o.visibleOuterColor)):(b.geometry=[[f(g),f(V)]],b.transform=h,b.color=t.toUnitRGBA(o.occludedOuterColor),L.geometry=[[f(V),f(v)]],L.transform=h):(S.geometry=[[f(g),f(v)]],S.transform=h))}getLineOfSightVisualizationDependencies(i){const{computationResult:t}=i,{occludedOuterColor:e,visibleOuterColor:o}=this._configuration;return{computationResult:t,occludedOuterColor:e,visibleOuterColor:o,visible:this.visible}}_connectComputation(i){const t=this._computationHandles;if(t.has(i))return;const e=this.createLineOfSightVisualization();t.add([u((()=>this.getLineOfSightVisualizationDependencies(i)),(()=>this.updateLineOfSightVisualization(i,e)),c),n((()=>this.destroyLineOfSightVisualization(e)))],i)}_disconnectComputation(i){this._computationHandles.remove(i)}_connectAnalysis(){let i=null;return s([u((()=>this.analysisViewData.computations),(t=>{i=r(i),i=t.on("change",(i=>this._onComputationsCollectionChange(i))),this._onComputationsCollectionChange({target:t,added:t.items,removed:[],moved:[]})}),c),n((()=>i=r(i)))])}_onComputationsCollectionChange(i){i.added.forEach((i=>this._connectComputation(i))),i.removed.forEach((i=>this._disconnectComputation(i)))}};i([d({constructOnly:!0})],V.prototype,"analysis",void 0),i([d({constructOnly:!0})],V.prototype,"analysisViewData",void 0),i([d({constructOnly:!0})],V.prototype,"view",void 0),i([d({readOnly:!0})],V.prototype,"visible",null),i([d()],V.prototype,"testInfo",null),i([d()],V.prototype,"_configuration",null),V=i([m("esri.views.3d.analysis.LineOfSight.LineOfSightVisualization")],V);const y=g(),O=g(),C=g(),_=h();export{V as LineOfSightVisualization};
