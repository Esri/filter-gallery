/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import t from"../../../../core/Accessor.js";import{isNone as r,isSome as s}from"../../../../core/maybe.js";import{screenPointObjectToArray as o}from"../../../../core/screenUtils.js";import{property as i}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/arrayUtils.js";import"../../../../core/has.js";import"../../../../core/accessorSupport/ensureType.js";import{subclass as n}from"../../../../core/accessorSupport/decorators/subclass.js";import{d as c,a,n as p,b as m}from"../../../../chunks/vec3.js";import{d as l,c as d}from"../../../../chunks/vec3f64.js";import{create as u,copy as y,fromPoints as f}from"../../../../geometry/support/ray.js";import{sv2d as h}from"../../../../geometry/support/vectorStacks.js";import{getObjectId as g}from"../../../../layers/graphics/dehydratedFeatures.js";import{LineOfSightIntersectionResult as I}from"./LineOfSightIntersectionResult.js";import{isI3sIntersectorResult as j}from"../../layers/i3s/Intersector.js";import{fromScreen as w}from"../../support/geometryUtils/ray.js";import{isTerrainIntersectorResult as v}from"../../terrain/Intersector.js";import{tilesAreRelated as R}from"../../terrain/tileUtils.js";import{newIntersector as b}from"../../webgl-engine/lib/Intersector.js";import{StoreResults as C,IntersectorType as S}from"../../webgl-engine/lib/IntersectorInterfaces.js";import{toGraphic as T}from"../../webgl-engine/lib/intersectorUtilsConversions.js";let U=class extends t{constructor(e){super(e)}initialize(){this.intersector=b(this.view.state.viewingMode),this.intersector.options.hud=!1,this.intersector.options.store=C.MIN}getScreenPointIntersection(e){const t=o(e,h.get()),r=w(this.view.state.camera,t,O);return this._getRayIntersection(r)}_getRayIntersection(e){if(r(e))return null;this.view.sceneIntersectionHelper.intersectToolIntersectorRay(e,this.intersector);const t=this.intersector.results.min;if(!t.getIntersectionPoint(_))return null;const o=this.view.renderCoordsHelper.fromRenderCoords(_,this.view.spatialReference),i=l(t.normal),n=c(i,e.direction)>0?-1:1;if(a(i,i,n),j(t))return new I({type:S.OBJECT,id:`${t.target.layerUid}/${t.target.nodeIndex}/${t.target.componentIndex}`,point:o,normal:i,ray:y(e)});if(v(t))return new I({type:S.TERRAIN,id:t.target.lij.slice(),point:o,normal:i,ray:y(e)});const p=T(t,this.view);if(s(p)){const t=p.layer,r=p.sourceLayer;let s;if(r)if("scene"===r.type)s=g(p,r.objectIdField);else s=p.uid;else s=p.uid;return new I({type:S.OBJECT,id:`${t.uid}/${s}`,point:o,normal:i,ray:y(e)})}return null}_canUpdateFromIntersectionResult(e,t){if(r(e)||!t||e.type!==t.type)return!1;switch(e.type){case S.TERRAIN:{const r=e.id,s=t.id;return r[0]===s[0]&&r[1]===s[1]&&r[2]===s[2]||R(r,s)}case S.OBJECT:case S.I3S:return e.id===t.id}}updateFromIntersectionResult(e){let t;if(e.type===S.TERRAIN&&s(e.point)){const r=_,s=A,o=E;this.view.renderCoordsHelper.toRenderCoords(e.point,s),this.view.renderCoordsHelper.worldUpAtPosition(s,o);const i=this.view.basemapTerrain.elevationBounds,n=this.view.renderCoordsHelper.getAltitude(s),c=i?Math.abs(i.max-i.min)/Math.abs(n):100,l=n>0?1:-1;p(o,o),a(o,o,l*c),m(r,s,o),f(r,s,O),t=this._getRayIntersection(O)}else t=this._getRayIntersection(e.ray);return this._canUpdateFromIntersectionResult(t,e)?t.point:null}};e([i()],U.prototype,"view",void 0),e([i()],U.prototype,"intersector",void 0),U=e([n("esri.views.3d.analysis.LineOfSight.LineOfSightRayIntersector")],U);const _=d(),A=d(),E=d(),O=u();export{U as LineOfSightRayIntersector};
