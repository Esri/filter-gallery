/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import i from"../../../core/Accessor.js";import o from"../../../core/Collection.js";import s from"../../../core/Evented.js";import{HandleOwnerMixin as r}from"../../../core/HandleOwner.js";import{destroyMaybe as e,isSome as n,applySome as a}from"../../../core/maybe.js";import{property as l}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as p}from"../../../core/accessorSupport/decorators/subclass.js";import{c as y}from"../../../chunks/vec3f64.js";import{AnalysisView3D as u}from"./AnalysisView3D.js";import{LineOfSightConfiguration as c}from"./LineOfSight/LineOfSightConfiguration.js";import{LineOfSightController as h}from"./LineOfSight/LineOfSightController.js";import{LineOfSightVisualization as m}from"./LineOfSight/LineOfSightVisualization.js";let d=class extends(u(r(s.EventedMixin(i)))){constructor(t){super(t),this.type="line-of-sight-view-3d",this.computations=new o,this.elevationAlignedObserver=null,this.configuration=new c,this.observerEngineLocation=y(),this.cursorTarget=null}initialize(){const t=this.view,i=this.analysis;this._analysisController=new h({analysis:i,analysisViewData:this,view:t}),this._analysisVisualization=new m({analysis:i,analysisViewData:this,view:t}),this.handles.add([this._analysisController.on("result-changed",(t=>{t.target!==this.cursorTarget&&this.emit("result-changed",t)}))])}destroy(){this._analysisController=e(this._analysisController),this._analysisVisualization=e(this._analysisVisualization)}get results(){return this.computations.map((t=>t.result))}get priority(){return this._analysisController.priority}set priority(t){this._analysisController.priority=t}get updating(){return n(this._analysisController)&&this._analysisController.updating}getResultForTarget(t){const i=this.computations.find((i=>i.target===t));return a(i,(t=>t.result))}get testInfo(){return{visualization:this._analysisVisualization,controller:this._analysisController}}};t([l()],d.prototype,"type",void 0),t([l()],d.prototype,"analysis",void 0),t([l({readOnly:!0})],d.prototype,"results",null),t([l()],d.prototype,"priority",null),t([l()],d.prototype,"computations",void 0),t([l()],d.prototype,"elevationAlignedObserver",void 0),t([l()],d.prototype,"configuration",void 0),t([l()],d.prototype,"observerEngineLocation",void 0),t([l()],d.prototype,"cursorTarget",void 0),t([l()],d.prototype,"updating",null),t([l()],d.prototype,"_analysisController",void 0),t([l()],d.prototype,"_analysisVisualization",void 0),d=t([p("esri.views.3d.analysis.LineOfSightAnalysisView3D")],d);const g=d;export{g as default};
