/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../chunks/tslib.es6.js";import i from"../../../../core/Accessor.js";import e from"../../../../core/Handles.js";import{isNone as s,isSome as a,destroyMaybe as r}from"../../../../core/maybe.js";import{watch as o,syncAndInitial as l}from"../../../../core/reactiveUtils.js";import{whenOnce as n}from"../../../../core/watchUtils.js";import{property as d}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/arrayUtils.js";import"../../../../core/has.js";import"../../../../core/accessorSupport/ensureType.js";import{subclass as h}from"../../../../core/accessorSupport/decorators/subclass.js";import{u as p,m}from"../../../../chunks/mat4.js";import{s as u,l as c}from"../../../../chunks/vec3.js";import{sv3d as y,sm4d as _}from"../../../../geometry/support/vectorStacks.js";import{PLANE_OUTLINE_COLOR as v,PLANE_OUTLINE_WIDTH as w,PLANE_PREVIEW_OUTLINE_WIDTH as V,PLANE_BACKGROUND_COLOR as f,GRID_COLOR as g}from"../../interactive/analysisTools/slice/sliceToolConfig.js";import{createGridVisualElement as b,createOutlineVisualElement as j,calculateBoundedPlaneTranslateRotate as E}from"../../interactive/analysisTools/slice/sliceToolUtils.js";import{createStipplePatternSimple as S}from"../../webgl-engine/materials/lineStippleUtils.js";let k=class extends i{constructor(t){super(t),this._handles=new e,this._gridVisualElement=null,this._outlineVisualElement=null,this.state="pending",this.showGrid=!1,this.editable=!0}get ready(){return"ready"===this.state}initialize(){this._initialize()}async _initialize(){if("destroyed"===this.state||"ready"===this.state)return;await n(this.view,"ready",!0);const t=this.analysisViewData;if(s(t))throw new Error("expected internal object to be valid");this._gridVisualElement=b(this.view),this._outlineVisualElement=j(this.view),this._handles.add([o((()=>({visible:a(t.plane)&&this.analysisViewData.visible,active:this.analysisViewData.active,editable:this.editable,showGrid:this.showGrid})),(t=>this._updateMaterials(t)),l),o((()=>t.plane),(t=>this._updatePlane(t)),l)],"internal"),this._set("state","ready")}destroy(){"destroyed"!==this.state&&"pending"!==this.state&&(this._handles.destroy(),this._gridVisualElement=r(this._gridVisualElement),this._outlineVisualElement=r(this._outlineVisualElement),this.set("view",null),this._set("state","destroyed"))}async whenReady(){return await n(this,"ready"),this}_updatePlane(t){if(s(t))return;const i=u(y.get(),c(t.basis1),c(t.basis2),1),e=p(_.get(),i),a=E(t,_.get()),r=m(e,a,e);this._outlineVisualElement.transform=r,this._gridVisualElement.transform=r}_updateMaterials({visible:t,active:i,editable:e,showGrid:s}){this._outlineVisualElement.color=v,this._outlineVisualElement.width=e?w:V,this._outlineVisualElement.stipplePattern=i?null:S(5);const a=s?g:[0,0,0,0];this._gridVisualElement.backgroundColor=f,this._gridVisualElement.gridColor=a,this._gridVisualElement.visible=t,this._outlineVisualElement.visible=t}};t([d({readOnly:!0})],k.prototype,"state",void 0),t([d()],k.prototype,"view",void 0),t([d()],k.prototype,"analysis",void 0),t([d()],k.prototype,"analysisViewData",void 0),t([d()],k.prototype,"ready",null),t([d()],k.prototype,"showGrid",void 0),t([d()],k.prototype,"editable",void 0),k=t([h("esri.views.3d.analysis.Slice.SliceVisualization")],k);export{k as SliceVisualization};
