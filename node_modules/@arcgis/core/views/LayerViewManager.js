/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import r from"../core/CollectionFlattener.js";import i from"../core/Error.js";import{HandleOwner as t}from"../core/HandleOwner.js";import a from"../core/Logger.js";import{someMap as s}from"../core/MapUtils.js";import{isNone as o,isSome as l,removeMaybe as n}from"../core/maybe.js";import{createDeferred as y,isAbortError as h,onAbort as w,throwIfAborted as p}from"../core/promiseUtils.js";import{on as d,watch as c,syncAndInitial as u}from"../core/reactiveUtils.js";import{schedule as m}from"../core/scheduling.js";import{property as f}from"../core/accessorSupport/decorators/property.js";import"../core/arrayUtils.js";import"../core/has.js";import"../core/accessorSupport/ensureType.js";import{subclass as v}from"../core/accessorSupport/decorators/subclass.js";import{WatchUpdatingTracking as _}from"./support/WatchUpdatingTracking.js";const g=a.getLogger("esri.views.LayerViewManager");class V{constructor(e,r,t){this.layer=e,this.view=r,this.layerViewImporter=t,this._controller=new AbortController,this._deferred=y(),this._started=!1,this.done=!1,w(this._controller.signal,(()=>{const r=new i("cancelled:layerview-create","layerview creation cancelled",{layer:e});this._deferred.reject(r)}))}get promise(){return this._deferred.promise}destroy(){this._controller.abort();const{layerView:e}=this;if(!e)return;const{layer:r,view:i}=this;r.emit("layerview-destroy",{view:i,layerView:e}),i.emit("layerview-destroy",{layer:r,layerView:e}),this.done=!0,this.layer=null,this.layerView=null,this.view=null,this.layerViewImporter=null}async start(){if(this._started)return;this._started=!0;const{_controller:{signal:e},layer:r,view:t}=this;this._map=t.map;try{var a,s;let l,y;if(await r.load({signal:e}),"prefetchResources"in r&&await r.prefetchResources({signal:e}),r.createLayerView)l=await r.createLayerView(t,{signal:e});else{if(!this.layerViewImporter.hasLayerViewModule(r))throw new i("layer:view-not-supported","No layerview implementation was found");const a=await this.layerViewImporter.importLayerView(r);p(e),l="default"in a?new a.default({layer:r,view:t}):new a({layer:r,view:t})}const h=()=>{y=n(y),l.destroyed||l.destroy(),l.layer=null,l.parent=null,l.view=null,this.done=!0};y=w(e,h),p(e);try{await l.when()}catch(o){throw h(),o}if(!(null==(a=this._map)||null==(s=a.allLayers)?void 0:s.includes(r)))return h(),void this._deferred.reject(new i("view:no-layerview-for-layer","The layer has been removed from the map",{layer:r}));this.layerView=l,r.emit("layerview-create",{view:t,layerView:l}),t.emit("layerview-create",{layer:r,layerView:l}),this.done=!0,this._deferred.resolve(l)}catch(o){r.emit("layerview-create-error",{view:t,error:o}),t.emit("layerview-create-error",{layer:r,error:o}),this.done=!0,this._deferred.reject(new i("layerview:create-error","layerview creation failed",{layer:r,error:o}))}}}let L=class extends t{constructor(e){super(e),this._layerLayerViewInfoMap=new Map,this._watchUpdatingTracking=new _,this.supportsGround=!0,this._preloadLayerViewModules=()=>{var e;const r=null==(e=this.view.map)?void 0:e.allLayers;if(r)for(const i of r)this.layerViewImporter.hasLayerViewModule(i)&&this.layerViewImporter.importLayerView(i)},this._reschedule=()=>(o(this._workPromise)&&(this._workPromise=y()),this.handles.remove("reschedule"),this.handles.add(m(this._doWork),"reschedule"),this._workPromise.promise),this._doWork=()=>{var e,i,t;const a=this.view.map;if(this._map!==a&&(this.clear(),this._map=a),o(this._workPromise))return void this.notifyChange("updating");this.handles.remove("reschedule"),this.handles.remove("collection-change");const s=new r({getCollections:()=>this._rootCollectionNames.map((e=>this.get(e))),getChildrenFunction:e=>e&&"layers"in e?e.layers:null});if(!s)return this._workPromise.resolve(),void(this._workPromise=null);for(const r of s)this._createLayerView(r);this._refreshCollections();for(const[r,o]of this._layerLayerViewInfoMap)s.includes(r)||(this._layerLayerViewInfoMap.delete(o.layer),o.destroy());const l=s.filter((e=>"group"===e.type)).map((e=>e.layers)),n=[null==a||null==(e=a.ground)?void 0:e.layers,null==a||null==(i=a.basemap)?void 0:i.baseLayers,null==a||null==(t=a.basemap)?void 0:t.referenceLayers,null==a?void 0:a.layers,...l].filter((e=>!!e));this.handles.add(n.map((e=>this._watchUpdatingTracking.addOnCollectionChange((()=>e),this._reschedule))),"collection-change"),this._workPromise.resolve(),this._workPromise=null}}initialize(){this.handles.add([d((()=>{var e,r;return null==(e=this.view)||null==(r=e.map)?void 0:r.allLayers}),"change",this._preloadLayerViewModules,{onListenerAdd:this._preloadLayerViewModules}),c((()=>{const e=this.view,r=null==e?void 0:e.map;return[null==r?void 0:r.basemap,null==r?void 0:r.ground,null==r?void 0:r.layers,null==e?void 0:e.ready]}),(()=>this._reschedule()),u)]),this._preloadLayerViewModules(),this._reschedule()}destroy(){this.clear(),this._watchUpdatingTracking.destroy(),this._map=null}get _layersToLayerViews(){const e=[["view.map.basemap.baseLayers","view.basemapView.baseLayerViews"],["view.map.layers","view.layerViews"],["view.map.basemap.referenceLayers","view.basemapView.referenceLayerViews"]];return this.supportsGround&&e.push(["view.map.ground.layers","view.groundView.layerViews"]),new Map(e)}get _rootCollectionNames(){return Array.from(this._layersToLayerViews.keys())}get updating(){return l(this._workPromise)||this._watchUpdatingTracking.updating||s(this._layerLayerViewInfoMap,(e=>!e.done))}get updatingRemaining(){let e=0;for(const r of this._layerLayerViewInfoMap.values())r.done||++e;return e}clear(){if(!this.destroyed){for(const e of this._layerLayerViewInfoMap.values())e.destroy();this._layerLayerViewInfoMap.clear(),this._refreshCollections()}}async whenLayerView(e){if(await this._reschedule(),!this._layerLayerViewInfoMap.has(e))throw new i("view:no-layerview-for-layer","No layerview has been found for the layer",{layer:e});return this._layerLayerViewInfoMap.get(e).promise}_refreshCollections(){for(const[e,r]of this._layersToLayerViews)this._populateLayerViewsOwners(this.get(e),this.get(r),this.view);this.notifyChange("updating"),this.notifyChange("updatingRemaining")}_populateLayerViewsOwners(e,r,i){if(!e||!r)return void(r&&r.removeAll());let t=0;for(const a of e){const e=this._layerLayerViewInfoMap.get(a);if(!e||!e.layerView)continue;const s=e.layerView;s.layer=a,s.parent=i,r.getItemAt(t)!==s&&r.splice(t,0,s),a.layers&&this._populateLayerViewsOwners(a.layers,s.layerViews,s),t+=1}t<r.length&&r.splice(t,r.length)}_createLayerView(e){if(this._layerLayerViewInfoMap.has(e))return this.view.ready&&this._layerLayerViewInfoMap.get(e).start(),this.notifyChange("updating"),void this.notifyChange("updatingRemaining");e.load().catch((()=>{})),this.layerViewImporter.hasLayerViewModule(e)&&this.layerViewImporter.importLayerView(e);const r=new V(e,this.view,this.layerViewImporter);r.promise.then((()=>this._refreshCollections()),(r=>{var i,t;r&&(h(r)||"cancelled:layerview-create"===r.name)||g.error(`Failed to create layerview for layer title:'${null!=(i=e.title)?i:"no title"}', id:'${null!=(t=e.id)?t:"no id"}' of type '${e.type}'.`,{layer:e,error:r});this._refreshCollections()})),this._layerLayerViewInfoMap.set(e,r),this.view.ready&&r.start(),this.notifyChange("updating"),this.notifyChange("updatingRemaining")}};e([f()],L.prototype,"_workPromise",void 0),e([f({readOnly:!0})],L.prototype,"_watchUpdatingTracking",void 0),e([f({readOnly:!0})],L.prototype,"_layersToLayerViews",null),e([f({readOnly:!0})],L.prototype,"_rootCollectionNames",null),e([f()],L.prototype,"layerViewImporter",void 0),e([f()],L.prototype,"supportsGround",void 0),e([f({readOnly:!0})],L.prototype,"updating",null),e([f({readOnly:!0})],L.prototype,"updatingRemaining",null),e([f({constructOnly:!0})],L.prototype,"view",void 0),L=e([v("esri.views.LayerViewManager")],L);const M=L;export{M as default};
