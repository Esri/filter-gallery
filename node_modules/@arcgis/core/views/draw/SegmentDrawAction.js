/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../geometry.js";import t from"../../core/Handles.js";import{isSome as i,abortMaybe as s,isNone as r,destroyMaybe as o}from"../../core/maybe.js";import{property as n}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{subclass as a}from"../../core/accessorSupport/decorators/subclass.js";import{ViewingMode as h}from"../ViewingMode.js";import d from"./DrawAction.js";import{DrawTool as p}from"./DrawTool.js";import{VertexAddEvent as _,CursorUpdateEvent as l,DrawCompleteEvent as c}from"./input/DrawEvents.js";import{createViewAlignedCoordinateSystem as m}from"./support/surfaceCoordinateSystems.js";import{ViewEventPriorities as g}from"../input/InputManager.js";import{SKETCH_KEYS as v}from"../interactive/keybindings.js";import{EditGeometry as w,Component as u}from"../interactive/editGeometry/EditGeometry.js";import{EditGeometryOperations as T}from"../interactive/editGeometry/EditGeometryOperations.js";import{createScreenPointFromEvent as y}from"../support/screenUtils.js";import P from"../../geometry/Point.js";const k=["freehand","click"];let H=class extends d{constructor(e){super(e),this._isDragging=!1,this._panEnabled=!1,this._viewHandles=new t,this._activePointerId=null,this._addVertexOnPointerUp=!1,this.viewAlignedCoordinateSystem=null,this.mode="freehand"}initialize(){"2d"===this.view.type?this._addViewHandles():this._addDrawTool(this.view)}destroy(){"2d"===this.view.type?(this._removeViewHandles(),this._viewHandles.destroy()):this._removeDrawTool(),this.emit("destroy")}complete(){"2d"===this.view.type?this._completeDrawing():this._drawTool.completeCreateOperation()}getGeometryZValue(){return this.vertices.length>0&&this.vertices[0].length>2?this.vertices[0][2]:this._get("defaultZ")}_addViewHandles(){this._removeViewHandles(),"click"===this.mode?this._viewHandles.add(this._getClickModeViewHandles()):this._viewHandles.add(this._getDragModeViewHandles())}_getDragModeViewHandles(){return[this.view.on("immediate-click",(e=>{if(e.stopPropagation(),e.mapPoint&&!this._panEnabled){const t=this.getCoordsFromScreenPoint(y(e));i(t)&&(this._vertexAddHandler(e),this._drawCompleteHandler(e))}}),g.TOOL),this.view.on("pointer-down",(e=>{this._shouldHandlePointerEvent(e)&&(this._snappingTask=s(this._snappingTask),this._panEnabled||(this._resetGeometry(),this._addVertexOnPointerUp=!0,this._cursorScreenPoint=y(e),this._activePointerId=e.pointerId,this._vertexAddHandler(e),this._isDragging=!1,"touch"===e.pointerType&&this._updateCursor(e.native)))}),g.TOOL),this.view.on("pointer-move",(e=>{this._snappingTask=s(this._snappingTask),r(this._activePointerId)&&"touch"!==e.pointerType&&(this._cursorScreenPoint=y(e),this._updateCursor(e.native))}),g.TOOL),this.view.on("pointer-drag",(e=>{this._shouldHandlePointerEvent(e)&&(this._snappingTask=s(this._snappingTask),this._isDragging=!0,this._cursorScreenPoint=y(e),this._updateCursor(e.native))}),g.TOOL),this.view.on("pointer-up",(e=>{this._shouldHandlePointerEvent(e)&&this._addVertexOnPointerUp&&(this._snappingTask=s(this._snappingTask),this._activePointerId=null,this._isDragging&&this._vertexAddHandler(e),2===this._committedVertices.length&&this._drawCompleteHandler(e),this._isDragging=!1)}),g.TOOL),this.view.on("key-down",(e=>{e.key===v.complete&&this._cursorScreenPoint?(this._snappingTask=s(this._snappingTask),this._vertexAddHandler(e),this._drawCompleteHandler(e)):e.key===v.pan&&(this._panEnabled=!0)}),g.TOOL),this.view.on("key-up",(e=>{e.key===v.pan&&(this._panEnabled=!1)}),g.TOOL),this.view.on("drag",(e=>{i(this._activePointerId)&&e.stopPropagation()}),g.TOOL),this.view.on("drag",["Shift"],(e=>{e.stopPropagation()}),g.TOOL)]}_getClickModeViewHandles(){return[this.view.on("pointer-down",(e=>{this._snappingTask=s(this._snappingTask),this._cursorScreenPoint=y(e),this._activePointerId=e.pointerId,this._isDragging=!1,"touch"===e.pointerType&&this._updateCursor(e.native)}),g.TOOL),this.view.on("pointer-move",(e=>{this._snappingTask=s(this._snappingTask),this._cursorScreenPoint=y(e),r(this._activePointerId)&&"touch"!==e.pointerType&&this._updateCursor(e.native)}),g.TOOL),this.view.on("pointer-drag",(e=>{this._shouldHandlePointerEvent(e)&&(this._snappingTask=s(this._snappingTask),this._isDragging=!0)}),g.TOOL),this.view.on("pointer-up",(e=>{this._shouldHandlePointerEvent(e)&&(this._snappingTask=s(this._snappingTask),this._activePointerId=null,e.stopPropagation(),this._isDragging||this._vertexAddHandler(e),2!==this.vertices.length||this._isDragging||this._drawCompleteHandler(e),this._isDragging=!1)}),g.TOOL),this.view.on("key-down",(e=>{e.key===v.vertexAdd&&this._cursorScreenPoint&&(this._vertexAddHandler(e),2===this.vertices.length&&this._drawCompleteHandler(e)),e.key===v.complete&&this._cursorScreenPoint&&2===this.vertices.length&&(this._vertexAddHandler(e),this._drawCompleteHandler(e))}),g.TOOL)]}_removeViewHandles(){this._viewHandles.removeAll()}_addDrawTool(e){this._drawTool=new p({view:e,elevationInfo:this.elevationInfo,hasZ:this.hasZ,geometryType:"segment",mode:this.mode}),this.view.addAndActivateTool(this._drawTool),this._drawTool.on("vertex-add",(e=>{1===e.vertices.length&&this.emit("vertex-add",new _(this.view,null,e.vertices[0].vertexIndex,this._drawTool.getVertexCoords()))})),this._drawTool.on("cursor-update",(e=>{1===e.vertices.length&&this.emit("cursor-update",new l(this.view,null,e.vertices[0].vertexIndex,this._drawTool.getVertexCoords()))})),this._drawTool.on("complete",(e=>{this.emit("draw-complete",new c(null,this._drawTool.getVertexCoords())),this._removeDrawTool()}))}_removeDrawTool(){this.view.tools.remove(this._drawTool),this._drawTool=o(this._drawTool)}_addVertex(e,t){const i=this._coordinateHelper.arrayToVector(e);if(this._isDuplicateOfLastVertex(i))return;this._lastVertexUnsnapped=this._stagedVertexUnsnapped,this._popCursorVertex(),this._editGeometryOperations.appendVertex(i),1===this._committedVertices.length&&(this.viewAlignedCoordinateSystem=m(this.view,this._committedVertices[0]));const s=this._committedVertices.length-1,r=new _(this.view,t,s,this.vertices);this.emit("vertex-add",r)}_updateCursor(e){if(this._popCursorVertex(),!this._cursorScreenPoint)return;const t=this.getCoordsAndPointFromScreenPoint(this._cursorScreenPoint);if(i(t)){this._pushCursorVertex(t.vertex);const s=()=>new l(this.view,e,this._activeComponent.vertices.length,this.vertices,i(this._stagedVertex)?new P(this._stagedVertex):null);this.emit("cursor-update",s()),i(this._snappingTask)&&this._snappingTask.promise.then((e=>{e.valid&&this.emit("cursor-update",s())}),(()=>{}))}}_completeDrawing(e){if(this._activePointerId=null,this._popCursorVertex(),this._cursorScreenPoint=null,this._isDragging=!1,this._snappingTask=s(this._snappingTask),i(this._snappingManager)&&this._snappingManager.doneSnapping(),this.vertices.length<1)return;const t=new c(e,this.vertices);this.emit("draw-complete",t),t.defaultPrevented||this._removeViewHandles()}_resetGeometry(){this._editGeometryOperations.destroy(),this._editGeometryOperations=new T(new w("polygon",this._coordinateHelper,h.Local)),this._activeComponent=new u(this._coordinateHelper.spatialReference,h.Local),this._editGeometryOperations.data.components.push(this._activeComponent)}_shouldHandlePointerEvent(e){return O(e)&&(r(this._activePointerId)||this._activePointerId===e.pointerId)}};function O(e){return"mouse"!==e.pointerType||0===e.button}e([n({type:k})],H.prototype,"mode",void 0),H=e([a("esri/views/2d/engine/markup/SegmentDrawAction")],H);export{H as SegmentDrawAction};
