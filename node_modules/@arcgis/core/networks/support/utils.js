/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{queryAllJSON as e}from"../../layers/support/featureQueryAll.js";import r from"../../rest/support/FeatureSet.js";function t(e,r){const t=[],o=new Map;for(const n of r){const r=e.getLayerIdBySourceId(n.networkSourceId);let t=o.get(r);void 0===t&&(t=[]),t.push(n.objectId),o.set(r,t)}const a=e.featureServiceUrl;return o.forEach(((e,r)=>t.push({layerUrl:`${a}/${r}`,objectIds:e}))),t}async function o(t){const o=t.layers,a=t.layerInfos,n=t.returnGeometry||!1,s=t.outSpatialReference;await Promise.all(o.map((e=>e.load())));return(await Promise.all(o.map((async t=>{var o;const l=a.find((e=>{var r;return e.layerUrl===(null==(r=t.parsedUrl)?void 0:r.path)}));if(!l||null==(o=l.objectIds)||!o.length)return{layer:t,featureSet:void 0};const u=t.createQuery();u.returnGeometry=n,u.outFields=l.outFields||["*"],u.outSpatialReference=s,u.gdbVersion=t.gdbVersion,u.objectIds=l.objectIds;const c=r.fromJSON(await e(t,u));return{layer:t,featureSet:c}})))).filter((e=>void 0!==e.featureSet))}export{o as getFeaturesFromLayers,t as getObjectIdsFromElements};
