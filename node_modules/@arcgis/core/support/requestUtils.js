/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import e from"../core/has.js";import{isSome as r}from"../core/maybe.js";import{isAborted as o}from"../core/promiseUtils.js";function t(t,i,s=!1,c){return new Promise(((d,a)=>{if(o(c))return void a(n());let m=()=>{v(),a(new Error(`Unable to load ${i}`))},l=()=>{const e=t;v(),d(e)},u=()=>{if(!t)return;const e=t;v(),e.src="",a(n())};const v=()=>{e("esri-image-decode")||(t.removeEventListener("error",m),t.removeEventListener("load",l)),m=null,l=null,t=null,r(c)&&c.removeEventListener("abort",u),u=null,s&&URL.revokeObjectURL(i)};r(c)&&c.addEventListener("abort",u),e("esri-image-decode")?t.decode().then(l,m):(t.addEventListener("error",m),t.addEventListener("load",l))}))}function n(){try{return new DOMException("Aborted","AbortError")}catch{const e=new Error;return e.name="AbortError",e}}export{t as loadImageAsync};
